<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>东方骄子</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://kangyonggan.com/"/>
  <updated>2019-01-24T10:30:20.641Z</updated>
  <id>http://kangyonggan.com/</id>
  
  <author>
    <name>康永敢</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>一套完整的生成缩略图及点击缩略图显示原图的解决方案</title>
    <link href="http://kangyonggan.com/2019/01/24/%E4%B8%80%E5%A5%97%E5%AE%8C%E6%95%B4%E7%9A%84%E7%94%9F%E6%88%90%E7%BC%A9%E7%95%A5%E5%9B%BE%E5%8F%8A%E7%82%B9%E5%87%BB%E7%BC%A9%E7%95%A5%E5%9B%BE%E6%98%BE%E7%A4%BA%E5%8E%9F%E5%9B%BE%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://kangyonggan.com/2019/01/24/一套完整的生成缩略图及点击缩略图显示原图的解决方案/</id>
    <published>2019-01-24T10:30:20.641Z</published>
    <updated>2019-01-24T10:30:20.641Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p><a href="https://kangyonggan.com/album">https://kangyonggan.com/album</a><br><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fzhrslbd1fj31110u0thf.jpg" alt=""></p><a id="more"></a><h2 id="使用缩略图的优点"><a href="#使用缩略图的优点" class="headerlink" title="使用缩略图的优点"></a>使用缩略图的优点</h2><p>可以减轻服务器压力，给用户更好的体验。一个界面可能有很多图片，但是用户关心的图片可能只有那么一两个，如果我们加载全部原图，并且原图很大的时候，会浪费很多服务器资源，并且用户会看见大量图片处于加载中(如下图)。<br>如果使用缩略图，就可以解决这个问题。<br><img src="https://ws2.sinaimg.cn/large/006tNc79ly1fzhrsp4qjfj31mk0oqmyi.jpg" alt=""></p><h2 id="如何生成缩略图"><a href="#如何生成缩略图" class="headerlink" title="如何生成缩略图"></a>如何生成缩略图</h2><p>如果只是简单的生成缩略图，方法有很多，但是如何生成一个”好看”的缩略图呢？先捋一下思路，如下：</p><h3 id="仅压缩"><a href="#仅压缩" class="headerlink" title="仅压缩"></a>仅压缩</h3><p>如果强行把一个长图压缩成宽图，就可能导致图片中的人变矮变胖。<br><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fzhrsmp8bpj310u0g476z.jpg" alt=""></p><h3 id="仅剪裁"><a href="#仅剪裁" class="headerlink" title="仅剪裁"></a>仅剪裁</h3><p>如果把一个大图，比如：800x2000的图，剪裁成400x300的图，可能图片中的主要内容根本都显示出来。<br><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fzhrubyo37j316x0u0qub.jpg" alt=""></p><h3 id="剪裁中心区域"><a href="#剪裁中心区域" class="headerlink" title="剪裁中心区域"></a>剪裁中心区域</h3><p>一般来说，图片中心是主要内容，我们剪裁中心区域400x300的图。<br><img src="https://ws2.sinaimg.cn/large/006tNc79ly1fzhry5hld2j319t0u0u0b.jpg" alt=""></p><h3 id="等比例压缩后再剪裁中心区域"><a href="#等比例压缩后再剪裁中心区域" class="headerlink" title="等比例压缩后再剪裁中心区域"></a>等比例压缩后再剪裁中心区域</h3><p>虽然好了很多，但是还有一个明显的问题，那就是图片包含的内容太少了，因此我先把原图等比例压缩成400x1000的图片，在剪裁中心区域的400x300。<br><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fzhs4u982aj317u0u04o7.jpg" alt=""></p><p>注意：如果是宽图，先把高度压成300，再把宽度等比例压缩，最后剪裁中心区域。</p><h3 id="java代码实现"><a href="#java代码实现" class="headerlink" title="java代码实现"></a>java代码实现</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">package com.kangyonggan.app.util;</span><br><span class="line"></span><br><span class="line">import javax.imageio.ImageIO;</span><br><span class="line">import java.awt.geom.AffineTransform;</span><br><span class="line">import java.awt.image.AffineTransformOp;</span><br><span class="line">import java.awt.image.BufferedImage;</span><br><span class="line">import java.io.FileInputStream;</span><br><span class="line">import java.io.FileOutputStream;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @author kangyonggan</span><br><span class="line"> * @date 6/23/17</span><br><span class="line"> */</span><br><span class="line">public final class Images &#123;</span><br><span class="line"></span><br><span class="line">    private Images() &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 生成缩略图。</span><br><span class="line">     *</span><br><span class="line">     * @param source 原图（大）</span><br><span class="line">     * @param desc   目标图片</span><br><span class="line">     * @param width  目标宽</span><br><span class="line">     * @param height 目标高</span><br><span class="line">     * @throws Exception</span><br><span class="line">     */</span><br><span class="line">    public static void thumb(String source, String desc, int width, int height) throws Exception &#123;</span><br><span class="line">        BufferedImage image = ImageIO.read(new FileInputStream(source));</span><br><span class="line"></span><br><span class="line">        // 判断原图的长宽比是不是比目标图的长宽比大，用于计算压缩后的宽和高</span><br><span class="line">        int pressWidth;</span><br><span class="line">        int pressHeight;</span><br><span class="line">        if (image.getHeight() * 1.0 / image.getWidth() &gt; height * 1.0 / width) &#123;</span><br><span class="line">            // 原图是高图</span><br><span class="line">            // 让压缩后的宽度等于目标宽度</span><br><span class="line">            pressWidth = width;</span><br><span class="line">            // 等比例计算高度</span><br><span class="line">            pressHeight = (int) (1.0 * image.getHeight() * width / image.getWidth());</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            // 原图是宽图</span><br><span class="line">            // 让压缩后的高度等于目标高度</span><br><span class="line">            pressHeight = height;</span><br><span class="line">            // 等比例计算高度</span><br><span class="line">            pressWidth = (int) (1.0 * image.getWidth() * height / image.getHeight());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 先压缩</span><br><span class="line">        BufferedImage temp = zoomImage(image, pressWidth, pressHeight);</span><br><span class="line"></span><br><span class="line">        // 再截取</span><br><span class="line">        int x = (temp.getWidth() - width) / 2;</span><br><span class="line">        int y = (temp.getHeight() - height) / 2;</span><br><span class="line">        temp = temp.getSubimage(x, y, width, height);</span><br><span class="line"></span><br><span class="line">        // 最后写文件</span><br><span class="line">        ImageIO.write(temp, &quot;png&quot;, new FileOutputStream(desc));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 缩放图片</span><br><span class="line">     *</span><br><span class="line">     * @param image</span><br><span class="line">     * @param w</span><br><span class="line">     * @param h</span><br><span class="line">     * @throws Exception</span><br><span class="line">     */</span><br><span class="line">    private static BufferedImage zoomImage(BufferedImage image, int w, int h) throws Exception &#123;</span><br><span class="line">        double wr = w * 1.0 / image.getWidth();</span><br><span class="line">        double hr = h * 1.0 / image.getHeight();</span><br><span class="line"></span><br><span class="line">        AffineTransformOp ato = new AffineTransformOp(AffineTransform.getScaleInstance(wr, hr), null);</span><br><span class="line">        return ato.filter(image, null);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) throws Exception &#123;</span><br><span class="line">        thumb(&quot;/Users/kyg/Desktop/origin.jpeg&quot;, &quot;/Users/kyg/Desktop/demo.png&quot;, 400, 300);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面过程仅是生成缩略图，当生成缩略图后，我们要在网站上展示缩略图，点击放大可查看原图。为此，我写了一个jQuery插件，如下。</p><h2 id="zoomer的使用"><a href="#zoomer的使用" class="headerlink" title="zoomer的使用"></a>zoomer的使用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul class=&quot;list&quot;&gt;</span><br><span class="line">    &lt;li&gt;</span><br><span class="line">        &lt;img src=&quot;thubm_1.png&quot; data-origin=&quot;1.png&quot;/&gt;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">    &lt;li&gt;</span><br><span class="line">        &lt;img src=&quot;thubm_2.png&quot;/&gt;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">    &lt;li&gt;</span><br><span class="line">        &lt;img src=&quot;thubm_3.png&quot; data-origin=&quot;3.png&quot;/&gt;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">&lt;script src=&quot;jquery/jquery-1.8.3.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;zoomer/zoomer.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    $(function () &#123;</span><br><span class="line">        $(&quot;.list&quot;).zoomer();</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="zoomer-js源码"><a href="#zoomer-js源码" class="headerlink" title="zoomer.js源码"></a>zoomer.js源码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 图片缩放</span><br><span class="line"> *</span><br><span class="line"> * @author kangyonggan</span><br><span class="line"> * @since 2017/3/21</span><br><span class="line"> */</span><br><span class="line">(function ($) &#123;</span><br><span class="line">    /**</span><br><span class="line">     * 总入口</span><br><span class="line">     *</span><br><span class="line">     * @param $target</span><br><span class="line">     * @param settings</span><br><span class="line">     */</span><br><span class="line">    function Zoomer($target, settings) &#123;</span><br><span class="line">        // 把settings的属性合并到defaults，并且不改变defaults</span><br><span class="line">        settings = $.extend(true, $.fn.zoomer.defaults, settings);</span><br><span class="line"></span><br><span class="line">        // 模态框图层</span><br><span class="line">        var $overlay = $();</span><br><span class="line">        // 全部图片</span><br><span class="line">        var $allImgs = $target.find(&quot;img&quot;);</span><br><span class="line"></span><br><span class="line">        // 修改光标</span><br><span class="line">        $allImgs.css(&quot;cursor&quot;, &quot;zoom-in&quot;);</span><br><span class="line"></span><br><span class="line">        // 给每个img一个下标</span><br><span class="line">        for (var i = 0; i &lt; $allImgs.length; i++) &#123;</span><br><span class="line">            $($allImgs[i]).data(&quot;index&quot;, i);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 绑定点击事件</span><br><span class="line">        $allImgs.click(function () &#123;</span><br><span class="line">            showModal($(this));</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        /**</span><br><span class="line">         * 显示模态框</span><br><span class="line">         *</span><br><span class="line">         * @param $img</span><br><span class="line">         */</span><br><span class="line">        function showModal($img) &#123;</span><br><span class="line">            $overlay.remove();</span><br><span class="line">            var src = $img.data(&apos;origin&apos;);</span><br><span class="line">            if (!src) &#123;</span><br><span class="line">                src = $img.attr(&apos;src&apos;);</span><br><span class="line">            &#125;</span><br><span class="line">            var index = $img.data(&quot;index&quot;);</span><br><span class="line"></span><br><span class="line">            $overlay = $(&apos;&lt;div&gt;&apos; +</span><br><span class="line">                &apos;&lt;a href=&quot;javascript:&quot; class=&quot;zoomer-prev-img&quot; data-index=&quot;&apos; + index + &apos;&quot; style=&quot;display: none; position: absolute;z-index: 1;&quot;&gt;&lt;/a&gt;&apos; +</span><br><span class="line">                &apos;&lt;a href=&quot;javascript:&quot; class=&quot;zoomer-next-img&quot; data-index=&quot;&apos; + index + &apos;&quot; style=&quot;display: none; position: absolute;z-index: 1;&quot;&gt;&lt;/a&gt;&apos; +</span><br><span class="line">                &apos;&lt;div style=&quot;text-align: center;color: #ddd;position: absolute;left: 0;right: 0;top: 40%;&quot;&gt;加载中...&lt;/div&gt;&apos; +</span><br><span class="line">                &apos;&lt;img src=&quot;&apos; + src + &apos;&quot; style=&quot;max-width: 100%;max-height: 100%;display: none&quot;/&gt;&lt;/div&gt;&apos;).css(&#123;</span><br><span class="line">                position: &quot;fixed&quot;,</span><br><span class="line">                left: 0,</span><br><span class="line">                top: 0,</span><br><span class="line">                bottom: 0,</span><br><span class="line">                right: 0,</span><br><span class="line">                color: &apos;#fff&apos;,</span><br><span class="line">                zIndex: 9999,</span><br><span class="line">                cursor: &apos;zoom-out&apos;,</span><br><span class="line">                background: &apos;rgba(0, 0, 0, 0.4)&apos;,</span><br><span class="line">                textAlign: &quot;center&quot;</span><br><span class="line">            &#125;);</span><br><span class="line">            $(&quot;body&quot;).append($overlay);</span><br><span class="line"></span><br><span class="line">            // 图片加载完成事件</span><br><span class="line">            $overlay.find(&quot;img&quot;).load(function () &#123;</span><br><span class="line">                // 图片距离顶部的距离</span><br><span class="line">                var top = ($(window).height() - $(this).height()) / 2;</span><br><span class="line">                // 图片距离左边的距离</span><br><span class="line">                var left = ($(window).width() - $(this).width()) / 2;</span><br><span class="line"></span><br><span class="line">                // 上一张</span><br><span class="line">                $(this).parents(&quot;div&quot;).find(&quot;.zoomer-prev-img&quot;).css(&#123;</span><br><span class="line">                    &quot;display&quot;: &quot;inline-block&quot;,</span><br><span class="line">                    &quot;top&quot;: top + &quot;px&quot;,</span><br><span class="line">                    &quot;left&quot;: left + &quot;px&quot;,</span><br><span class="line">                    &quot;bottom&quot;: top + &quot;px&quot;,</span><br><span class="line">                    &quot;width&quot;: $(this).width() / 3 + &quot;px&quot;</span><br><span class="line">                &#125;).hover(function () &#123;</span><br><span class="line">                    $(this).css(&#123;</span><br><span class="line">                        background: &quot;-webkit-linear-gradient(left, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0))&quot;,</span><br><span class="line">                        background: &quot;-o-linear-gradient(right, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0))&quot;,</span><br><span class="line">                        background: &quot;-moz-linear-gradient(right, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0))&quot;,</span><br><span class="line">                        background: &quot;linear-gradient(to right, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0))&quot;</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;, function () &#123;</span><br><span class="line">                    $(this).css(&#123;</span><br><span class="line">                        &quot;background&quot;: &quot;rgba(0, 0, 0, 0.0)&quot;</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line">                // 下一张</span><br><span class="line">                $(this).parents(&quot;div&quot;).find(&quot;.zoomer-next-img&quot;).css(&#123;</span><br><span class="line">                    &quot;display&quot;: &quot;inline-block&quot;,</span><br><span class="line">                    &quot;top&quot;: top + &quot;px&quot;,</span><br><span class="line">                    &quot;right&quot;: left + &quot;px&quot;,</span><br><span class="line">                    &quot;bottom&quot;: top + &quot;px&quot;,</span><br><span class="line">                    &quot;width&quot;: $(this).width() / 3 + &quot;px&quot;</span><br><span class="line">                &#125;).hover(function () &#123;</span><br><span class="line">                    $(this).css(&#123;</span><br><span class="line">                        background: &quot;-webkit-linear-gradient(left, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.3))&quot;,</span><br><span class="line">                        background: &quot;-o-linear-gradient(right, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.3))&quot;,</span><br><span class="line">                        background: &quot;-moz-linear-gradient(right, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.3))&quot;,</span><br><span class="line">                        background: &quot;linear-gradient(to right, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.3))&quot;</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;, function () &#123;</span><br><span class="line">                    $(this).css(&#123;</span><br><span class="line">                        &quot;background&quot;: &quot;rgba(0, 0, 0, 0.0)&quot;</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line">                $(this).parents(&quot;div&quot;).find(&quot;div&quot;).css(&#123;&quot;display&quot;: &quot;none&quot;&#125;);</span><br><span class="line">                $(this).css(&#123;&quot;display&quot;: &quot;inline-block&quot;, &quot;marginTop&quot;: top + &quot;px&quot;&#125;);</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            // 图片加载失败事件</span><br><span class="line">            $overlay.find(&quot;img&quot;).error(function () &#123;</span><br><span class="line">                if (settings.failure &amp;&amp; typeof settings.failure === &apos;function&apos;) &#123;</span><br><span class="line">                    settings.failure($(this), $allImgs, $target, $overlay);</span><br><span class="line">                &#125;</span><br><span class="line">                $(this).parents(&quot;div&quot;).find(&quot;div&quot;).html(&quot;加载失败！&quot;);</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            // 给模态框绑定点击事件</span><br><span class="line">            $overlay.click(function () &#123;</span><br><span class="line">                $overlay.remove();</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            // 上一张事件</span><br><span class="line">            $overlay.find(&quot;.zoomer-prev-img&quot;).click(function () &#123;</span><br><span class="line">                var index = $(this).data(&quot;index&quot;);</span><br><span class="line">                if (index === 0) &#123;</span><br><span class="line">                    $overlay.remove();</span><br><span class="line">                    return;</span><br><span class="line">                &#125;</span><br><span class="line">                showModal($($allImgs[index - 1]));</span><br><span class="line">                return false;</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            // 下一张事件</span><br><span class="line">            $overlay.find(&quot;.zoomer-next-img&quot;).click(function () &#123;</span><br><span class="line">                var index = $(this).data(&quot;index&quot;);</span><br><span class="line">                if (index === $allImgs.length - 1) &#123;</span><br><span class="line">                    $overlay.remove();</span><br><span class="line">                    return;</span><br><span class="line">                &#125;</span><br><span class="line">                showModal($($allImgs[index + 1]));</span><br><span class="line">                return false;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 图片缩放</span><br><span class="line">     *</span><br><span class="line">     * @param option</span><br><span class="line">     * @returns &#123;*&#125;</span><br><span class="line">     */</span><br><span class="line">    $.fn.zoomer = function (option) &#123;</span><br><span class="line">        return this.each(function () &#123;</span><br><span class="line">            $(this).data(&apos;zoomer&apos;, new Zoomer($(this), option));</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 默认配置</span><br><span class="line">     *</span><br><span class="line">     * @type &#123;&#123;failure: null&#125;&#125;</span><br><span class="line">     */</span><br><span class="line">    $.fn.zoomer.defaults = &#123;</span><br><span class="line">        // 图片加载失败回调</span><br><span class="line">        failure: null</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)(window.jQuery);</span><br></pre></td></tr></table></figure><h3 id="zoomer下载"><a href="#zoomer下载" class="headerlink" title="zoomer下载"></a>zoomer下载</h3><p><a href="/uploads/zoomer.js">zoomer.js</a><br><a href="/uploads/zoomer.min.js">zoomer.min.js</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;实例&quot;&gt;&lt;a href=&quot;#实例&quot; class=&quot;headerlink&quot; title=&quot;实例&quot;&gt;&lt;/a&gt;实例&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://kangyonggan.com/album&quot;&gt;https://kangyonggan.com/album&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;https://ws4.sinaimg.cn/large/006tNc79ly1fzhrslbd1fj31110u0thf.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>纯前端JS生成GIF</title>
    <link href="http://kangyonggan.com/2019/01/18/%E7%BA%AF%E5%89%8D%E7%AB%AFJS%E7%94%9F%E6%88%90GIF/"/>
    <id>http://kangyonggan.com/2019/01/18/纯前端JS生成GIF/</id>
    <published>2019-01-18T02:42:35.000Z</published>
    <updated>2019-01-18T03:14:47.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p><a href="https://kangyonggan.com/tool/gif">https://kangyonggan.com/tool/gif</a><br><img src="/uploads/gif-1.png" alt=""></p><a id="more"></a><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><ol><li>选择文件后并不会上传至服务器，因此你可以很大很大的图片。</li><li>不管你选择多大的图片，最终生成的gif都会很小。</li><li>gif被压缩后会失真，会有一定程度的模糊。</li></ol><h2 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h2><p><a href="/uploads/gif.zip">gif.zip</a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;input type=&quot;file&quot; data-index=&quot;0&quot;/&gt;</span><br><span class="line">&lt;input type=&quot;file&quot; data-index=&quot;1&quot;/&gt;</span><br><span class="line">&lt;input type=&quot;file&quot; data-index=&quot;2&quot;/&gt;</span><br><span class="line"></span><br><span class="line">&lt;button id=&quot;btn&quot;&gt;开始生成&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">&lt;canvas width=&quot;400&quot; height=&quot;300&quot; id=&quot;canvas&quot; style=&quot;display:none&quot;&gt;&lt;/canvas&gt;</span><br><span class="line">&lt;img src=&quot;&quot; id=&quot;result&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;script src=&quot;../jquery/jquery-1.8.3.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;gif.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    $(function () &#123;</span><br><span class="line">        // 生成gif的图片源</span><br><span class="line">        var imgList = [];</span><br><span class="line"></span><br><span class="line">        /**</span><br><span class="line">         * 选择图片</span><br><span class="line">         */</span><br><span class="line">        $(&quot;input[type=file]&quot;).change(function (e) &#123;</span><br><span class="line">            e.preventDefault();</span><br><span class="line">            var pic = this.files[0];</span><br><span class="line">            // TODO 校验是不是图片格式（自行实现）</span><br><span class="line"></span><br><span class="line">            // TODO 图片预览（自行实现，可参考：https://blog.kangyonggan.com/2019/01/14/%E7%BE%8E%E5%8C%96%E6%96%87%E4%BB%B6%E9%80%89%E6%8B%A9%E6%A1%86/）</span><br><span class="line"></span><br><span class="line">            // 把选中的图片加到图片源 imgList</span><br><span class="line">            var file = new FileReader();</span><br><span class="line">            file.readAsDataURL(pic);</span><br><span class="line"></span><br><span class="line">            // 图片的下标</span><br><span class="line">            var index = $(this).data(&quot;index&quot;);</span><br><span class="line"></span><br><span class="line">            file.onload = function () &#123;</span><br><span class="line">                imgList[index] = this.result;</span><br><span class="line">            &#125;;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        var gif;</span><br><span class="line">        var canvas = document.getElementById(&apos;canvas&apos;);</span><br><span class="line">        var ctx = canvas.getContext(&apos;2d&apos;);</span><br><span class="line"></span><br><span class="line">        /**</span><br><span class="line">         * 开始生成</span><br><span class="line">         */</span><br><span class="line">        $(&quot;#btn&quot;).click(function () &#123;</span><br><span class="line">            gif = new GIF(&#123;</span><br><span class="line">                workers: imgList.length,</span><br><span class="line">                quality: 30,</span><br><span class="line">                workerScript: &quot;gif.worker.js&quot;</span><br><span class="line">            &#125;);</span><br><span class="line">            gif.on(&quot;finished&quot;, function (blob) &#123;</span><br><span class="line">                var file = new FileReader();</span><br><span class="line">                file.readAsDataURL(blob);</span><br><span class="line">                file.onload = function () &#123;</span><br><span class="line">                    document.getElementById(&quot;result&quot;).setAttribute(&quot;src&quot;, file.result);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            var imgObjList = [], count = 0;</span><br><span class="line"></span><br><span class="line">            for (var i = 0; i &lt; imgList.length; i++) &#123;</span><br><span class="line">                var tmpImg = new Image();</span><br><span class="line">                tmpImg.src = imgList[i];</span><br><span class="line">                imgObjList.push(tmpImg);</span><br><span class="line">                tmpImg.onload = function () &#123;</span><br><span class="line">                    count++;</span><br><span class="line">                    if (count === imgList.length) &#123;</span><br><span class="line">                        generateGif(imgObjList);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        /**</span><br><span class="line">         * 生成gif</span><br><span class="line">         *</span><br><span class="line">         * @param imgObjList</span><br><span class="line">         */</span><br><span class="line">        function generateGif(imgObjList) &#123;</span><br><span class="line">            for (var i = 0; i &lt; imgObjList.length; i++) &#123;</span><br><span class="line">                ctx.save();</span><br><span class="line">                ctx.drawImage(imgObjList[i], 0, 0, canvas.width, canvas.height);</span><br><span class="line"></span><br><span class="line">                // 给图片配字幕</span><br><span class="line">//                ctx.font = &quot;14px 宋体&quot;;</span><br><span class="line">//                ctx.fillStyle = &quot;White&quot;;</span><br><span class="line">//                ctx.textAlign = &quot;center&quot;;</span><br><span class="line">//                ctx.fillText(title, 200, 280);</span><br><span class="line"></span><br><span class="line">                ctx.restore();</span><br><span class="line">                gif.addFrame(canvas, &#123;copy: true, delay: 1500&#125;);</span><br><span class="line">                ctx.clearRect(0, 0, canvas.width, canvas.height)</span><br><span class="line">            &#125;</span><br><span class="line">            gif.render();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="/uploads/gif-2.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;实例&quot;&gt;&lt;a href=&quot;#实例&quot; class=&quot;headerlink&quot; title=&quot;实例&quot;&gt;&lt;/a&gt;实例&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://kangyonggan.com/tool/gif&quot;&gt;https://kangyonggan.com/tool/gif&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;/uploads/gif-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Web前端" scheme="http://kangyonggan.com/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>使用freemarker手动实现i18n</title>
    <link href="http://kangyonggan.com/2019/01/14/%E4%BD%BF%E7%94%A8freemarker%E6%89%8B%E5%8A%A8%E5%AE%9E%E7%8E%B0i18n/"/>
    <id>http://kangyonggan.com/2019/01/14/使用freemarker手动实现i18n/</id>
    <published>2019-01-14T02:27:15.000Z</published>
    <updated>2019-01-14T02:49:37.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="FTL中的调用效果"><a href="#FTL中的调用效果" class="headerlink" title="FTL中的调用效果"></a>FTL中的调用效果</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;@message &quot;app.name&quot;/&gt;</span><br><span class="line">&lt;@message &quot;app.name&quot; local=&quot;zh_CN&quot;/&gt;</span><br></pre></td></tr></table></figure><h2 id="宏定义"><a href="#宏定义" class="headerlink" title="宏定义"></a>宏定义</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;#macro message code local=&quot;&quot;&gt;</span><br><span class="line">    &lt;#if local!=&quot;&quot;&gt;</span><br><span class="line">        $&#123;i18n(&quot;msg&quot;, code, local)&#125;</span><br><span class="line">    &lt;#else&gt;</span><br><span class="line">        $&#123;i18n(&quot;msg&quot;, code, &apos;$&#123;springMacroRequestContext.getLocale().language&#125;_$&#123;springMacroRequestContext.getLocale().country&#125;&apos;)&#125;</span><br><span class="line">    &lt;/#if&gt;</span><br><span class="line">&lt;/#macro&gt;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">package com.kangyonggan.demo.freemarker;</span><br><span class="line"></span><br><span class="line">import lombok.extern.log4j.Log4j2;</span><br><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.io.InputStream;</span><br><span class="line">import java.io.InputStreamReader;</span><br><span class="line">import java.util.HashMap;</span><br><span class="line">import java.util.List;</span><br><span class="line">import java.util.Map;</span><br><span class="line">import java.util.Properties;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @author kangyonggan</span><br><span class="line"> * @since 2018/12/13</span><br><span class="line"> */</span><br><span class="line">@Component</span><br><span class="line">@Log4j2</span><br><span class="line">public class I18nTag extends AbstractFunctionTag &#123;</span><br><span class="line"></span><br><span class="line">    private static Map&lt;String, Properties&gt; data = new HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 国际化</span><br><span class="line">     *</span><br><span class="line">     * @param arguments 参数</span><br><span class="line">     * @return 返回UUID</span><br><span class="line">     */</span><br><span class="line">    public String msg(List arguments) throws IOException &#123;</span><br><span class="line">        if (!hasLessThreeArgs(arguments)) &#123;</span><br><span class="line">            throw new RuntimeException(&quot;国际化时没有指定参数&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        String code = arguments.get(1).toString();</span><br><span class="line">        String local = arguments.get(2).toString();</span><br><span class="line"></span><br><span class="line">        Properties properties = getProperties(local);</span><br><span class="line">        return properties.getProperty(code);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private Properties getProperties(String local) throws IOException &#123;</span><br><span class="line">        Properties properties = data.get(local);</span><br><span class="line"></span><br><span class="line">        if (properties == null) &#123;</span><br><span class="line">            properties = loadProperties(local);</span><br><span class="line">            data.put(local, properties);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return properties;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private Properties loadProperties(String local) throws IOException &#123;</span><br><span class="line">        Properties properties = new Properties();</span><br><span class="line">        InputStream inputStream;</span><br><span class="line">        try &#123;</span><br><span class="line">            inputStream = this.getClass().getResourceAsStream(&quot;/messages_&quot; + local + &quot;.properties&quot;);</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            inputStream = null;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (inputStream == null) &#123;</span><br><span class="line">            log.info(&quot;没有&#123;&#125;的国际化文件，使用默认的&quot;, local);</span><br><span class="line">            inputStream = this.getClass().getResourceAsStream(&quot;/messages.properties&quot;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        InputStreamReader reader = new InputStreamReader(inputStream, &quot;UTF-8&quot;);</span><br><span class="line">        properties.load(reader);</span><br><span class="line">        return properties;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="properties文件"><a href="#properties文件" class="headerlink" title="properties文件"></a>properties文件</h2><p><code>messages.properties</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.name=dfjz</span><br></pre></td></tr></table></figure><p><code>messages_zh_CN.properties</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.name=东方骄子</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;FTL中的调用效果&quot;&gt;&lt;a href=&quot;#FTL中的调用效果&quot; class=&quot;headerlink&quot; title=&quot;FTL中的调用效果&quot;&gt;&lt;/a&gt;FTL中的调用效果&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;@message &amp;quot;app.name&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;@message &amp;quot;app.name&amp;quot; local=&amp;quot;zh_CN&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;宏定义&quot;&gt;&lt;a href=&quot;#宏定义&quot; class=&quot;headerlink&quot; title=&quot;宏定义&quot;&gt;&lt;/a&gt;宏定义&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;#macro message code local=&amp;quot;&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;#if local!=&amp;quot;&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $&amp;#123;i18n(&amp;quot;msg&amp;quot;, code, local)&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;#else&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $&amp;#123;i18n(&amp;quot;msg&amp;quot;, code, &amp;apos;$&amp;#123;springMacroRequestContext.getLocale().language&amp;#125;_$&amp;#123;springMacroRequestContext.getLocale().country&amp;#125;&amp;apos;)&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/#if&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/#macro&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Java后台" scheme="http://kangyonggan.com/categories/Java%E5%90%8E%E5%8F%B0/"/>
    
    
      <category term="Java" scheme="http://kangyonggan.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>美化文件选择框</title>
    <link href="http://kangyonggan.com/2019/01/14/%E7%BE%8E%E5%8C%96%E6%96%87%E4%BB%B6%E9%80%89%E6%8B%A9%E6%A1%86/"/>
    <id>http://kangyonggan.com/2019/01/14/美化文件选择框/</id>
    <published>2019-01-14T01:46:19.000Z</published>
    <updated>2019-01-14T02:04:46.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h2><p>美化后</p><p><img src="/uploads/file-input-2.png" alt=""></p><a id="more"></a><p>美化前</p><p><img src="/uploads/file-input-1.png" alt=""></p><h2 id="原生代码"><a href="#原生代码" class="headerlink" title="原生代码"></a>原生代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;file&quot;/&gt;</span><br></pre></td></tr></table></figure><h2 id="美化思路"><a href="#美化思路" class="headerlink" title="美化思路"></a>美化思路</h2><ol><li>隐藏原生的丑陋的文件选择框。</li><li>画一个漂亮的假的”文件选择框”。</li><li>监听假文件选择框的click事件，在事件中触发真的文件选择框的click事件，此时会弹出文件选择。</li><li>监听真的文件选择框的change事件，当文件改变时把文件（图片）显示在假文件选择框的位置，又叫做预览。</li></ol><h2 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h2><p>CSS样式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">.file &#123;</span><br><span class="line">    width: 230px;</span><br><span class="line">    height: 160px;</span><br><span class="line">    border: 1px dashed #ccc;</span><br><span class="line">    border-radius: 8px;</span><br><span class="line">    cursor: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.file:hover &#123;</span><br><span class="line">    border: 1px dashed #a72c11;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#previewImg &#123;</span><br><span class="line">    width: 230px;</span><br><span class="line">    height: 160px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.file-label &#123;</span><br><span class="line">    text-align: center;</span><br><span class="line">    line-height: 160px;</span><br><span class="line">    color: #999;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.file-label:hover &#123;</span><br><span class="line">    color: #a72c11;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.file-warn &#123;</span><br><span class="line">    font-size: 12px;</span><br><span class="line">    color: #aaa;</span><br><span class="line">    line-height: 1.8;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.hidden &#123;</span><br><span class="line">    display: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>html代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;file&quot;&gt;</span><br><span class="line">    &lt;img id=&quot;previewImg&quot; class=&quot;hidden&quot;/&gt;</span><br><span class="line">    &lt;div class=&quot;file-label&quot;&gt;上传视频封面&lt;/div&gt;</span><br><span class="line">    &lt;input type=&quot;file&quot; id=&quot;cover&quot; class=&quot;hidden&quot; name=&quot;file&quot;/&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;p class=&quot;file-warn&quot;&gt;</span><br><span class="line">    请上传 jpeg,jpg,png,gif 格式的图片文件，文件大小不能超过2MB。&lt;br/&gt;</span><br><span class="line">    建议上传一张 230*160 像素或等比例的图片。&lt;br/&gt;</span><br><span class="line">    精美封面图有助于吸引观看，并且更易获得官方推荐。&lt;br/&gt;</span><br><span class="line">&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>js代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;../static/libs/jquery/jquery-1.8.3.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    $(function () &#123;</span><br><span class="line">        // 点击上传图片</span><br><span class="line">        $(&quot;.file-label&quot;).click(function () &#123;</span><br><span class="line">            document.getElementById(&quot;cover&quot;).click();</span><br><span class="line">        &#125;);</span><br><span class="line">        // 点击上传图片</span><br><span class="line">        $(&quot;#previewImg&quot;).click(function () &#123;</span><br><span class="line">            document.getElementById(&quot;cover&quot;).click();</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        // 图片改变事件</span><br><span class="line">        $(&quot;#cover&quot;).change(function () &#123;</span><br><span class="line">            var pic = this.files[0];</span><br><span class="line">            // 校验</span><br><span class="line">            if (!validPic(pic)) &#123;</span><br><span class="line">                return;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            // 图片预览</span><br><span class="line">            previewImg(pic);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        // 图片预览</span><br><span class="line">        function previewImg(pic) &#123;</span><br><span class="line">            var r = new FileReader();</span><br><span class="line">            r.readAsDataURL(pic);</span><br><span class="line"></span><br><span class="line">            r.onload = function () &#123;</span><br><span class="line">                $(&quot;#previewImg&quot;).attr(&quot;src&quot;, this.result).show();</span><br><span class="line">                $(&quot;.file-label&quot;).hide();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;效果预览&quot;&gt;&lt;a href=&quot;#效果预览&quot; class=&quot;headerlink&quot; title=&quot;效果预览&quot;&gt;&lt;/a&gt;效果预览&lt;/h2&gt;&lt;p&gt;美化后&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/uploads/file-input-2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Web前端" scheme="http://kangyonggan.com/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>纯前端markdown编辑器及解析</title>
    <link href="http://kangyonggan.com/2019/01/08/%E7%BA%AF%E5%89%8D%E7%AB%AFmarkdown%E7%BC%96%E8%BE%91%E5%99%A8%E5%8F%8A%E8%A7%A3%E6%9E%90/"/>
    <id>http://kangyonggan.com/2019/01/08/纯前端markdown编辑器及解析/</id>
    <published>2019-01-08T06:37:21.000Z</published>
    <updated>2019-01-08T06:56:46.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="markdown编辑器"><a href="#markdown编辑器" class="headerlink" title="markdown编辑器"></a>markdown编辑器</h2><p>下面是使用freemarker定义的宏，是一个markdown编辑器。</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;#--markdown编辑器--&gt;</span><br><span class="line">&lt;#macro markdown name id=&quot;&quot; value=&quot;&quot;&gt;</span><br><span class="line">&lt;#if id==&quot;&quot;&gt;</span><br><span class="line">    &lt;#local id=func(&apos;uuid&apos;, &apos;id&apos;)/&gt;</span><br><span class="line">&lt;/#if&gt;</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;$&#123;ctx&#125;/libs/editor.md/css/editormd.css&quot;/&gt;</span><br><span class="line">&lt;div id=&quot;$&#123;id&#125;&quot;&gt;</span><br><span class="line">    &lt;textarea style=&quot;display: none&quot; name=&quot;$&#123;name&#125;&quot;&gt;$&#123;value&#125;&lt;/textarea&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script src=&quot;$&#123;ctx&#125;/libs/editor.md/editormd.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    $(function () &#123;</span><br><span class="line">        editormd(&quot;$&#123;id&#125;&quot;, &#123;</span><br><span class="line">            height: 600,</span><br><span class="line">            syncScrolling: &quot;single&quot;,</span><br><span class="line">            path: &quot;$&#123;ctx&#125;/libs/editor.md/lib/&quot;,</span><br><span class="line">            emoji: true,</span><br><span class="line">            imageUpload: true,</span><br><span class="line">            imageUploadURL: &quot;$&#123;ctx&#125;/file/markdown&quot;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/#macro&gt;</span><br></pre></td></tr></table></figure><p>用例：&lt;@ca.markdown name=”content” value=”${article.content!’’}”/&gt;</p><ol><li>editor.md官网地址：<a href="http://pandao.github.io/editor.md/examples/" target="_blank" rel="noopener">http://pandao.github.io/editor.md/examples/</a></li><li>&lt;#local id=func(‘uuid’, ‘id’)/&gt; 是产生一个uuid。</li><li>imageUploadURL 是图片上传地址，需要写一个controller，如下。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * md编辑器文件、图片上传</span><br><span class="line"> *</span><br><span class="line"> * @param request 请求</span><br><span class="line"> * @return 响应</span><br><span class="line"> */</span><br><span class="line">@PostMapping(&quot;markdown&quot;)</span><br><span class="line">@ResponseBody</span><br><span class="line">public Response markdown(HttpServletRequest request) &#123;</span><br><span class="line">    Response response = Response.getResponse();</span><br><span class="line">    ServletContext context = request.getServletContext();</span><br><span class="line"></span><br><span class="line">    //上传本地文件</span><br><span class="line">    int success = 0;</span><br><span class="line">    String message = &quot;上传成功&quot;;</span><br><span class="line">    try &#123;</span><br><span class="line">        MultipartHttpServletRequest multiRequest = (MultipartHttpServletRequest) request;</span><br><span class="line">        Iterator iterator = multiRequest.getFileNames();</span><br><span class="line">        if (iterator.hasNext()) &#123;</span><br><span class="line">            MultipartFile file = multiRequest.getFile(iterator.next().toString());</span><br><span class="line">            String fileName = ftpService.genFileName(&quot;ARTICLE&quot;);</span><br><span class="line">            // 上传到本地</span><br><span class="line">            FileUpload.upload(fileUploadPath, fileName, file);</span><br><span class="line"></span><br><span class="line">            fileName += &quot;.&quot; + FilenameUtils.getExtension(file.getOriginalFilename());</span><br><span class="line">            response.put(&quot;url&quot;, context.getContextPath() + &quot;/upload/&quot; + fileName);</span><br><span class="line">            success = 1;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; catch (Exception e) &#123;</span><br><span class="line">        log.error(&quot;编辑器上传文件失败&quot;, e);</span><br><span class="line">        message = &quot;网络异常，请稍后再试!&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    response.put(&quot;success&quot;, success);</span><br><span class="line">    response.put(&quot;message&quot;, message);</span><br><span class="line">    return response;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也就是要返回一个Map, 并带有success和message参数。</p><h2 id="解析markdown内容"><a href="#解析markdown内容" class="headerlink" title="解析markdown内容"></a>解析markdown内容</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;#--markdown2html--&gt;</span><br><span class="line">&lt;#macro md2html content&gt;</span><br><span class="line">    &lt;#local uuid=func(&apos;uuid&apos;, &apos;id&apos;)/&gt;</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;$&#123;ctx&#125;/libs/editor.md/css/editormd.preview.css&quot;/&gt;</span><br><span class="line">&lt;div id=&quot;$&#123;uuid&#125;&quot; class=&quot;markdown-content&quot;&gt;</span><br><span class="line">    &lt;textarea style=&quot;display: none&quot;&gt;$&#123;content&#125;&lt;/textarea&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script src=&quot;$&#123;ctx&#125;/libs/editor.md//lib/marked.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;$&#123;ctx&#125;/libs/editor.md//lib/prettify.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;$&#123;ctx&#125;/libs/editor.md//lib/raphael.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;$&#123;ctx&#125;/libs/editor.md//lib/underscore.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;$&#123;ctx&#125;/libs/editor.md//lib/sequence-diagram.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;$&#123;ctx&#125;/libs/editor.md//lib/flowchart.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;$&#123;ctx&#125;/libs/editor.md//lib/jquery.flowchart.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;$&#123;ctx&#125;/libs/editor.md/editormd.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">    $(function () &#123;</span><br><span class="line">        editormd.markdownToHTML(&quot;$&#123;uuid&#125;&quot;, &#123;</span><br><span class="line">            path: &quot;$&#123;ctx&#125;/libs/editor.md/lib/&quot;,</span><br><span class="line">            htmlDecode: &quot;style,script,iframe&quot;,  // you can filter tags decode</span><br><span class="line">            emoji: true,</span><br><span class="line">            taskList: true,</span><br><span class="line">            tex: true,  // 默认不解析</span><br><span class="line">            flowChart: true,  // 默认不解析</span><br><span class="line">            sequenceDiagram: true  // 默认不解析</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/#macro&gt;</span><br></pre></td></tr></table></figure><p>用例：&lt;@ca.md2html content=”${article.content}”/&gt;</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;markdown编辑器&quot;&gt;&lt;a href=&quot;#markdown编辑器&quot; class=&quot;headerlink&quot; title=&quot;markdown编辑器&quot;&gt;&lt;/a&gt;markdown编辑器&lt;/h2&gt;&lt;p&gt;下面是使用freemarker定义的宏，是一个markdown编辑器。&lt;/p&gt;
    
    </summary>
    
      <category term="Web前端" scheme="http://kangyonggan.com/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>js实现上拉加载更多</title>
    <link href="http://kangyonggan.com/2019/01/08/js%E5%AE%9E%E7%8E%B0%E4%B8%8A%E6%8B%89%E5%8A%A0%E8%BD%BD%E6%9B%B4%E5%A4%9A/"/>
    <id>http://kangyonggan.com/2019/01/08/js实现上拉加载更多/</id>
    <published>2019-01-08T06:31:07.000Z</published>
    <updated>2019-01-08T06:36:12.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 获取滚动条的位置</span><br><span class="line"> *</span><br><span class="line"> * @returns &#123;number&#125;</span><br><span class="line"> */</span><br><span class="line">function getScrollTop() &#123;</span><br><span class="line">    var scrollTop = 0;</span><br><span class="line">    if (document.documentElement &amp;&amp; document.documentElement.scrollTop) &#123;</span><br><span class="line">        scrollTop = document.documentElement.scrollTop;</span><br><span class="line">    &#125; else if (document.body) &#123;</span><br><span class="line">        scrollTop = document.body.scrollTop;</span><br><span class="line">    &#125;</span><br><span class="line">    return scrollTop;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 获取当前可视范围的高度</span><br><span class="line"> *</span><br><span class="line"> * @returns &#123;number&#125;</span><br><span class="line"> */</span><br><span class="line">function getClientHeight() &#123;</span><br><span class="line">    var clientHeight = 0;</span><br><span class="line">    if (document.body.clientHeight &amp;&amp; document.documentElement.clientHeight) &#123;</span><br><span class="line">        clientHeight = Math.min(document.body.clientHeight, document.documentElement.clientHeight);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        clientHeight = Math.max(document.body.clientHeight, document.documentElement.clientHeight);</span><br><span class="line">    &#125;</span><br><span class="line">    return clientHeight;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 获取文档完整的高度</span><br><span class="line"> *</span><br><span class="line"> * @returns &#123;number&#125;</span><br><span class="line"> */</span><br><span class="line">function getScrollHeight() &#123;</span><br><span class="line">    return Math.max(document.body.scrollHeight, document.documentElement.scrollHeight);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 是否还有更多内容</span><br><span class="line"> */</span><br><span class="line">var hasMore = true;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 上拉加载更多事件</span><br><span class="line"> */</span><br><span class="line">window.onscroll = function () &#123;</span><br><span class="line">    if (hasMore &amp;&amp; getScrollTop() + getClientHeight() === getScrollHeight()) &#123;</span><br><span class="line">        console.log(&quot;加载更多...&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><p>当没有更多内容时，把hasMore置为false，否则会一直去尝试加载更多</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="Web前端" scheme="http://kangyonggan.com/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>js返回上一页的实现</title>
    <link href="http://kangyonggan.com/2019/01/08/js%E8%BF%94%E5%9B%9E%E4%B8%8A%E4%B8%80%E9%A1%B5%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
    <id>http://kangyonggan.com/2019/01/08/js返回上一页的实现/</id>
    <published>2019-01-08T06:29:10.000Z</published>
    <updated>2019-01-08T06:30:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>如果有上一页则返回上一页，如果没上一页（直接输入url打开的网页）则返回首页。兼容主流浏览器。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 返回</span><br><span class="line"> */</span><br><span class="line">function goBack() &#123;</span><br><span class="line">    if ((navigator.userAgent.indexOf(&apos;MSIE&apos;) &gt;= 0) &amp;&amp; (navigator.userAgent.indexOf(&apos;Opera&apos;) &lt; 0)) &#123;</span><br><span class="line">        // IE</span><br><span class="line">        if (history.length &gt; 0) &#123;</span><br><span class="line">            window.history.go(-1);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            window.location.href = ctx + &quot;/&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        // 非IE浏览器</span><br><span class="line">        if (navigator.userAgent.indexOf(&apos;Firefox&apos;) &gt;= 0 ||</span><br><span class="line">            navigator.userAgent.indexOf(&apos;Opera&apos;) &gt;= 0 ||</span><br><span class="line">            navigator.userAgent.indexOf(&apos;Safari&apos;) &gt;= 0 ||</span><br><span class="line">            navigator.userAgent.indexOf(&apos;Chrome&apos;) &gt;= 0 ||</span><br><span class="line">            navigator.userAgent.indexOf(&apos;WebKit&apos;) &gt;= 0) &#123;</span><br><span class="line"></span><br><span class="line">            if (window.history.length &gt; 1) &#123;</span><br><span class="line">                window.history.go(-1);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                window.location.href = ctx + &quot;/&quot;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            // 未知的浏览器</span><br><span class="line">            window.history.go(-1);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;如果有上一页则返回上一页，如果没上一页（直接输入url打开的网页）则返回首页。兼容主流浏览器。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;
      
    
    </summary>
    
      <category term="Web前端" scheme="http://kangyonggan.com/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>js检测浏览器是PC端还是手机端</title>
    <link href="http://kangyonggan.com/2019/01/08/js%E6%A3%80%E6%B5%8B%E6%B5%8F%E8%A7%88%E5%99%A8%E6%98%AFPC%E7%AB%AF%E8%BF%98%E6%98%AF%E6%89%8B%E6%9C%BA%E7%AB%AF/"/>
    <id>http://kangyonggan.com/2019/01/08/js检测浏览器是PC端还是手机端/</id>
    <published>2019-01-08T06:23:14.000Z</published>
    <updated>2019-01-08T06:27:27.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">function IsPC() &#123;</span><br><span class="line">    var userAgentInfo = navigator.userAgent;</span><br><span class="line">    var Agents = [&quot;Android&quot;, &quot;iPhone&quot;,</span><br><span class="line">        &quot;SymbianOS&quot;, &quot;Windows Phone&quot;,</span><br><span class="line">        &quot;iPad&quot;, &quot;iPod&quot;];</span><br><span class="line">    var flag = true;</span><br><span class="line">    for (var v = 0; v &lt; Agents.length; v++) &#123;</span><br><span class="line">        if (userAgentInfo.indexOf(Agents[v]) &gt; 0) &#123;</span><br><span class="line">            flag = false;</span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//true为PC端，false为手机端</span><br><span class="line">var flag = IsPC();</span><br><span class="line">if (!flag) &#123;</span><br><span class="line">    window.location.href = &quot;$&#123;ctx&#125;/wap&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="Web前端" scheme="http://kangyonggan.com/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>支付宝扫码支付的开发过程</title>
    <link href="http://kangyonggan.com/2018/10/29/%E6%94%AF%E4%BB%98%E5%AE%9D%E6%89%AB%E7%A0%81%E6%94%AF%E4%BB%98%E7%9A%84%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B/"/>
    <id>http://kangyonggan.com/2018/10/29/支付宝扫码支付的开发过程/</id>
    <published>2018-10-29T08:23:01.000Z</published>
    <updated>2018-10-29T08:23:02.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="名词定义"><a href="#名词定义" class="headerlink" title="名词定义"></a>名词定义</h2><ul><li>用户：在我们网站上交易的客户。</li><li>支付网关：是我们商户和支付宝开放平台对接的系统。</li><li>商户系统：充值成功后用于发货的系统。</li><li>微信支付平台：是阿里的支付宝开放。</li></ul><h2 id="支付宝扫码支付官网地址"><a href="#支付宝扫码支付官网地址" class="headerlink" title="支付宝扫码支付官网地址"></a>支付宝扫码支付官网地址</h2><p>支付接口：<a href="https://docs.open.alipay.com/api_1/" target="_blank" rel="noopener">https://docs.open.alipay.com/api_1/</a></p><a id="more"></a><h2 id="序列图"><a href="#序列图" class="headerlink" title="序列图"></a>序列图</h2><p>用户登录我们的网站，选择好商品之后，点击使用微信扫码付款，直到用户户看到付款成功。对应的序列图如下：<br><img src="/uploads/alipay-seq.png" alt=""></p><p>我们就是要做上图这么一件事，下面是详细的开发步骤。</p><h2 id="一、注册"><a href="#一、注册" class="headerlink" title="一、注册"></a>一、注册</h2><p>注册地址：<a href="https://memberprod.alipay.com/account/reg/index.htm" target="_blank" rel="noopener">https://memberprod.alipay.com/account/reg/index.htm</a></p><blockquote><p>只有企业账户才能玩支付。</p></blockquote><h2 id="二、配置"><a href="#二、配置" class="headerlink" title="二、配置"></a>二、配置</h2><p>登录微信公共号，获取如下三项配置：</p><ol><li>应用ID - 支付宝分配给开发者的应用ID</li><li>商户私钥 - 商户自己生成一对密钥中的私钥</li><li>支付宝公钥 - 登录开放平台后自行下载</li></ol><p>生成RSA密钥：<a href="https://docs.open.alipay.com/291/105971/" target="_blank" rel="noopener">https://docs.open.alipay.com/291/105971/</a><br>上传商户公钥并获取支付宝公钥：<a href="https://docs.open.alipay.com/291/105972/" target="_blank" rel="noopener">https://docs.open.alipay.com/291/105972/</a><br>使用私商户钥生成请求签名：<a href="https://docs.open.alipay.com/291/105974/" target="_blank" rel="noopener">https://docs.open.alipay.com/291/105974/</a><br>使用支付宝公钥验签</p><h2 id="三、统一收单线下交易预创建（下单）"><a href="#三、统一收单线下交易预创建（下单）" class="headerlink" title="三、统一收单线下交易预创建（下单）"></a>三、统一收单线下交易预创建（下单）</h2><p>这是一个预交易接口，即调用后不会真正的发生金钱交易，只是告诉支付宝有个用户一会要支付1000元买手机，你给我生成一个支付链接，我把这个链接变成二维码，让他使用支付宝来扫描。调用此接口后会返回支付链接。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 支付宝（预）支付</span><br><span class="line"> *</span><br><span class="line"> * @param command</span><br><span class="line"> * @return</span><br><span class="line"> */</span><br><span class="line">public CommonResponse pay(Command command) &#123;</span><br><span class="line">    log.info(&quot;进入支付宝预支付接口&quot;);</span><br><span class="line">    PayResponse payResponse = PayResponse.getResponse();</span><br><span class="line"></span><br><span class="line">    try &#123;</span><br><span class="line">        Map&lt;String, String&gt; bizContent = new HashMap&lt;&gt;(8);</span><br><span class="line">        bizContent.put(&quot;out_trade_no&quot;, command.getSerialNo());</span><br><span class="line">        bizContent.put(&quot;total_amount&quot;, command.getAmount().setScale(2, BigDecimal.ROUND_HALF_UP).toString());</span><br><span class="line">        bizContent.put(&quot;subject&quot;, &quot;CK充值中心-充值&quot;);</span><br><span class="line"></span><br><span class="line">        AlipayClient alipayClient = new DefaultAlipayClient(apiUrl, appId, privateKey, &quot;json&quot;, &quot;utf-8&quot;, publicKey, &quot;RSA2&quot;);</span><br><span class="line">        AlipayTradePrecreateRequest request = new AlipayTradePrecreateRequest();</span><br><span class="line">        request.setNotifyUrl(notifyUrl);</span><br><span class="line">        request.setBizContent(JSON.toJSONString(bizContent));</span><br><span class="line">        AlipayTradePrecreateResponse response = alipayClient.execute(request);</span><br><span class="line">        if (response.isSuccess()) &#123;</span><br><span class="line">            log.info(&quot;获取二维码成功&quot;);</span><br><span class="line"></span><br><span class="line">            String qrName = command.getSerialNo() + &quot;.png&quot;;</span><br><span class="line">            String name = fileRootPath + &quot;qrcode/&quot; + qrName;</span><br><span class="line"></span><br><span class="line">            BufferedImage image = QRCodeKit.createQRCodeWithLogo(response.getQrCode(), new File(fileRootPath + &quot;qrcode/logo.png&quot;));</span><br><span class="line">            ImageIO.write(image, &quot;png&quot;, new File(name));</span><br><span class="line"></span><br><span class="line">            log.info(&quot;二维码生成成功，路径： &#123;&#125;&quot;, name);</span><br><span class="line"></span><br><span class="line">            payResponse.setApiUrl(&quot;upload/qrcode/&quot; + qrName);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            log.info(&quot;获取二维码失败&quot;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        payResponse.setRespCo(response.getCode());</span><br><span class="line">        payResponse.setRespMsg(response.getMsg());</span><br><span class="line">        payResponse.setRespData(response.getBody());</span><br><span class="line">    &#125; catch (Exception e) &#123;</span><br><span class="line">        throw new SendException(&quot;请求支付宝预支付接口异常&quot;, e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    log.info(&quot;离开支付宝预支付接口&quot;);</span><br><span class="line">    return payResponse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中Alipay开头的是阿里的sdk，使用maven依赖如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.alipay.sdk&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;alipay-sdk-java&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;3.3.87.ALL&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></p><p>QRCodeKit是一个二维码生成工具：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import com.google.zxing.*;</span><br><span class="line">import com.google.zxing.common.BitMatrix;</span><br><span class="line">import com.google.zxing.qrcode.decoder.ErrorCorrectionLevel;</span><br><span class="line">import org.apache.commons.codec.binary.Base64;</span><br><span class="line">import org.apache.commons.codec.binary.Base64OutputStream;</span><br><span class="line"></span><br><span class="line">import javax.imageio.ImageIO;</span><br><span class="line">import java.awt.*;</span><br><span class="line">import java.awt.image.BufferedImage;</span><br><span class="line">import java.io.*;</span><br><span class="line">import java.util.HashMap;</span><br><span class="line">import java.util.Map;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @author kangyonggan</span><br><span class="line"> * @since 10/29/18</span><br><span class="line"> */</span><br><span class="line">public class QRCodeKit &#123;</span><br><span class="line"></span><br><span class="line">    private static final String QRCODE_DEFAULT_CHARSET = &quot;UTF-8&quot;;</span><br><span class="line"></span><br><span class="line">    private static final int QRCODE_DEFAULT_HEIGHT = 300;</span><br><span class="line"></span><br><span class="line">    private static final int QRCODE_DEFAULT_WIDTH = 300;</span><br><span class="line"></span><br><span class="line">    private static final int BLACK = 0xFF000000;</span><br><span class="line"></span><br><span class="line">    private static final int WHITE = 0xFFFFFFFF;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) throws IOException, NotFoundException &#123;</span><br><span class="line">        String data = &quot;扫码看到我&quot;;</span><br><span class="line">        File logoFile = new File(&quot;/xxx/logo.png&quot;);</span><br><span class="line">        BufferedImage image = QRCodeKit.createQRCodeWithLogo(data, logoFile);</span><br><span class="line">        ImageIO.write(image, &quot;png&quot;, new File(&quot;/xxx/res.png&quot;));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Create qrcode with default settings</span><br><span class="line">     *</span><br><span class="line">     * @param data</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static BufferedImage createQRCode(String data) &#123;</span><br><span class="line">        return createQRCode(data, QRCODE_DEFAULT_WIDTH, QRCODE_DEFAULT_HEIGHT);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Create qrcode with default charset</span><br><span class="line">     *</span><br><span class="line">     * @param data</span><br><span class="line">     * @param width</span><br><span class="line">     * @param height</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static BufferedImage createQRCode(String data, int width, int height) &#123;</span><br><span class="line">        return createQRCode(data, QRCODE_DEFAULT_CHARSET, width, height);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Create qrcode with specified charset</span><br><span class="line">     *</span><br><span class="line">     * @param data</span><br><span class="line">     * @param charset</span><br><span class="line">     * @param width</span><br><span class="line">     * @param height</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static BufferedImage createQRCode(String data, String charset, int width, int height) &#123;</span><br><span class="line">        Map hint = new HashMap();</span><br><span class="line">        hint.put(EncodeHintType.ERROR_CORRECTION, ErrorCorrectionLevel.H);</span><br><span class="line">        hint.put(EncodeHintType.CHARACTER_SET, charset);</span><br><span class="line"></span><br><span class="line">        return createQRCode(data, charset, hint, width, height);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Create qrcode with specified hint</span><br><span class="line">     *</span><br><span class="line">     * @param data</span><br><span class="line">     * @param charset</span><br><span class="line">     * @param hint</span><br><span class="line">     * @param width</span><br><span class="line">     * @param height</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static BufferedImage createQRCode(String data, String charset, Map&lt;EncodeHintType, ?&gt; hint, int width,</span><br><span class="line">                                             int height) &#123;</span><br><span class="line">        BitMatrix matrix;</span><br><span class="line">        try &#123;</span><br><span class="line">            matrix = new MultiFormatWriter().encode(new String(data.getBytes(charset), charset), BarcodeFormat.QR_CODE,</span><br><span class="line">                    width, height, hint);</span><br><span class="line">            return toBufferedImage(matrix);</span><br><span class="line">        &#125; catch (WriterException e) &#123;</span><br><span class="line">            throw new RuntimeException(e.getMessage(), e);</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            throw new RuntimeException(e.getMessage(), e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static BufferedImage toBufferedImage(BitMatrix matrix) &#123;</span><br><span class="line">        int width = matrix.getWidth();</span><br><span class="line">        int height = matrix.getHeight();</span><br><span class="line">        BufferedImage image = new BufferedImage(width, height,</span><br><span class="line">                BufferedImage.TYPE_INT_RGB);</span><br><span class="line">        for (int x = 0; x &lt; width; x++) &#123;</span><br><span class="line">            for (int y = 0; y &lt; height; y++) &#123;</span><br><span class="line">                image.setRGB(x, y, matrix.get(x, y) ? BLACK : WHITE);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return image;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Create qrcode with default settings and logo</span><br><span class="line">     *</span><br><span class="line">     * @param data</span><br><span class="line">     * @param logoFile</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static BufferedImage createQRCodeWithLogo(String data, File logoFile) &#123;</span><br><span class="line">        return createQRCodeWithLogo(data, QRCODE_DEFAULT_WIDTH, QRCODE_DEFAULT_HEIGHT, logoFile);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Create qrcode with default charset and logo</span><br><span class="line">     *</span><br><span class="line">     * @param data</span><br><span class="line">     * @param width</span><br><span class="line">     * @param height</span><br><span class="line">     * @param logoFile</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static BufferedImage createQRCodeWithLogo(String data, int width, int height, File logoFile) &#123;</span><br><span class="line">        return createQRCodeWithLogo(data, QRCODE_DEFAULT_CHARSET, width, height, logoFile);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Create qrcode with specified charset and logo</span><br><span class="line">     *</span><br><span class="line">     * @param data</span><br><span class="line">     * @param charset</span><br><span class="line">     * @param width</span><br><span class="line">     * @param height</span><br><span class="line">     * @param logoFile</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static BufferedImage createQRCodeWithLogo(String data, String charset, int width, int height, File logoFile) &#123;</span><br><span class="line">        Map&lt;EncodeHintType, Object&gt; hint = new HashMap&lt;&gt;(8);</span><br><span class="line">        hint.put(EncodeHintType.ERROR_CORRECTION, ErrorCorrectionLevel.H);</span><br><span class="line">        hint.put(EncodeHintType.CHARACTER_SET, charset);</span><br><span class="line"></span><br><span class="line">        return createQRCodeWithLogo(data, charset, hint, width, height, logoFile);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Create qrcode with specified hint and logo</span><br><span class="line">     *</span><br><span class="line">     * @param data</span><br><span class="line">     * @param charset</span><br><span class="line">     * @param hint</span><br><span class="line">     * @param width</span><br><span class="line">     * @param height</span><br><span class="line">     * @param logoFile</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static BufferedImage createQRCodeWithLogo(String data, String charset, Map&lt;EncodeHintType, ?&gt; hint,</span><br><span class="line">                                                     int width, int height, File logoFile) &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            BufferedImage qrcode = createQRCode(data, charset, hint, width, height);</span><br><span class="line">            BufferedImage logo = ImageIO.read(logoFile);</span><br><span class="line">            int deltaHeight = height - logo.getHeight();</span><br><span class="line">            int deltaWidth = width - logo.getWidth();</span><br><span class="line"></span><br><span class="line">            BufferedImage combined = new BufferedImage(height, width, BufferedImage.TYPE_INT_ARGB);</span><br><span class="line">            Graphics2D g = (Graphics2D) combined.getGraphics();</span><br><span class="line">            g.drawImage(qrcode, 0, 0, null);</span><br><span class="line">            g.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 1f));</span><br><span class="line">            g.drawImage(logo, Math.round(deltaWidth / 2), Math.round(deltaHeight / 2), null);</span><br><span class="line"></span><br><span class="line">            return combined;</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            throw new RuntimeException(e.getMessage(), e);</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            throw new RuntimeException(e.getMessage(), e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Return base64 for image</span><br><span class="line">     *</span><br><span class="line">     * @param image</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static String getImageBase64String(BufferedImage image) &#123;</span><br><span class="line">        String result = null;</span><br><span class="line">        try &#123;</span><br><span class="line">            ByteArrayOutputStream os = new ByteArrayOutputStream();</span><br><span class="line">            OutputStream b64 = new Base64OutputStream(os);</span><br><span class="line">            ImageIO.write(image, &quot;png&quot;, b64);</span><br><span class="line">            result = os.toString(&quot;UTF-8&quot;);</span><br><span class="line">        &#125; catch (UnsupportedEncodingException e) &#123;</span><br><span class="line">            throw new RuntimeException(e.getMessage(), e);</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            throw new RuntimeException(e.getMessage(), e);</span><br><span class="line">        &#125;</span><br><span class="line">        return result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Decode the base64Image data to image</span><br><span class="line">     *</span><br><span class="line">     * @param base64ImageString</span><br><span class="line">     * @param file</span><br><span class="line">     */</span><br><span class="line">    public static void convertBase64StringToImage(String base64ImageString, File file) &#123;</span><br><span class="line">        FileOutputStream os;</span><br><span class="line">        try &#123;</span><br><span class="line">            Base64 d = new Base64();</span><br><span class="line">            byte[] bs = d.decode(base64ImageString);</span><br><span class="line">            os = new FileOutputStream(file.getAbsolutePath());</span><br><span class="line">            os.write(bs);</span><br><span class="line">            os.close();</span><br><span class="line">        &#125; catch (FileNotFoundException e) &#123;</span><br><span class="line">            throw new RuntimeException(e.getMessage(), e);</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            throw new RuntimeException(e.getMessage(), e);</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            throw new RuntimeException(e.getMessage(), e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>生成二维码使用的是zxing:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.google.zxing&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;core&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;3.3.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.google.zxing&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;javase&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;3.3.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></p><p>对应接口文档地址：<a href="https://docs.open.alipay.com/api_1/alipay.trade.precreate" target="_blank" rel="noopener">https://docs.open.alipay.com/api_1/alipay.trade.precreate</a></p><h2 id="四、后台通知"><a href="#四、后台通知" class="headerlink" title="四、后台通知"></a>四、后台通知</h2><p>当用户扫码完成支付后，微信会发起后台通知告诉我们交易成功了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 支付宝后台通知</span><br><span class="line"> *</span><br><span class="line"> * @param request</span><br><span class="line"> * @return</span><br><span class="line"> * @throws Exception</span><br><span class="line"> */</span><br><span class="line">@PostMapping(&quot;alipay&quot;)</span><br><span class="line">public String alipay(HttpServletRequest request) throws Exception &#123;</span><br><span class="line">    Map&lt;String, String&gt; maps = new HashMap&lt;&gt;(16);</span><br><span class="line">    Map requestParams = request.getParameterMap();</span><br><span class="line">    for (Iterator iter = requestParams.keySet().iterator(); iter.hasNext(); ) &#123;</span><br><span class="line">        String name = (String) iter.next();</span><br><span class="line">        String[] values = (String[]) requestParams.get(name);</span><br><span class="line">        String valueStr = &quot;&quot;;</span><br><span class="line">        for (int i = 0; i &lt; values.length; i++) &#123;</span><br><span class="line">            valueStr = (i == values.length - 1) ? valueStr + values[i] : valueStr + values[i] + &quot;,&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        maps.put(name, valueStr);</span><br><span class="line">    &#125;</span><br><span class="line">    log.info(&quot;支付宝后台通知内容:&#123;&#125;&quot;, maps);</span><br><span class="line"></span><br><span class="line">    // 验签</span><br><span class="line">    boolean signVerified = AlipaySignature.rsaCheckV1(maps, aliPubKey, &quot;UTF-8&quot;, &quot;RSA2&quot;);</span><br><span class="line">    if (signVerified) &#123;</span><br><span class="line">        log.info(&quot;验签通过&quot;);</span><br><span class="line"></span><br><span class="line">        String serialNo = maps.get(&quot;out_trade_no&quot;);</span><br><span class="line">        Command command = commandService.findCommandBySerialNo(serialNo);</span><br><span class="line">        if (command == null) &#123;</span><br><span class="line">            log.info(&quot;异步通知流水号不存在:&#123;&#125;&quot;, serialNo);</span><br><span class="line">            return &quot;false&quot;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (&quot;TRADE_SUCCESS&quot;.equals(maps.get(&quot;trade_status&quot;)) &amp;&amp; !&quot;YF&quot;.contains(command.getTranCo())) &#123;</span><br><span class="line">            log.info(&quot;交易成功，通知商户发货&quot;);</span><br><span class="line">            // 通知商户发货</span><br><span class="line">            if(paymentHelper.notify(command)) &#123;</span><br><span class="line">                // 响应落库, 更新交易状态</span><br><span class="line">                aliPayTransactionService.processNotice(maps, command);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        log.info(&quot;验签失败&quot;);</span><br><span class="line">        return &quot;failure&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return &quot;success&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对应的接口文档：<a href="https://docs.open.alipay.com/api_1/alipay.trade.precreate/" target="_blank" rel="noopener">https://docs.open.alipay.com/api_1/alipay.trade.precreate/</a></p><blockquote><p>在文档的最后一行。</p></blockquote><h2 id="五、单笔查询"><a href="#五、单笔查询" class="headerlink" title="五、单笔查询"></a>五、单笔查询</h2><p>如果我们没收到后台通知怎么办？这时候就可以通过单笔查询主动去支付宝开放平台查询订单状态。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">Map&lt;String, String&gt; bizContent = new HashMap&lt;&gt;(4);</span><br><span class="line">bizContent.put(&quot;out_trade_no&quot;, command.getSerialNo());</span><br><span class="line"></span><br><span class="line">AlipayClient alipayClient = new DefaultAlipayClient(apiUrl, appId, privateKey, &quot;json&quot;, &quot;utf-8&quot;, publicKey, &quot;RSA2&quot;);</span><br><span class="line">AlipayTradeQueryRequest request = new AlipayTradeQueryRequest();</span><br><span class="line">request.setBizContent(JSON.toJSONString(bizContent));</span><br><span class="line">AlipayTradeQueryResponse response = alipayClient.execute(request);</span><br><span class="line">log.info(&quot;查询的响应:&#123;&#125;&quot;, response.getBody());</span><br><span class="line"></span><br><span class="line">String respCo = response.getCode();</span><br><span class="line">String respMsg = response.getMsg();</span><br><span class="line">String tranSt = TranSt.I.getCode();</span><br><span class="line">String amt = response.getBuyerPayAmount();</span><br><span class="line">BigDecimal amount = new BigDecimal(StringUtils.isEmpty(amt) ? &quot;0&quot; : amt);</span><br><span class="line">String channelSerialNo = response.getTradeNo();</span><br><span class="line"></span><br><span class="line">if (response.isSuccess()) &#123;</span><br><span class="line">    log.info(&quot;查询得到结果&quot;);</span><br><span class="line"></span><br><span class="line">    String tradeStatus = response.getTradeStatus();</span><br><span class="line">    log.info(&quot;交易状态:&#123;&#125;&quot;, tradeStatus);</span><br><span class="line">    if (&quot;TRADE_SUCCESS&quot;.equals(tradeStatus)) &#123;</span><br><span class="line">        tranSt = TranSt.Y.getCode();</span><br><span class="line">    &#125;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    log.info(&quot;查询失败&quot;);</span><br><span class="line">&#125;</span><br><span class="line">log.info(&quot;查询到的交易:&#123;&#125;, 交易结果:&#123;&#125;&quot;, command.getSerialNo(), tranSt);</span><br></pre></td></tr></table></figure><p>对应接口文档地址：<a href="https://docs.open.alipay.com/api_1/alipay.trade.query/" target="_blank" rel="noopener">https://docs.open.alipay.com/api_1/alipay.trade.query/</a></p><h2 id="六、下载对账单"><a href="#六、下载对账单" class="headerlink" title="六、下载对账单"></a>六、下载对账单</h2><p>如果我们需要日终对账，那么就要用到下载对账单接口。但是此接口不大符合我的需要，因此我没用这个接口，而是循环使用单笔查询代替的。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;名词定义&quot;&gt;&lt;a href=&quot;#名词定义&quot; class=&quot;headerlink&quot; title=&quot;名词定义&quot;&gt;&lt;/a&gt;名词定义&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;用户：在我们网站上交易的客户。&lt;/li&gt;
&lt;li&gt;支付网关：是我们商户和支付宝开放平台对接的系统。&lt;/li&gt;
&lt;li&gt;商户系统：充值成功后用于发货的系统。&lt;/li&gt;
&lt;li&gt;微信支付平台：是阿里的支付宝开放。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;支付宝扫码支付官网地址&quot;&gt;&lt;a href=&quot;#支付宝扫码支付官网地址&quot; class=&quot;headerlink&quot; title=&quot;支付宝扫码支付官网地址&quot;&gt;&lt;/a&gt;支付宝扫码支付官网地址&lt;/h2&gt;&lt;p&gt;支付接口：&lt;a href=&quot;https://docs.open.alipay.com/api_1/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://docs.open.alipay.com/api_1/&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Java后台" scheme="http://kangyonggan.com/categories/Java%E5%90%8E%E5%8F%B0/"/>
    
    
      <category term="Java" scheme="http://kangyonggan.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>微信扫码支付的开发过程</title>
    <link href="http://kangyonggan.com/2018/10/29/%E5%BE%AE%E4%BF%A1%E6%89%AB%E7%A0%81%E6%94%AF%E4%BB%98%E7%9A%84%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B/"/>
    <id>http://kangyonggan.com/2018/10/29/微信扫码支付的开发过程/</id>
    <published>2018-10-29T07:25:20.000Z</published>
    <updated>2018-10-29T08:22:26.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="名词定义"><a href="#名词定义" class="headerlink" title="名词定义"></a>名词定义</h2><ul><li>用户：在我们网站上交易的客户。</li><li>支付网关：是我们商户和微信支付平台对接的系统。</li><li>商户系统：充值成功后用于发货的系统。</li><li>微信支付平台：是腾讯的微信支付平台。</li></ul><h2 id="微信支付官网地址"><a href="#微信支付官网地址" class="headerlink" title="微信支付官网地址"></a>微信支付官网地址</h2><p>扫码支付介绍：<a href="https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=6_1" target="_blank" rel="noopener">https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=6_1</a></p><a id="more"></a><h2 id="序列图"><a href="#序列图" class="headerlink" title="序列图"></a>序列图</h2><p>用户登录我们的网站，选择好商品之后，点击使用微信扫码付款，直到用户户看到付款成功。对应的序列图如下：<br><img src="/uploads/wxpay-flow.png" alt=""></p><p>我们就是要做上图这么一件事，下面是详细的开发步骤。</p><h2 id="一、注册"><a href="#一、注册" class="headerlink" title="一、注册"></a>一、注册</h2><p>注册地址：<a href="https://mp.weixin.qq.com/cgi-bin/registermidpage?action=index&amp;lang=zh_CN&amp;token=" target="_blank" rel="noopener">https://mp.weixin.qq.com/cgi-bin/registermidpage?action=index&amp;lang=zh_CN&amp;token=</a></p><blockquote><p>只有企业才能进行微信认证，只有进行了认证才能玩微信支付。</p></blockquote><h2 id="二、配置"><a href="#二、配置" class="headerlink" title="二、配置"></a>二、配置</h2><p>登录微信公共号，获取如下三项配置：</p><ol><li>公众账号ID - 微信支付分配的公众账号ID</li><li>商户号 - 微信支付分配的商户号</li><li>key - key设置路径：微信商户平台(pay.weixin.qq.com)–&gt;账户设置–&gt;API安全–&gt;密钥设置</li></ol><h2 id="三、预交易（统一下单）"><a href="#三、预交易（统一下单）" class="headerlink" title="三、预交易（统一下单）"></a>三、预交易（统一下单）</h2><p>这是一个预交易接口，即调用后不会真正的发生金钱交易，只是告诉微信有个用户一会要支付1000元买手机，你给我生成一个支付链接，我把这个链接变成二维码，让他使用微信来扫描。调用此接口后会返回支付链接。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 微信（预）支付</span><br><span class="line"> *</span><br><span class="line"> * @param command</span><br><span class="line"> * @return</span><br><span class="line"> */</span><br><span class="line">public CommonResponse pay(Command command) &#123;</span><br><span class="line">    log.info(&quot;进入微信支付接口&quot;);</span><br><span class="line">    PayResponse payResponse = PayResponse.getResponse();</span><br><span class="line"></span><br><span class="line">    try &#123;</span><br><span class="line">        WXPay wxpay = new WXPay(wxPayConfig);</span><br><span class="line"></span><br><span class="line">        Map&lt;String, String&gt; data = new HashMap&lt;&gt;(16);</span><br><span class="line">        data.put(&quot;body&quot;, &quot;XX充值中心-充值&quot;);</span><br><span class="line">        data.put(&quot;out_trade_no&quot;, command.getSerialNo());</span><br><span class="line">        data.put(&quot;fee_type&quot;, &quot;CNY&quot;);</span><br><span class="line">        data.put(&quot;total_fee&quot;, String.valueOf(command.getAmount().multiply(BigDecimal.valueOf(100)).toBigInteger()));</span><br><span class="line">        data.put(&quot;spbill_create_ip&quot;, command.getClientIp());</span><br><span class="line">        data.put(&quot;notify_url&quot;, notifyUrl);</span><br><span class="line">        data.put(&quot;trade_type&quot;, &quot;NATIVE&quot;);</span><br><span class="line">        data.put(&quot;product_id&quot;, command.getProductCo());</span><br><span class="line"></span><br><span class="line">        Map&lt;String, String&gt; resp = wxpay.unifiedOrder(data);</span><br><span class="line">        String respCo = resp.get(&quot;return_code&quot;);</span><br><span class="line">        String respMsg = resp.get(&quot;return_msg&quot;);</span><br><span class="line">        log.info(&quot;微信支付响应码:&#123;&#125;&quot;, respCo);</span><br><span class="line">        log.info(&quot;微信支付响应消息:&#123;&#125;&quot;, respMsg);</span><br><span class="line">        if (WXPayConstants.SUCCESS.equals(respCo)) &#123;</span><br><span class="line">            String codeUrl = resp.get(&quot;code_url&quot;);</span><br><span class="line">            String prepayId = resp.get(&quot;prepay_id&quot;);</span><br><span class="line">            log.info(&quot;微信支付获取二维码成功：&#123;&#125;&quot;, codeUrl);</span><br><span class="line"></span><br><span class="line">            String qrName = command.getSerialNo() + &quot;.png&quot;;</span><br><span class="line">            String name = fileRootPath + &quot;qrcode/&quot; + qrName;</span><br><span class="line"></span><br><span class="line">            BufferedImage image = QRCodeKit.createQRCodeWithLogo(codeUrl, new File(fileRootPath + &quot;qrcode/logo.png&quot;));</span><br><span class="line">            ImageIO.write(image, &quot;png&quot;, new File(name));</span><br><span class="line"></span><br><span class="line">            log.info(&quot;二维码生成成功，路径： &#123;&#125;&quot;, name);</span><br><span class="line"></span><br><span class="line">            payResponse.setApiUrl(&quot;upload/qrcode/&quot; + qrName);</span><br><span class="line">            payResponse.setChannelSerialNo(prepayId);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        payResponse.setRespCo(respCo);</span><br><span class="line">        payResponse.setRespMsg(respMsg);</span><br><span class="line">        payResponse.setRespData(resp.toString());</span><br><span class="line">    &#125; catch (Exception e) &#123;</span><br><span class="line">        throw new SendException(&quot;请求微信支付接口异常&quot;, e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    log.info(&quot;离开微信支付接口&quot;);</span><br><span class="line">    return payResponse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>wxPayConfig是微信支付配置，代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import demo.sdk.IWXPayDomain;</span><br><span class="line">import demo.sdk.WXPayConfig;</span><br><span class="line">import lombok.extern.log4j.Log4j2;</span><br><span class="line">import org.springframework.beans.factory.annotation.Value;</span><br><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line">import java.io.InputStream;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @author kangyonggan</span><br><span class="line"> * @since 10/9/18</span><br><span class="line"> */</span><br><span class="line">@Log4j2</span><br><span class="line">@Component</span><br><span class="line">public class MyWXPayConfig extends WXPayConfig &#123;</span><br><span class="line"></span><br><span class="line">    @Value(&quot;$&#123;wxpay.appid&#125;&quot;)</span><br><span class="line">    private String appId;</span><br><span class="line"></span><br><span class="line">    @Value(&quot;$&#123;wxpay.mchid&#125;&quot;)</span><br><span class="line">    private String mchId;</span><br><span class="line"></span><br><span class="line">    @Value(&quot;$&#123;wxpay.key&#125;&quot;)</span><br><span class="line">    private String key;</span><br><span class="line"></span><br><span class="line">    @Value(&quot;$&#123;wxpay.domain&#125;&quot;)</span><br><span class="line">    private String domain;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public String getAppID() &#123;</span><br><span class="line">        return appId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public String getMchID() &#123;</span><br><span class="line">        return mchId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public String getKey() &#123;</span><br><span class="line">        return key;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public InputStream getCertStream() &#123;</span><br><span class="line">        return null;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public IWXPayDomain getWXPayDomain() &#123;</span><br><span class="line">        IWXPayDomain iwxPayDomain = new IWXPayDomain() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public void report(String domain, long elapsedTimeMillis, Exception ex) &#123;</span><br><span class="line">                log.error(&quot;微信支付域名:&#123;&#125;, &#123;&#125;&quot;, domain, elapsedTimeMillis, ex);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            @Override</span><br><span class="line">            public DomainInfo getDomain(WXPayConfig config) &#123;</span><br><span class="line">                return new DomainInfo(domain, true);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        return iwxPayDomain;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>QRCodeKit是一个二维码生成工具：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import com.google.zxing.*;</span><br><span class="line">import com.google.zxing.common.BitMatrix;</span><br><span class="line">import com.google.zxing.qrcode.decoder.ErrorCorrectionLevel;</span><br><span class="line">import org.apache.commons.codec.binary.Base64;</span><br><span class="line">import org.apache.commons.codec.binary.Base64OutputStream;</span><br><span class="line"></span><br><span class="line">import javax.imageio.ImageIO;</span><br><span class="line">import java.awt.*;</span><br><span class="line">import java.awt.image.BufferedImage;</span><br><span class="line">import java.io.*;</span><br><span class="line">import java.util.HashMap;</span><br><span class="line">import java.util.Map;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @author kangyonggan</span><br><span class="line"> * @since 10/29/18</span><br><span class="line"> */</span><br><span class="line">public class QRCodeKit &#123;</span><br><span class="line"></span><br><span class="line">    private static final String QRCODE_DEFAULT_CHARSET = &quot;UTF-8&quot;;</span><br><span class="line"></span><br><span class="line">    private static final int QRCODE_DEFAULT_HEIGHT = 300;</span><br><span class="line"></span><br><span class="line">    private static final int QRCODE_DEFAULT_WIDTH = 300;</span><br><span class="line"></span><br><span class="line">    private static final int BLACK = 0xFF000000;</span><br><span class="line"></span><br><span class="line">    private static final int WHITE = 0xFFFFFFFF;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) throws IOException, NotFoundException &#123;</span><br><span class="line">        String data = &quot;扫码看到我&quot;;</span><br><span class="line">        File logoFile = new File(&quot;/xxx/logo.png&quot;);</span><br><span class="line">        BufferedImage image = QRCodeKit.createQRCodeWithLogo(data, logoFile);</span><br><span class="line">        ImageIO.write(image, &quot;png&quot;, new File(&quot;/xxx/res.png&quot;));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Create qrcode with default settings</span><br><span class="line">     *</span><br><span class="line">     * @param data</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static BufferedImage createQRCode(String data) &#123;</span><br><span class="line">        return createQRCode(data, QRCODE_DEFAULT_WIDTH, QRCODE_DEFAULT_HEIGHT);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Create qrcode with default charset</span><br><span class="line">     *</span><br><span class="line">     * @param data</span><br><span class="line">     * @param width</span><br><span class="line">     * @param height</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static BufferedImage createQRCode(String data, int width, int height) &#123;</span><br><span class="line">        return createQRCode(data, QRCODE_DEFAULT_CHARSET, width, height);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Create qrcode with specified charset</span><br><span class="line">     *</span><br><span class="line">     * @param data</span><br><span class="line">     * @param charset</span><br><span class="line">     * @param width</span><br><span class="line">     * @param height</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static BufferedImage createQRCode(String data, String charset, int width, int height) &#123;</span><br><span class="line">        Map hint = new HashMap();</span><br><span class="line">        hint.put(EncodeHintType.ERROR_CORRECTION, ErrorCorrectionLevel.H);</span><br><span class="line">        hint.put(EncodeHintType.CHARACTER_SET, charset);</span><br><span class="line"></span><br><span class="line">        return createQRCode(data, charset, hint, width, height);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Create qrcode with specified hint</span><br><span class="line">     *</span><br><span class="line">     * @param data</span><br><span class="line">     * @param charset</span><br><span class="line">     * @param hint</span><br><span class="line">     * @param width</span><br><span class="line">     * @param height</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static BufferedImage createQRCode(String data, String charset, Map&lt;EncodeHintType, ?&gt; hint, int width,</span><br><span class="line">                                             int height) &#123;</span><br><span class="line">        BitMatrix matrix;</span><br><span class="line">        try &#123;</span><br><span class="line">            matrix = new MultiFormatWriter().encode(new String(data.getBytes(charset), charset), BarcodeFormat.QR_CODE,</span><br><span class="line">                    width, height, hint);</span><br><span class="line">            return toBufferedImage(matrix);</span><br><span class="line">        &#125; catch (WriterException e) &#123;</span><br><span class="line">            throw new RuntimeException(e.getMessage(), e);</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            throw new RuntimeException(e.getMessage(), e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static BufferedImage toBufferedImage(BitMatrix matrix) &#123;</span><br><span class="line">        int width = matrix.getWidth();</span><br><span class="line">        int height = matrix.getHeight();</span><br><span class="line">        BufferedImage image = new BufferedImage(width, height,</span><br><span class="line">                BufferedImage.TYPE_INT_RGB);</span><br><span class="line">        for (int x = 0; x &lt; width; x++) &#123;</span><br><span class="line">            for (int y = 0; y &lt; height; y++) &#123;</span><br><span class="line">                image.setRGB(x, y, matrix.get(x, y) ? BLACK : WHITE);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return image;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Create qrcode with default settings and logo</span><br><span class="line">     *</span><br><span class="line">     * @param data</span><br><span class="line">     * @param logoFile</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static BufferedImage createQRCodeWithLogo(String data, File logoFile) &#123;</span><br><span class="line">        return createQRCodeWithLogo(data, QRCODE_DEFAULT_WIDTH, QRCODE_DEFAULT_HEIGHT, logoFile);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Create qrcode with default charset and logo</span><br><span class="line">     *</span><br><span class="line">     * @param data</span><br><span class="line">     * @param width</span><br><span class="line">     * @param height</span><br><span class="line">     * @param logoFile</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static BufferedImage createQRCodeWithLogo(String data, int width, int height, File logoFile) &#123;</span><br><span class="line">        return createQRCodeWithLogo(data, QRCODE_DEFAULT_CHARSET, width, height, logoFile);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Create qrcode with specified charset and logo</span><br><span class="line">     *</span><br><span class="line">     * @param data</span><br><span class="line">     * @param charset</span><br><span class="line">     * @param width</span><br><span class="line">     * @param height</span><br><span class="line">     * @param logoFile</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static BufferedImage createQRCodeWithLogo(String data, String charset, int width, int height, File logoFile) &#123;</span><br><span class="line">        Map&lt;EncodeHintType, Object&gt; hint = new HashMap&lt;&gt;(8);</span><br><span class="line">        hint.put(EncodeHintType.ERROR_CORRECTION, ErrorCorrectionLevel.H);</span><br><span class="line">        hint.put(EncodeHintType.CHARACTER_SET, charset);</span><br><span class="line"></span><br><span class="line">        return createQRCodeWithLogo(data, charset, hint, width, height, logoFile);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Create qrcode with specified hint and logo</span><br><span class="line">     *</span><br><span class="line">     * @param data</span><br><span class="line">     * @param charset</span><br><span class="line">     * @param hint</span><br><span class="line">     * @param width</span><br><span class="line">     * @param height</span><br><span class="line">     * @param logoFile</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static BufferedImage createQRCodeWithLogo(String data, String charset, Map&lt;EncodeHintType, ?&gt; hint,</span><br><span class="line">                                                     int width, int height, File logoFile) &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            BufferedImage qrcode = createQRCode(data, charset, hint, width, height);</span><br><span class="line">            BufferedImage logo = ImageIO.read(logoFile);</span><br><span class="line">            int deltaHeight = height - logo.getHeight();</span><br><span class="line">            int deltaWidth = width - logo.getWidth();</span><br><span class="line"></span><br><span class="line">            BufferedImage combined = new BufferedImage(height, width, BufferedImage.TYPE_INT_ARGB);</span><br><span class="line">            Graphics2D g = (Graphics2D) combined.getGraphics();</span><br><span class="line">            g.drawImage(qrcode, 0, 0, null);</span><br><span class="line">            g.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 1f));</span><br><span class="line">            g.drawImage(logo, Math.round(deltaWidth / 2), Math.round(deltaHeight / 2), null);</span><br><span class="line"></span><br><span class="line">            return combined;</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            throw new RuntimeException(e.getMessage(), e);</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            throw new RuntimeException(e.getMessage(), e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Return base64 for image</span><br><span class="line">     *</span><br><span class="line">     * @param image</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static String getImageBase64String(BufferedImage image) &#123;</span><br><span class="line">        String result = null;</span><br><span class="line">        try &#123;</span><br><span class="line">            ByteArrayOutputStream os = new ByteArrayOutputStream();</span><br><span class="line">            OutputStream b64 = new Base64OutputStream(os);</span><br><span class="line">            ImageIO.write(image, &quot;png&quot;, b64);</span><br><span class="line">            result = os.toString(&quot;UTF-8&quot;);</span><br><span class="line">        &#125; catch (UnsupportedEncodingException e) &#123;</span><br><span class="line">            throw new RuntimeException(e.getMessage(), e);</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            throw new RuntimeException(e.getMessage(), e);</span><br><span class="line">        &#125;</span><br><span class="line">        return result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Decode the base64Image data to image</span><br><span class="line">     *</span><br><span class="line">     * @param base64ImageString</span><br><span class="line">     * @param file</span><br><span class="line">     */</span><br><span class="line">    public static void convertBase64StringToImage(String base64ImageString, File file) &#123;</span><br><span class="line">        FileOutputStream os;</span><br><span class="line">        try &#123;</span><br><span class="line">            Base64 d = new Base64();</span><br><span class="line">            byte[] bs = d.decode(base64ImageString);</span><br><span class="line">            os = new FileOutputStream(file.getAbsolutePath());</span><br><span class="line">            os.write(bs);</span><br><span class="line">            os.close();</span><br><span class="line">        &#125; catch (FileNotFoundException e) &#123;</span><br><span class="line">            throw new RuntimeException(e.getMessage(), e);</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            throw new RuntimeException(e.getMessage(), e);</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            throw new RuntimeException(e.getMessage(), e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>生成二维码使用的是zxing:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.google.zxing&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;core&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;3.3.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.google.zxing&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;javase&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;3.3.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></p><p>其他几个类，都是微信的sdk：  </p><ul><li>IWXPayDomain</li><li>WXPay</li><li>WXPayConfig</li><li>WXPayConstants</li><li>WXPayReport</li><li>WXPayRequest</li><li>WXPayUtil</li><li>WXPayXmlUtil</li></ul><p>sdk下载地址：<a href="https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=11_1" target="_blank" rel="noopener">https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=11_1</a></p><p>对应接口文档地址：<a href="https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=9_1" target="_blank" rel="noopener">https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=9_1</a></p><h2 id="四、后台通知"><a href="#四、后台通知" class="headerlink" title="四、后台通知"></a>四、后台通知</h2><p>当用户扫码完成支付后，微信会发起后台通知告诉我们交易成功了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 微信支付后台通知</span><br><span class="line"> *</span><br><span class="line"> * @param request</span><br><span class="line"> * @return</span><br><span class="line"> * @throws Exception</span><br><span class="line"> */</span><br><span class="line">@PostMapping(&quot;wxpay&quot;)</span><br><span class="line">public String wxpay(HttpServletRequest request) throws Exception &#123;</span><br><span class="line">    InputStream inStream = null;</span><br><span class="line">    ByteArrayOutputStream outSteam = null;</span><br><span class="line">    try &#123;</span><br><span class="line">        inStream = request.getInputStream();</span><br><span class="line">        outSteam = new ByteArrayOutputStream();</span><br><span class="line">        byte[] buffer = new byte[1024];</span><br><span class="line">        int len;</span><br><span class="line">        while ((len = inStream.read(buffer)) != -1) &#123;</span><br><span class="line">            outSteam.write(buffer, 0, len);</span><br><span class="line">        &#125;</span><br><span class="line">        String result = new String(outSteam.toByteArray(), &quot;utf-8&quot;);</span><br><span class="line">        log.info(&quot;微信支付后台通知内容:&#123;&#125;&quot;, result);</span><br><span class="line">        WXPay wxpay = new WXPay(wxPayConfig);</span><br><span class="line"></span><br><span class="line">        // 转换成map</span><br><span class="line">        Map&lt;String, String&gt; notifyMap = WXPayUtil.xmlToMap(result);</span><br><span class="line">        if (wxpay.isResponseSignatureValid(notifyMap)) &#123;</span><br><span class="line">            log.info(&quot;验签通过&quot;);</span><br><span class="line"></span><br><span class="line">            String serialNo = notifyMap.get(&quot;out_trade_no&quot;);</span><br><span class="line">            Command command = commandService.findCommandBySerialNo(serialNo);</span><br><span class="line">            if (command == null) &#123;</span><br><span class="line">                log.info(&quot;异步通知流水号不存在:&#123;&#125;&quot;, serialNo);</span><br><span class="line">                return &quot;&lt;xml&gt;&lt;return_code&gt;&lt;![CDATA[FAIL]]&gt;&lt;/return_code&gt;&lt;return_msg&gt;&lt;![CDATA[ERR]]&gt;&lt;/return_msg&gt;&lt;/xml&gt;&quot;;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            if (WXPayConstants.SUCCESS.equals(notifyMap.get(&quot;result_code&quot;))) &#123;</span><br><span class="line">                log.info(&quot;交易成功，状态更新为待发货&quot;);</span><br><span class="line"></span><br><span class="line">                // 更新交易状态</span><br><span class="line">                command.setTranSt(TranSt.P.getCode());</span><br><span class="line">                commandService.updateTranSt(command);</span><br><span class="line"></span><br><span class="line">                // 通知商户系统发货</span><br><span class="line">                if(paymentHelper.notify(command)) &#123;</span><br><span class="line">                    // 响应落库, 更新交易状态</span><br><span class="line">                    wxPayTransactionService.processNotice(notifyMap, command);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            log.info(&quot;验签失败&quot;);</span><br><span class="line">            // 签名错误，如果数据里没有sign字段，也认为是签名错误</span><br><span class="line">            return &quot;&lt;xml&gt;&lt;return_code&gt;&lt;![CDATA[FAIL]]&gt;&lt;/return_code&gt;&lt;return_msg&gt;&lt;![CDATA[ERR]]&gt;&lt;/return_msg&gt;&lt;/xml&gt;&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; catch (Exception e) &#123;</span><br><span class="line">        log.error(&quot;微信支付后台通知接收异常&quot;, e);</span><br><span class="line">    &#125; finally &#123;</span><br><span class="line">        if (outSteam != null) &#123;</span><br><span class="line">            outSteam.close();</span><br><span class="line">        &#125;</span><br><span class="line">        if (inStream != null) &#123;</span><br><span class="line">            inStream.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return &quot;&lt;xml&gt;&lt;return_code&gt;&lt;![CDATA[SUCCESS]]&gt;&lt;/return_code&gt;&lt;return_msg&gt;&lt;![CDATA[OK]]&gt;&lt;/return_msg&gt;&lt;/xml&gt;&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对应接口文档地址：<a href="https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=9_7&amp;index=8" target="_blank" rel="noopener">https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=9_7&amp;index=8</a></p><h2 id="五、单笔查询"><a href="#五、单笔查询" class="headerlink" title="五、单笔查询"></a>五、单笔查询</h2><p>如果我们没收到后台通知怎么办？这时候就可以通过单笔查询主动去微信支付平台查询订单状态。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">WXPay wxpay = new WXPay(wxPayConfig);</span><br><span class="line"></span><br><span class="line">Map&lt;String, String&gt; data = new HashMap&lt;&gt;(4);</span><br><span class="line">data.put(&quot;out_trade_no&quot;, command.getSerialNo());</span><br><span class="line"></span><br><span class="line">Map&lt;String, String&gt; resp = wxpay.orderQuery(data);</span><br><span class="line">String respCo = resp.get(&quot;return_code&quot;);</span><br><span class="line">String respMsg = resp.get(&quot;return_msg&quot;);</span><br><span class="line">String tranSt = TranSt.I.getCode();</span><br><span class="line">BigDecimal amount = BigDecimal.ZERO;</span><br><span class="line">String channelSerialNo = &quot;&quot;;</span><br><span class="line"></span><br><span class="line">log.info(&quot;微信支付查询响应码:&#123;&#125;&quot;, respCo);</span><br><span class="line">log.info(&quot;微信支付查询响应消息:&#123;&#125;&quot;, respMsg);</span><br><span class="line">if (WXPayConstants.SUCCESS.equals(respCo)) &#123;</span><br><span class="line">    tranSt = resp.get(&quot;trade_state&quot;);</span><br><span class="line">    String errCode = resp.get(&quot;err_code&quot;);</span><br><span class="line">    log.info(&quot;微信支付查询回来的交易状态：&#123;&#125;&quot;, tranSt);</span><br><span class="line">    log.info(&quot;微信支付查询回来的errCode：&#123;&#125;&quot;, errCode);</span><br><span class="line"></span><br><span class="line">    channelSerialNo = resp.get(&quot;transaction_id&quot;);</span><br><span class="line">    amount = new BigDecimal(resp.getOrDefault(&quot;total_fee&quot;, &quot;0&quot;));</span><br><span class="line">    if (amount.compareTo(BigDecimal.ZERO) &gt; 0) &#123;</span><br><span class="line">        amount = amount.divide(BigDecimal.valueOf(100));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (WXPayConstants.SUCCESS.equals(tranSt)) &#123;</span><br><span class="line">        tranSt = TranSt.Y.getCode();</span><br><span class="line">    &#125; else if (&quot;ORDERNOTEXIST&quot;.equals(errCode)) &#123;</span><br><span class="line">        log.info(&quot;订单不存在&quot;);</span><br><span class="line">        tranSt = TranSt.F.getCode();</span><br><span class="line">    &#125; else if (&quot;PAYERROR&quot;.equals(tranSt)) &#123;</span><br><span class="line">        tranSt = TranSt.F.getCode();</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        tranSt = TranSt.I.getCode();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对应接口文档地址：<a href="https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=9_2" target="_blank" rel="noopener">https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=9_2</a></p><h2 id="六、下载对账单"><a href="#六、下载对账单" class="headerlink" title="六、下载对账单"></a>六、下载对账单</h2><p>如果我们需要日终对账，那么就要用到下载对账单接口。但是此接口不大符合我的需要，因此我没用这个接口，而是循环使用单笔查询代替的。</p><p>对应接口文档地址：<a href="https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=9_6" target="_blank" rel="noopener">https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=9_6</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;名词定义&quot;&gt;&lt;a href=&quot;#名词定义&quot; class=&quot;headerlink&quot; title=&quot;名词定义&quot;&gt;&lt;/a&gt;名词定义&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;用户：在我们网站上交易的客户。&lt;/li&gt;
&lt;li&gt;支付网关：是我们商户和微信支付平台对接的系统。&lt;/li&gt;
&lt;li&gt;商户系统：充值成功后用于发货的系统。&lt;/li&gt;
&lt;li&gt;微信支付平台：是腾讯的微信支付平台。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;微信支付官网地址&quot;&gt;&lt;a href=&quot;#微信支付官网地址&quot; class=&quot;headerlink&quot; title=&quot;微信支付官网地址&quot;&gt;&lt;/a&gt;微信支付官网地址&lt;/h2&gt;&lt;p&gt;扫码支付介绍：&lt;a href=&quot;https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=6_1&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=6_1&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Java后台" scheme="http://kangyonggan.com/categories/Java%E5%90%8E%E5%8F%B0/"/>
    
    
      <category term="Java" scheme="http://kangyonggan.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>境外支付平台PayPal接口的开发过程</title>
    <link href="http://kangyonggan.com/2018/10/26/%E5%A2%83%E5%A4%96%E6%94%AF%E4%BB%98%E5%B9%B3%E5%8F%B0PayPal%E6%8E%A5%E5%8F%A3%E7%9A%84%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B/"/>
    <id>http://kangyonggan.com/2018/10/26/境外支付平台PayPal接口的开发过程/</id>
    <published>2018-10-26T08:47:19.000Z</published>
    <updated>2018-10-29T07:28:49.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="名词定义"><a href="#名词定义" class="headerlink" title="名词定义"></a>名词定义</h2><ul><li>用户：在我们网站上交易的客户。</li><li>支付网关：是我们商户和PayPal对接的系统。</li><li>商户系统：充值成功后用于发货的系统。</li><li>PayPal：是海外的一家支付平台。</li></ul><h2 id="PayPal官网地址"><a href="#PayPal官网地址" class="headerlink" title="PayPal官网地址"></a>PayPal官网地址</h2><p>官网：<a href="https://paypal.com" target="_blank" rel="noopener">https://paypal.com</a><br>开发者网站：<a href="https://developer.paypal.com" target="_blank" rel="noopener">https://developer.paypal.com</a><br>沙盒地址：<a href="https://www.sandbox.paypal.com/" target="_blank" rel="noopener">https://www.sandbox.paypal.com/</a><br>Demo地址：<a href="https://demo.paypal.com" target="_blank" rel="noopener">https://demo.paypal.com</a></p><a id="more"></a><h2 id="序列图"><a href="#序列图" class="headerlink" title="序列图"></a>序列图</h2><p>用户登录我们的网站，选择好商品之后，点击使用PayPal付款，直到用户户看到付款成功。对应的序列图如下：<br><img src="/uploads/paypal00.png" alt=""></p><p>我们就是要做上图这么一件事，下面是详细的开发步骤。</p><h2 id="一、注册个人账号"><a href="#一、注册个人账号" class="headerlink" title="一、注册个人账号"></a>一、注册个人账号</h2><p>注册地址：<a href="https://www.paypal.com/us/webapps/mpp/account-selection" target="_blank" rel="noopener">https://www.paypal.com/us/webapps/mpp/account-selection</a></p><p>选择<code>个人账户</code>即可。</p><p><img src="/uploads/paypal01.png" alt=""><br><img src="/uploads/paypal02.png" alt=""></p><p>只需按部就班填写即可，此处不再截图注册流程。</p><h2 id="二、创建测试账号"><a href="#二、创建测试账号" class="headerlink" title="二、创建测试账号"></a>二、创建测试账号</h2><p>开发者网站：<a href="https://developer.paypal.com/" target="_blank" rel="noopener">https://developer.paypal.com/</a><br>用上面注册的账户登录开发者网站，在工作台上创建一个商户账号和一个买家账号，用于开发和测试。<br><img src="/uploads/paypal03.png" alt=""></p><p>在创建买家账户的时候，别忘了给买家账户里多加一些钱。</p><h2 id="三、获取clientId和secret"><a href="#三、获取clientId和secret" class="headerlink" title="三、获取clientId和secret"></a>三、获取clientId和secret</h2><p>在调用REST API时要在请求头中加入token，而token是用clientId和secret获取的。</p><p><img src="/uploads/paypal04.png" alt=""><br><img src="/uploads/paypal05.png" alt=""></p><h2 id="四、获取token"><a href="#四、获取token" class="headerlink" title="四、获取token"></a>四、获取token</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">import com.alibaba.fastjson.JSON;</span><br><span class="line">import com.alibaba.fastjson.JSONObject;</span><br><span class="line">import lombok.extern.log4j.Log4j2;</span><br><span class="line">import org.apache.commons.codec.binary.Base64;</span><br><span class="line">import org.apache.commons.lang3.StringUtils;</span><br><span class="line">import org.springframework.beans.factory.annotation.Value;</span><br><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line">import java.util.HashMap;</span><br><span class="line">import java.util.Map;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @author kangyonggan</span><br><span class="line"> * @since 10/24/18</span><br><span class="line"> */</span><br><span class="line">@Component</span><br><span class="line">@Log4j2</span><br><span class="line">public class PayPalToken &#123;</span><br><span class="line"></span><br><span class="line">    @Value(&quot;$&#123;paypal.clientId&#125;&quot;)</span><br><span class="line">    private String clientId;</span><br><span class="line"></span><br><span class="line">    @Value(&quot;$&#123;paypal.secret&#125;&quot;)</span><br><span class="line">    private String secret;</span><br><span class="line"></span><br><span class="line">    @Value(&quot;$&#123;paypal.tokenUrl&#125;&quot;)</span><br><span class="line">    private String tokenUrl;</span><br><span class="line"></span><br><span class="line">    private String token;</span><br><span class="line"></span><br><span class="line">    private long expire;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 获取Token</span><br><span class="line">     *</span><br><span class="line">     * @return</span><br><span class="line">     * @throws Exception</span><br><span class="line">     */</span><br><span class="line">    public String getToken() throws Exception &#123;</span><br><span class="line">        synchronized (this) &#123;</span><br><span class="line">            if (expire &lt; System.currentTimeMillis()) &#123;</span><br><span class="line">                refreshToken();</span><br><span class="line">            &#125;</span><br><span class="line">            return token;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 刷新Token</span><br><span class="line">     *</span><br><span class="line">     * @throws Exception</span><br><span class="line">     */</span><br><span class="line">    private void refreshToken() throws Exception &#123;</span><br><span class="line">        Map&lt;String, String&gt; header = new HashMap&lt;&gt;(16);</span><br><span class="line">        header.put(&quot;Accept&quot;, &quot;application/json&quot;);</span><br><span class="line">        header.put(&quot;Accept-Language&quot;, &quot;en_US&quot;);</span><br><span class="line">        header.put(&quot;content-type&quot;, &quot;application/x-www-form-urlencoded&quot;);</span><br><span class="line">        byte[] authEncBytes = Base64.encodeBase64((clientId + &quot;:&quot; + secret).getBytes());</span><br><span class="line">        String authStringEnc = new String(authEncBytes);</span><br><span class="line">        header.put(&quot;Authorization&quot;, &quot;Basic &quot; + authStringEnc);</span><br><span class="line">        log.info(&quot;获取token的请求头:&#123;&#125;&quot;, header);</span><br><span class="line"></span><br><span class="line">        String result = HttpUtil.send(tokenUrl, header, &quot;grant_type=client_credentials&quot;);</span><br><span class="line">        log.info(&quot;获取token的响应:&#123;&#125;&quot;, result);</span><br><span class="line">        if (StringUtils.isEmpty(result)) &#123;</span><br><span class="line">            throw new Exception(&quot;获取token失败&quot;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        JSONObject jsonObject = JSON.parseObject(result);</span><br><span class="line">        this.token = jsonObject.getString(&quot;access_token&quot;);</span><br><span class="line">        this.expire = System.currentTimeMillis() + jsonObject.getInteger(&quot;expires_in&quot;) / 3 * 1000;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中tokenUrl为：<a href="https://api.sandbox.paypal.com/v1/oauth2/token" target="_blank" rel="noopener">https://api.sandbox.paypal.com/v1/oauth2/token</a><br>对应接口文档地址：<a href="https://developer.paypal.com/docs/api/overview/#make-your-first-call" target="_blank" rel="noopener">https://developer.paypal.com/docs/api/overview/#make-your-first-call</a></p><p>注意：token具有时效性。</p><h2 id="五、预交易（下单）"><a href="#五、预交易（下单）" class="headerlink" title="五、预交易（下单）"></a>五、预交易（下单）</h2><p>这是一个预交易接口，即调用后不会真正的发生金钱交易，只是告诉PayPal有个用户一会要支付1000元买手机，你给我生成一个支付链接，我把这个链接给用户，让他去到你网站支付。调用此接口后会返回支付链接和查询此交易的查询链接。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * PayPal预支付</span><br><span class="line"> *</span><br><span class="line"> * @param command</span><br><span class="line"> * @return</span><br><span class="line"> */</span><br><span class="line">public CommonResponse pay(Command command) &#123;</span><br><span class="line">    log.info(&quot;进入PayPal预支付接口&quot;);</span><br><span class="line">    PayResponse payResponse = PayResponse.getResponse();</span><br><span class="line">    payResponse.setNeedTranslate(false);</span><br><span class="line"></span><br><span class="line">    try &#123;</span><br><span class="line">        PaymentRequest paymentRequest = new PaymentRequest(command, returnUrl, cancelUrl);</span><br><span class="line">        String body = JSON.toJSONString(paymentRequest);</span><br><span class="line">        log.info(&quot;PayPal预支付接口请求参数:&#123;&#125;&quot;, body);</span><br><span class="line"></span><br><span class="line">        Map&lt;String, String&gt; header = new HashMap&lt;&gt;(16);</span><br><span class="line">        header.put(&quot;PayPal-Request-Id&quot;, command.getSerialNo());</span><br><span class="line">        header.put(&quot;content-type&quot;, &quot;application/json&quot;);</span><br><span class="line">        header.put(&quot;cache-control&quot;, &quot;no-cache&quot;);</span><br><span class="line">        header.put(&quot;Authorization&quot;, &quot;Bearer &quot; + payPalToken.getToken());</span><br><span class="line"></span><br><span class="line">        String result = HttpUtil.send(payUrl, header, body);</span><br><span class="line">        log.info(&quot;PayPal响应报文:&#123;&#125;&quot;, result);</span><br><span class="line">        if (StringUtils.isEmpty(result)) &#123;</span><br><span class="line">            throw new SendException(&quot;PayPal响应报文为空&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        JSONObject jsonObject = JSON.parseObject(result);</span><br><span class="line"></span><br><span class="line">        payResponse.setApiUrl(jsonObject.getJSONArray(&quot;links&quot;).getJSONObject(1).getString(&quot;href&quot;));</span><br><span class="line">        payResponse.setChannelSerialNo(jsonObject.getString(&quot;id&quot;));</span><br><span class="line">        payResponse.setTranSt(TranSt.I.getCode());</span><br><span class="line"></span><br><span class="line">        payResponse.setRespData(result);</span><br><span class="line">    &#125; catch (Exception e) &#123;</span><br><span class="line">        throw new SendException(&quot;请求PayPal预支付接口异常&quot;, e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    log.info(&quot;离开PayPal预支付接口&quot;);</span><br><span class="line">    return payResponse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>PaymentRequest</code>是一个实体类，和接口文档中的请求json结构一致。<br><code>returnUrl</code>是用户确认付支付后，PayPal向我们商户跳转的连接，PayPal会带有一些参数，同时我们也可以把我们的流水号放进去。<br><code>cancelUrl</code>是用户在paypal界面点击取消付款后，paypal想我们商户跳转的连接。</p><p><code>HttpUtil.java</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">import org.apache.commons.lang3.StringUtils;</span><br><span class="line"></span><br><span class="line">import java.io.BufferedReader;</span><br><span class="line">import java.io.InputStreamReader;</span><br><span class="line">import java.io.PrintWriter;</span><br><span class="line">import java.net.URL;</span><br><span class="line">import java.net.URLConnection;</span><br><span class="line">import java.util.Map;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @author kangyonggan</span><br><span class="line"> * @since 10/24/18</span><br><span class="line"> */</span><br><span class="line">public final class HttpUtil &#123;</span><br><span class="line"></span><br><span class="line">    private HttpUtil() &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 发送http请求</span><br><span class="line">     *</span><br><span class="line">     * @param url</span><br><span class="line">     * @param header</span><br><span class="line">     * @param body</span><br><span class="line">     * @return</span><br><span class="line">     * @throws Exception</span><br><span class="line">     */</span><br><span class="line">    public static String send(String url, Map&lt;String, String&gt; header, String body) throws Exception &#123;</span><br><span class="line">        StringBuilder result = new StringBuilder();</span><br><span class="line">        PrintWriter out = null;</span><br><span class="line">        BufferedReader in = null;</span><br><span class="line">        try &#123;</span><br><span class="line">            URL realUrl = new URL(url);</span><br><span class="line">            URLConnection conn = realUrl.openConnection();</span><br><span class="line"></span><br><span class="line">            if (header != null) &#123;</span><br><span class="line">                for (String key : header.keySet()) &#123;</span><br><span class="line">                    conn.setRequestProperty(key, header.get(key));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            conn.setDoOutput(true);</span><br><span class="line">            conn.setDoInput(true);</span><br><span class="line"></span><br><span class="line">            if (StringUtils.isNotEmpty(body)) &#123;</span><br><span class="line">                out = new PrintWriter(conn.getOutputStream());</span><br><span class="line">                out.print(body);</span><br><span class="line">                out.flush();</span><br><span class="line">            &#125;</span><br><span class="line">            in = new BufferedReader(new InputStreamReader(conn.getInputStream()));</span><br><span class="line">            String line;</span><br><span class="line">            while ((line = in.readLine()) != null) &#123;</span><br><span class="line">                result.append(line).append(&quot;\n&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">            return result.toString();</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            throw e;</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            if (out != null) &#123;</span><br><span class="line">                out.close();</span><br><span class="line">            &#125;</span><br><span class="line">            if (in != null) &#123;</span><br><span class="line">                in.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>到此，用户已经拿到了付款连接，可以跳转到paypal进行付款了。</p><p>对应接口文档地址：<a href="https://developer.paypal.com/docs/api/payments/v1/#payment_create" target="_blank" rel="noopener">https://developer.paypal.com/docs/api/payments/v1/#payment_create</a></p><h2 id="六、执行付款"><a href="#六、执行付款" class="headerlink" title="六、执行付款"></a>六、执行付款</h2><p>当用户在paypal界面完成付款后，paypal就会重定向到我们送给他的<code>returnUrl</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * PayPal充值成功</span><br><span class="line"> *</span><br><span class="line"> * @param serialNo 流水号</span><br><span class="line"> * @param model</span><br><span class="line"> * @param paymentId</span><br><span class="line"> * @param PayerID</span><br><span class="line"> * @return</span><br><span class="line"> */</span><br><span class="line">@GetMapping(&quot;return&quot;)</span><br><span class="line">public String paypalReturn(String serialNo, String paymentId, String PayerID, Model model) &#123;</span><br><span class="line">    // TODO 简单校验， 比如校验一下流水号是不是我们的</span><br><span class="line">    </span><br><span class="line">    // 执行付款</span><br><span class="line">    try &#123;</span><br><span class="line">        String url = executeUrl + &quot;/&quot; + paymentId + &quot;/execute/&quot;;</span><br><span class="line">        Map&lt;String, String&gt; header = new HashMap&lt;&gt;(8);</span><br><span class="line">        header.put(&quot;PayPal-Request-Id&quot;, serialNo);</span><br><span class="line">        header.put(&quot;content-type&quot;, &quot;application/json&quot;);</span><br><span class="line">        header.put(&quot;Authorization&quot;, &quot;Bearer &quot; + payPalToken.getToken());</span><br><span class="line">        result = HttpUtil.send(url, header, &quot;&#123;\&quot;payer_id\&quot;:\&quot;&quot; + payerID + &quot;\&quot;&#125;&quot;);</span><br><span class="line">        log.info(&quot;执行付款响应结果:&#123;&#125;&quot;, result);</span><br><span class="line"></span><br><span class="line">        JSONObject jsonObject = JSON.parseObject(result);</span><br><span class="line">        String state = jsonObject.getString(&quot;state&quot;);</span><br><span class="line">        if (&quot;failed&quot;.equals(state)) &#123;</span><br><span class="line">            log.info(&quot;PayPal执行付款失败&quot;);</span><br><span class="line">            // TODO 塞点数据给界面</span><br><span class="line">            return &quot;paypal/failure&quot;;</span><br><span class="line">        &#125; else if (&quot;approved&quot;.equals(state)) &#123;</span><br><span class="line">            log.info(&quot;PayPal执行付款成功&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; catch (Exception e) &#123;</span><br><span class="line">        log.error(&quot;PayPal执行付款异常&quot;, e);</span><br><span class="line">        // TODO 塞点数据给界面</span><br><span class="line">        return &quot;paypal/error&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    // TODO 塞点数据给界面</span><br><span class="line">    return &quot;paypal/return&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中executeUrl为：<a href="https://api.sandbox.paypal.com/v1/payments/payment" target="_blank" rel="noopener">https://api.sandbox.paypal.com/v1/payments/payment</a></p><p>注意：不能在此方法内调用商户系统进行发货，因为这个请求可能不是paypal发来的，我们应该是后台通知时再通知商户系统发货。</p><p>对应的接口文档地址：<a href="https://developer.paypal.com/docs/api/payments/v1/#payment_execute" target="_blank" rel="noopener">https://developer.paypal.com/docs/api/payments/v1/#payment_execute</a></p><h2 id="七、后台通知"><a href="#七、后台通知" class="headerlink" title="七、后台通知"></a>七、后台通知</h2><p>可以使用卖家账户登录沙盒环境，点击”卖家习惯设定“ &gt; “收款和管理我的风险” &gt; “即时付款通知”。<br>直达链接：<a href="https://www.sandbox.paypal.com/c2/cgi-bin/webscr?cmd=_profile-display-handler&amp;tab_id=SELLER_PREFERENCES" target="_blank" rel="noopener">https://www.sandbox.paypal.com/c2/cgi-bin/webscr?cmd=_profile-display-handler&amp;tab_id=SELLER_PREFERENCES</a></p><p><img src="/uploads/paypal06.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * PayPal后台通知</span><br><span class="line"> *</span><br><span class="line"> * @param request</span><br><span class="line"> * @throws Exception</span><br><span class="line"> */</span><br><span class="line">@PostMapping(&quot;paypal&quot;)</span><br><span class="line">public void paypal(HttpServletRequest request) throws Exception &#123;</span><br><span class="line">    log.info(&quot;进入PayPal后台通知&quot;);</span><br><span class="line"></span><br><span class="line">    // 获取paypal请求参数,并拼接验证参数</span><br><span class="line">    Enumeration&lt;String&gt; en = request.getParameterNames();</span><br><span class="line">    StringBuilder data = new StringBuilder(&quot;cmd=_notify-validate&quot;);</span><br><span class="line">    while (en.hasMoreElements()) &#123;</span><br><span class="line">        String paramName = en.nextElement();</span><br><span class="line">        String paramValue = request.getParameter(paramName);</span><br><span class="line">        data.append(&quot;&amp;&quot;).append(paramName).append(&quot;=&quot;).append(URLEncoder.encode(paramValue, &quot;UTF-8&quot;));</span><br><span class="line">    &#125;</span><br><span class="line">    log.info(&quot;收到PayPal通知为：&#123;&#125;&quot;, data);</span><br><span class="line"></span><br><span class="line">    // 校验</span><br><span class="line">    URL u = new URL(checkUrl);</span><br><span class="line">    HttpURLConnection uc = (HttpURLConnection) u.openConnection();</span><br><span class="line">    uc.setRequestMethod(&quot;POST&quot;);</span><br><span class="line">    uc.setDoOutput(true);</span><br><span class="line">    uc.setDoInput(true);</span><br><span class="line">    uc.setUseCaches(false);</span><br><span class="line">    //设置 HTTP 的头信息</span><br><span class="line">    uc.setRequestProperty(&quot;Content-Type&quot;, &quot;application/x-www-form-urlencoded&quot;);</span><br><span class="line">    PrintWriter pw = new PrintWriter(uc.getOutputStream());</span><br><span class="line">    pw.println(data.toString());</span><br><span class="line">    pw.close();</span><br><span class="line">    log.info(&quot;已发往PayPal进行回调校验&quot;);</span><br><span class="line"></span><br><span class="line">    // 响应</span><br><span class="line">    BufferedReader in = new BufferedReader(new InputStreamReader(uc.getInputStream()));</span><br><span class="line">    String result = in.readLine();</span><br><span class="line">    in.close();</span><br><span class="line">    log.info(&quot;收到的交易结果为：&#123;&#125;&quot;, result);</span><br><span class="line"></span><br><span class="line">    if (&quot;VERIFIED&quot;.equals(result)) &#123;</span><br><span class="line">        log.info(&quot;验证通过&quot;);</span><br><span class="line">        String serialNo = request.getParameter(&quot;invoice&quot;);</span><br><span class="line">        Command command = commandService.findCommandBySerialNo(serialNo);</span><br><span class="line">        if (command == null) &#123;</span><br><span class="line">            log.info(&quot;PayPal通知流水号不存在:&#123;&#125;&quot;, serialNo);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String status = request.getParameter(&quot;payment_status&quot;);</span><br><span class="line">        if (&quot;Completed&quot;.equals(status)) &#123;</span><br><span class="line">            log.info(&quot;交易成功，通知商户系统发货&quot;);</span><br><span class="line">            boolean success = paymentHelper.notify(command);</span><br><span class="line"></span><br><span class="line">            // 如果不通知成功，交易状态不能更新为成功</span><br><span class="line">            if (success) &#123;</span><br><span class="line">                // 响应落库, 更新交易状态为成功</span><br><span class="line">                payPalTransactionService.processNotice(status, command, data.toString());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        log.error(&quot;收到非法PayPal通知：&#123;&#125;&quot;, data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中checkUrl：<a href="https://www.sandbox.paypal.com/cgi-bin/webscr" target="_blank" rel="noopener">https://www.sandbox.paypal.com/cgi-bin/webscr</a></p><p>对应接口文档地址：<a href="https://www.paypal.com/us/cgi-bin/webscr?cmd=p/acc/ipn-info-outside" target="_blank" rel="noopener">https://www.paypal.com/us/cgi-bin/webscr?cmd=p/acc/ipn-info-outside</a></p><h2 id="八、单笔查询"><a href="#八、单笔查询" class="headerlink" title="八、单笔查询"></a>八、单笔查询</h2><p>如果我们没收到后台通知怎么办？这时候就可以通过单笔查询主动去paypal查询订单状态。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">Map&lt;String, String&gt; header = new HashMap&lt;&gt;(8);</span><br><span class="line">header.put(&quot;Content-Type&quot;, &quot;application/json&quot;);</span><br><span class="line">header.put(&quot;Authorization&quot;, &quot;Bearer &quot; + payPalToken.getToken());</span><br><span class="line"></span><br><span class="line">String result = HttpUtil.send(queryUrl + &quot;/&quot; + paymentId, header, null);</span><br><span class="line">log.info(&quot;查询的响应:&#123;&#125;&quot;, result);</span><br><span class="line"></span><br><span class="line">if (StringUtils.isNotEmpty(result)) &#123;</span><br><span class="line">    log.info(&quot;查询得到结果&quot;);</span><br><span class="line">    JSONObject jsonObject = JSON.parseObject(result);</span><br><span class="line">    String state = jsonObject.getString(&quot;state&quot;);</span><br><span class="line"></span><br><span class="line">    log.info(&quot;交易状态:&#123;&#125;&quot;, state);</span><br><span class="line">    if (&quot;approved&quot;.equals(state)) &#123;</span><br><span class="line">        log.info(&quot;交易成功&quot;);</span><br><span class="line">    &#125; else if (&quot;failed&quot;.equals(respCo)) &#123;</span><br><span class="line">        log.info(&quot;交易失败&quot;);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        log.info(&quot;交易处理中&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    log.info(&quot;查询失败&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中queryUrl：<a href="https://api.sandbox.paypal.com/v1/payments/payment" target="_blank" rel="noopener">https://api.sandbox.paypal.com/v1/payments/payment</a><br>paymentId是在预交易接口返回的。</p><p>对应接口文档地址：<a href="https://developer.paypal.com/docs/api/payments/v1/#payment_get" target="_blank" rel="noopener">https://developer.paypal.com/docs/api/payments/v1/#payment_get</a></p><h2 id="九、批量查询"><a href="#九、批量查询" class="headerlink" title="九、批量查询"></a>九、批量查询</h2><p>如果我们需要日终对账，那么就要用到批量查询接口。但是此接口不大符合我的需要，因此我没用这个接口，而是循环使用单笔查询代替的。</p><p>对应接口文档地址：<a href="https://developer.paypal.com/docs/api/payments/v1/#payment_list" target="_blank" rel="noopener">https://developer.paypal.com/docs/api/payments/v1/#payment_list</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;名词定义&quot;&gt;&lt;a href=&quot;#名词定义&quot; class=&quot;headerlink&quot; title=&quot;名词定义&quot;&gt;&lt;/a&gt;名词定义&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;用户：在我们网站上交易的客户。&lt;/li&gt;
&lt;li&gt;支付网关：是我们商户和PayPal对接的系统。&lt;/li&gt;
&lt;li&gt;商户系统：充值成功后用于发货的系统。&lt;/li&gt;
&lt;li&gt;PayPal：是海外的一家支付平台。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;PayPal官网地址&quot;&gt;&lt;a href=&quot;#PayPal官网地址&quot; class=&quot;headerlink&quot; title=&quot;PayPal官网地址&quot;&gt;&lt;/a&gt;PayPal官网地址&lt;/h2&gt;&lt;p&gt;官网：&lt;a href=&quot;https://paypal.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://paypal.com&lt;/a&gt;&lt;br&gt;开发者网站：&lt;a href=&quot;https://developer.paypal.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://developer.paypal.com&lt;/a&gt;&lt;br&gt;沙盒地址：&lt;a href=&quot;https://www.sandbox.paypal.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.sandbox.paypal.com/&lt;/a&gt;&lt;br&gt;Demo地址：&lt;a href=&quot;https://demo.paypal.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://demo.paypal.com&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Java后台" scheme="http://kangyonggan.com/categories/Java%E5%90%8E%E5%8F%B0/"/>
    
    
      <category term="Java" scheme="http://kangyonggan.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>MySQL查询车手所有赛道的最佳排名</title>
    <link href="http://kangyonggan.com/2018/09/14/MySQL%E6%9F%A5%E8%AF%A2%E8%BD%A6%E6%89%8B%E6%89%80%E6%9C%89%E8%B5%9B%E9%81%93%E7%9A%84%E6%9C%80%E4%BD%B3%E6%8E%92%E5%90%8D/"/>
    <id>http://kangyonggan.com/2018/09/14/MySQL查询车手所有赛道的最佳排名/</id>
    <published>2018-09-14T04:40:22.000Z</published>
    <updated>2018-09-14T04:45:52.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><p>不相关字段不在此列出</p><h3 id="赛局表"><a href="#赛局表" class="headerlink" title="赛局表"></a>赛局表</h3><ul><li>赛局ID - BIGINT</li><li>赛道 - INTEGER</li></ul><h3 id="成绩表"><a href="#成绩表" class="headerlink" title="成绩表"></a>成绩表</h3><ul><li>赛局ID - BIGINT</li><li>车手 - VARCHAR</li><li>成绩(毫秒) - INTEGER</li></ul><a id="more"></a><h2 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h2><h3 id="赛局表-1"><a href="#赛局表-1" class="headerlink" title="赛局表"></a>赛局表</h3><table><thead><tr><th>赛局ID</th><th>赛道</th></tr></thead><tbody><tr><td>1</td><td>10</td></tr><tr><td>2</td><td>11</td></tr><tr><td>3</td><td>10</td></tr></tbody></table><h3 id="成绩表-1"><a href="#成绩表-1" class="headerlink" title="成绩表"></a>成绩表</h3><table><thead><tr><th>赛局ID</th><th>车手</th><th>成绩</th></tr></thead><tbody><tr><td>1</td><td>小明</td><td>121005</td></tr><tr><td>1</td><td>小红</td><td>120832</td></tr><tr><td>1</td><td>小白</td><td>120511</td></tr><tr><td>2</td><td>小明</td><td>150932</td></tr><tr><td>2</td><td>小白</td><td>151023</td></tr><tr><td>3</td><td>小明</td><td>120732</td></tr><tr><td>3</td><td>小红</td><td>120833</td></tr></tbody></table><p>从表中数据可以看到，小明同学10赛道的最佳排名是第2，在11赛道的最佳排名是第1，所以小明在所有赛道的最佳排名应该是第1。</p><h2 id="分解需求"><a href="#分解需求" class="headerlink" title="分解需求"></a>分解需求</h2><h3 id="1-查询10赛道各车手的最佳成绩"><a href="#1-查询10赛道各车手的最佳成绩" class="headerlink" title="1. 查询10赛道各车手的最佳成绩"></a>1. 查询10赛道各车手的最佳成绩</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">  b.赛道, a.车手, min(a.成绩) AS 成绩</span><br><span class="line">FROM 成绩表 a, 赛局表 b</span><br><span class="line">WHERE a.赛局ID = b.赛局ID</span><br><span class="line">  AND b.赛道 = 10</span><br><span class="line">GROUP BY a.车手</span><br><span class="line">ORDER BY 成绩 ASC</span><br></pre></td></tr></table></figure><p>为什么group by 车手？<br>因为一个车手在一个赛道中可能跑了N多个成绩，我们只取最好的那个成绩。</p><h3 id="2-查询10赛道各车手的排名"><a href="#2-查询10赛道各车手的排名" class="headerlink" title="2. 查询10赛道各车手的排名"></a>2. 查询10赛道各车手的排名</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">  @排名 := @排名 + 1 AS 排名,</span><br><span class="line">  c.赛道,</span><br><span class="line">  c.车手,</span><br><span class="line">  c.成绩</span><br><span class="line">FROM</span><br><span class="line">  (</span><br><span class="line">    SELECT</span><br><span class="line">      b.赛道, a.车手, min(a.成绩) AS 成绩</span><br><span class="line">    FROM 成绩表 a, 赛局表 b</span><br><span class="line">    WHERE a.赛局ID = b.赛局ID</span><br><span class="line">          AND b.赛道 = 10</span><br><span class="line">    GROUP BY a.车手</span><br><span class="line">    ORDER BY 成绩 ASC</span><br><span class="line">  ) c, (SELECT @排名 := 1) d</span><br></pre></td></tr></table></figure><p>在MySQL中，@变量名 := 值，是一个赋值语句。</p><h3 id="3-查询所有赛道各车手的最佳成绩"><a href="#3-查询所有赛道各车手的最佳成绩" class="headerlink" title="3. 查询所有赛道各车手的最佳成绩"></a>3. 查询所有赛道各车手的最佳成绩</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">  b.赛道, a.车手, min(a.成绩) AS 成绩</span><br><span class="line">FROM 成绩表 a, 赛局表 b</span><br><span class="line">WHERE a.赛局ID = b.赛局ID</span><br><span class="line">      AND b.赛道 = 10</span><br><span class="line">GROUP BY a.车手, b.赛道</span><br><span class="line">ORDER BY b.赛道 ASC, 成绩 ASC</span><br></pre></td></tr></table></figure><h3 id="4-查询所有赛道各车手的排名"><a href="#4-查询所有赛道各车手的排名" class="headerlink" title="4. 查询所有赛道各车手的排名"></a>4. 查询所有赛道各车手的排名</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">  if(@上一个赛道 = c.赛道, @排名 := @排名 + 1, @排名 := 1) AS 排名,</span><br><span class="line">  (@上一个赛道 := c.赛道) AS 赛道,</span><br><span class="line">  c.车手,</span><br><span class="line">  c.成绩</span><br><span class="line">FROM</span><br><span class="line">  (</span><br><span class="line">    SELECT</span><br><span class="line">      b.赛道, a.车手, min(a.成绩) AS 成绩</span><br><span class="line">    FROM 成绩表 a, 赛局表 b</span><br><span class="line">    WHERE a.赛局ID = b.赛局ID</span><br><span class="line">          AND b.赛道 = 10</span><br><span class="line">    GROUP BY a.车手, b.赛道</span><br><span class="line">    ORDER BY b.赛道 ASC, 成绩 ASC</span><br><span class="line">  ) c, (SELECT @排名 := 1, @上一个赛道 := 0) d</span><br></pre></td></tr></table></figure><p>变量@上一个赛道的作用是：当变换赛道时排名要从1重新计算。</p><h3 id="5-只查询小明所有赛道的排名"><a href="#5-只查询小明所有赛道的排名" class="headerlink" title="5. 只查询小明所有赛道的排名"></a>5. 只查询小明所有赛道的排名</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">  if(@上一个赛道 = c.赛道, @排名 := @排名 + 1, @排名 := 1) AS 排名,</span><br><span class="line">  (@上一个赛道 := c.赛道) AS 赛道,</span><br><span class="line">  c.车手,</span><br><span class="line">  c.成绩</span><br><span class="line">FROM</span><br><span class="line">  (</span><br><span class="line">    SELECT</span><br><span class="line">      b.赛道, a.车手, min(a.成绩) AS 成绩</span><br><span class="line">    FROM 成绩表 a, 赛局表 b</span><br><span class="line">    WHERE a.赛局ID = b.赛局ID</span><br><span class="line">          AND b.赛道 = 10</span><br><span class="line">    GROUP BY a.车手, b.赛道</span><br><span class="line">    ORDER BY b.赛道 ASC, 成绩 ASC</span><br><span class="line">  ) c, (SELECT @排名 := 1, @上一个赛道 := 0) d</span><br><span class="line">WHERE c.车手 = &apos;小明&apos;</span><br></pre></td></tr></table></figure><h3 id="6-查询小明所有赛道的最佳排名（目标达到）"><a href="#6-查询小明所有赛道的最佳排名（目标达到）" class="headerlink" title="6. 查询小明所有赛道的最佳排名（目标达到）"></a>6. 查询小明所有赛道的最佳排名（目标达到）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">  if(@上一个赛道 = c.赛道, @排名 := @排名 + 1, @排名 := 1) AS 排名,</span><br><span class="line">  (@上一个赛道 := c.赛道) AS 赛道,</span><br><span class="line">  c.车手,</span><br><span class="line">  c.成绩</span><br><span class="line">FROM</span><br><span class="line">  (</span><br><span class="line">    SELECT</span><br><span class="line">      b.赛道, a.车手, min(a.成绩) AS 成绩</span><br><span class="line">    FROM 成绩表 a, 赛局表 b</span><br><span class="line">    WHERE a.赛局ID = b.赛局ID</span><br><span class="line">          AND b.赛道 = 10</span><br><span class="line">    GROUP BY a.车手, b.赛道</span><br><span class="line">    ORDER BY b.赛道 ASC, 成绩 ASC</span><br><span class="line">  ) c, (SELECT @排名 := 1, @上一个赛道 := 0) d</span><br><span class="line">WHERE c.车手 = &apos;小明&apos;</span><br><span class="line">ORDER BY 排名 ASC</span><br><span class="line">LIMIT 1</span><br></pre></td></tr></table></figure><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><p>赛局表的赛道字段需要加个索引，成绩表的成绩字段需要加个索引，车手字段不需要加索引。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;数据结构&quot;&gt;&lt;a href=&quot;#数据结构&quot; class=&quot;headerlink&quot; title=&quot;数据结构&quot;&gt;&lt;/a&gt;数据结构&lt;/h2&gt;&lt;p&gt;不相关字段不在此列出&lt;/p&gt;
&lt;h3 id=&quot;赛局表&quot;&gt;&lt;a href=&quot;#赛局表&quot; class=&quot;headerlink&quot; title=&quot;赛局表&quot;&gt;&lt;/a&gt;赛局表&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;赛局ID - BIGINT&lt;/li&gt;
&lt;li&gt;赛道 - INTEGER&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;成绩表&quot;&gt;&lt;a href=&quot;#成绩表&quot; class=&quot;headerlink&quot; title=&quot;成绩表&quot;&gt;&lt;/a&gt;成绩表&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;赛局ID - BIGINT&lt;/li&gt;
&lt;li&gt;车手 - VARCHAR&lt;/li&gt;
&lt;li&gt;成绩(毫秒) - INTEGER&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="MySQL" scheme="http://kangyonggan.com/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="http://kangyonggan.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu安装及配置系列-gitlab的安装配置.md</title>
    <link href="http://kangyonggan.com/2018/09/02/Ubuntu%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E7%B3%BB%E5%88%97-gitlab%E7%9A%84%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
    <id>http://kangyonggan.com/2018/09/02/Ubuntu安装及配置系列-gitlab的安装配置/</id>
    <published>2018-09-02T13:42:16.000Z</published>
    <updated>2018-09-02T13:45:42.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install gitlab-ce</span><br></pre></td></tr></table></figure><h2 id="启动、停止、重启"><a href="#启动、停止、重启" class="headerlink" title="启动、停止、重启"></a>启动、停止、重启</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo gitlab-ctl start</span><br><span class="line">sudo gitlab-ctl stop</span><br><span class="line">sudo gitlab-ctl restart</span><br></pre></td></tr></table></figure><h2 id="修改root的默认密码"><a href="#修改root的默认密码" class="headerlink" title="修改root的默认密码"></a>修改root的默认密码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">gitlab-rails console production</span><br><span class="line">&gt; user = User.where(id: 1).first</span><br><span class="line">&gt; user.password=12345678</span><br><span class="line">&gt; user.password_confirmation=12345678</span><br><span class="line">&gt; user.save!</span><br><span class="line">&gt; quit</span><br></pre></td></tr></table></figure><h2 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h2><p><a href="http://localhost/" target="_blank" rel="noopener">http://localhost/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span 
      
    
    </summary>
    
      <category term="系统运维" scheme="http://kangyonggan.com/categories/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Linux" scheme="http://kangyonggan.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>性能测试工具jmeter</title>
    <link href="http://kangyonggan.com/2018/08/28/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7jmeter/"/>
    <id>http://kangyonggan.com/2018/08/28/性能测试工具jmeter/</id>
    <published>2018-08-28T01:55:05.000Z</published>
    <updated>2018-08-28T03:11:04.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Apache JMeter是Apache组织开发的基于Java的压力测试工具。用于对软件做压力测试，它最初被设计用于Web应用测试，但后来扩展到其他测试领域。 它可以用于测试静态和动态资源，例如静态文件、Java 小服务程序、CGI 脚本、Java 对象、数据库、FTP 服务器， 等等。JMeter 可以用于对服务器、网络或对象模拟巨大的负载，来自不同压力类别下测试它们的强度和分析整体性能。另外，JMeter能够对应用程序做功能/回归测试，通过创建带有断言的脚本来验证你的程序返回了你期望的结果。为了最大限度的灵活性，JMeter允许使用正则表达式创建断言。<br>Apache jmeter 可以用于对静态的和动态的资源（文件，Servlet，Perl脚本，java 对象，数据库和查询，FTP服务器等等）的性能进行测试。它可以用于对服务器、网络或对象模拟繁重的负载来测试它们的强度或分析不同压力类型下的整体性能。你可以使用它做性能的图形分析或在大并发负载测试你的服务器/脚本/对象。</p><h2 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h2><ol><li>能够对HTTP和FTP服务器进行压力和性能测试， 也可以对任何数据库进行同样的测试（通过JDBC）。</li><li>完全的可移植性和100% 纯java。</li><li>完全 Swing 和轻量组件支持（预编译的JAR使用 javax.swing.*)包。</li><li>完全多线程 框架允许通过多个线程并发取样和 通过单独的线程组对不同的功能同时取样。</li><li>精心的GUI设计允许快速操作和更精确的计时。</li><li>缓存和离线分析/回放测试结果。</li></ol><a id="more"></a><h2 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h2><ol><li>Label： 定义的HTTP请求名称</li><li>Samples： 表示这次测试中一共发出了多少个请求</li><li>Average： 访问页面的平均响应时间</li><li>Min: 访问页面的最小响应时间</li><li>Max: 访问页面的最大响应时间</li><li>Error%： 错误的请求的数量/请求的总数</li><li>Throughput：每秒完成的请求数</li><li>KB/Sec： 每秒从服务器端接收到的数据量</li></ol><h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><p><a href="http://jmeter.apache.org/download_jmeter.cgi" target="_blank" rel="noopener">http://jmeter.apache.org/download_jmeter.cgi</a></p><h2 id="安装使用"><a href="#安装使用" class="headerlink" title="安装使用"></a>安装使用</h2><p>解压下载的安装包，可以在bin目录下找到启动命令<code>jmeter.sh</code>或<code>jmeter.bat</code>，运行启动命令即可启动。</p><p>启动界面如下图：<br><img src="/uploads/jmeter-01.png" alt=""></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>比如我们有一个接口需要压测。接口是http协议，post请求，地址是<a href="http://localhost:8080/login" target="_blank" rel="noopener">http://localhost:8080/login</a>, 参数为”username=admin&amp;password=123456”</p><h3 id="创建测试计划"><a href="#创建测试计划" class="headerlink" title="创建测试计划"></a>创建测试计划</h3><p><img src="/uploads/jmeter-02.png" alt=""></p><h3 id="添加线程组"><a href="#添加线程组" class="headerlink" title="添加线程组"></a>添加线程组</h3><p><img src="/uploads/jmeter-03.png" alt=""><br><img src="/uploads/jmeter-04.png" alt=""></p><h3 id="创建请求"><a href="#创建请求" class="headerlink" title="创建请求"></a>创建请求</h3><p><img src="/uploads/jmeter-05.png" alt=""><br><img src="/uploads/jmeter-06.png" alt=""></p><p>到这里我们已经可以运行刚刚创建的请求了，但是对于请求结果及分析我们还没地方观察，因此我们还需要创建一些监听器，用于观察及分析结果。</p><h3 id="观察结果树"><a href="#观察结果树" class="headerlink" title="观察结果树"></a>观察结果树</h3><p><img src="/uploads/jmeter-07.png" alt=""><br><img src="/uploads/jmeter-08.png" alt=""></p><h3 id="聚合报告"><a href="#聚合报告" class="headerlink" title="聚合报告"></a>聚合报告</h3><p><img src="/uploads/jmeter-09.png" alt=""><br><img src="/uploads/jmeter-10.png" alt=""></p><p>至此一个简单的压测就搭建好了，可以运行一下试试了，运行之后就可以在观察结果数和聚合报告中查看、分析接口性能了。</p><p><img src="/uploads/jmeter-11.png" alt=""><br><img src="/uploads/jmeter-12.png" alt=""></p><p>更多高级用法请自行研究。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;Apache JMeter是Apache组织开发的基于Java的压力测试工具。用于对软件做压力测试，它最初被设计用于Web应用测试，但后来扩展到其他测试领域。 它可以用于测试静态和动态资源，例如静态文件、Java 小服务程序、CGI 脚本、Java 对象、数据库、FTP 服务器， 等等。JMeter 可以用于对服务器、网络或对象模拟巨大的负载，来自不同压力类别下测试它们的强度和分析整体性能。另外，JMeter能够对应用程序做功能/回归测试，通过创建带有断言的脚本来验证你的程序返回了你期望的结果。为了最大限度的灵活性，JMeter允许使用正则表达式创建断言。&lt;br&gt;Apache jmeter 可以用于对静态的和动态的资源（文件，Servlet，Perl脚本，java 对象，数据库和查询，FTP服务器等等）的性能进行测试。它可以用于对服务器、网络或对象模拟繁重的负载来测试它们的强度或分析不同压力类型下的整体性能。你可以使用它做性能的图形分析或在大并发负载测试你的服务器/脚本/对象。&lt;/p&gt;
&lt;h2 id=&quot;作用&quot;&gt;&lt;a href=&quot;#作用&quot; class=&quot;headerlink&quot; title=&quot;作用&quot;&gt;&lt;/a&gt;作用&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;能够对HTTP和FTP服务器进行压力和性能测试， 也可以对任何数据库进行同样的测试（通过JDBC）。&lt;/li&gt;
&lt;li&gt;完全的可移植性和100% 纯java。&lt;/li&gt;
&lt;li&gt;完全 Swing 和轻量组件支持（预编译的JAR使用 javax.swing.*)包。&lt;/li&gt;
&lt;li&gt;完全多线程 框架允许通过多个线程并发取样和 通过单独的线程组对不同的功能同时取样。&lt;/li&gt;
&lt;li&gt;精心的GUI设计允许快速操作和更精确的计时。&lt;/li&gt;
&lt;li&gt;缓存和离线分析/回放测试结果。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Java后台" scheme="http://kangyonggan.com/categories/Java%E5%90%8E%E5%8F%B0/"/>
    
    
      <category term="Java" scheme="http://kangyonggan.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>集群中关于会话信息的解决方案</title>
    <link href="http://kangyonggan.com/2018/08/16/%E9%9B%86%E7%BE%A4%E4%B8%AD%E5%85%B3%E4%BA%8E%E4%BC%9A%E8%AF%9D%E4%BF%A1%E6%81%AF%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://kangyonggan.com/2018/08/16/集群中关于会话信息的解决方案/</id>
    <published>2018-08-16T04:12:31.000Z</published>
    <updated>2018-08-28T03:11:04.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一般有三种解决方案"><a href="#一般有三种解决方案" class="headerlink" title="一般有三种解决方案"></a>一般有三种解决方案</h2><ol><li>IP分流</li><li>会话复制</li><li>会话共享（推荐）</li></ol><h2 id="IP分流"><a href="#IP分流" class="headerlink" title="IP分流"></a>IP分流</h2><p>这个技术我曾经在我的个人博客中用过，简单方便。</p><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><ul><li>服务端代码不用变</li><li>Nginx只需要加个ip_hash的配置</li></ul><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><ul><li>会破坏Nginx的负载均衡</li><li>当某个服务器挂了的时候，服务器所在用户也会退出登录状态</li><li>服务器重启时，用户需要重新登录</li></ul><a id="more"></a><h2 id="会话复制"><a href="#会话复制" class="headerlink" title="会话复制"></a>会话复制</h2><p>这个我没用过，据说就是把session在所有服务器上都复制一份，且服务器数量太多时容易出问题，由于没用过，暂不讨论。</p><h2 id="会话共享"><a href="#会话共享" class="headerlink" title="会话共享"></a>会话共享</h2><p>既然是共享，共享到哪？当然是共享到redis了。</p><h3 id="缺点-1"><a href="#缺点-1" class="headerlink" title="缺点"></a>缺点</h3><ul><li>实现麻烦</li></ul><h3 id="优点-1"><a href="#优点-1" class="headerlink" title="优点"></a>优点</h3><ul><li>不会破坏负载均衡</li><li>没有服务器节点的数量限制</li></ul><h3 id="拓扑图"><a href="#拓扑图" class="headerlink" title="拓扑图"></a>拓扑图</h3><p><img src="/uploads/redis-session-1.png" alt=""></p><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><h4 id="登录成功"><a href="#登录成功" class="headerlink" title="登录成功"></a>登录成功</h4><ol><li>生成一个定长的随机字符串作为JSESSIONID，当然了，随机字符串并不能保证唯一，所以在后面再加一个自增的数字，这个自增的数字可以放在redis中</li><li>用JSESSIONID作为key，用户信息作为value，有效期30分钟，存入redis</li><li>像客户浏览器中写入cookie，其key为“JSESSIONID”，value为JSESSIONID的值。</li></ol><h4 id="登录验证"><a href="#登录验证" class="headerlink" title="登录验证"></a>登录验证</h4><ol><li>从请求中找出key=“JSESSIONID”的cookie，用它的值作为key去redis中查找用户的登录信息。</li></ol><h3 id="验证码等用户零时信息"><a href="#验证码等用户零时信息" class="headerlink" title="验证码等用户零时信息"></a>验证码等用户零时信息</h3><ol><li>生成验证码</li><li>从请求中找出key=“JSESSIONID”的cookie，其实就是JSESSIONID</li><li>把验证码放入redis，他的key=JSESSIONID + “:code”，最好设置有效期</li></ol><h2 id="校验验证码"><a href="#校验验证码" class="headerlink" title="校验验证码"></a>校验验证码</h2><ol><li>从请求中找出key=“JSESSIONID”的cookie，其实就是JSESSIONID</li><li>从redis中找出验证码，key=JSESSIONID + “:code”</li><li>用过之后删除redis中的验证码</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一般有三种解决方案&quot;&gt;&lt;a href=&quot;#一般有三种解决方案&quot; class=&quot;headerlink&quot; title=&quot;一般有三种解决方案&quot;&gt;&lt;/a&gt;一般有三种解决方案&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;IP分流&lt;/li&gt;
&lt;li&gt;会话复制&lt;/li&gt;
&lt;li&gt;会话共享（推荐）&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;IP分流&quot;&gt;&lt;a href=&quot;#IP分流&quot; class=&quot;headerlink&quot; title=&quot;IP分流&quot;&gt;&lt;/a&gt;IP分流&lt;/h2&gt;&lt;p&gt;这个技术我曾经在我的个人博客中用过，简单方便。&lt;/p&gt;
&lt;h3 id=&quot;优点&quot;&gt;&lt;a href=&quot;#优点&quot; class=&quot;headerlink&quot; title=&quot;优点&quot;&gt;&lt;/a&gt;优点&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;服务端代码不用变&lt;/li&gt;
&lt;li&gt;Nginx只需要加个ip_hash的配置&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;缺点&quot;&gt;&lt;a href=&quot;#缺点&quot; class=&quot;headerlink&quot; title=&quot;缺点&quot;&gt;&lt;/a&gt;缺点&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;会破坏Nginx的负载均衡&lt;/li&gt;
&lt;li&gt;当某个服务器挂了的时候，服务器所在用户也会退出登录状态&lt;/li&gt;
&lt;li&gt;服务器重启时，用户需要重新登录&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="综合" scheme="http://kangyonggan.com/categories/%E7%BB%BC%E5%90%88/"/>
    
    
      <category term="Java" scheme="http://kangyonggan.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot完美集成Freemarker</title>
    <link href="http://kangyonggan.com/2018/08/06/SpringBoot%E5%AE%8C%E7%BE%8E%E9%9B%86%E6%88%90Freemarker/"/>
    <id>http://kangyonggan.com/2018/08/06/SpringBoot完美集成Freemarker/</id>
    <published>2018-08-06T10:46:03.000Z</published>
    <updated>2018-08-28T03:11:04.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--freemarker--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-freemarker&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.kangyonggan&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;freemarker&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.0.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>其中<code>com.kangyonggan.freemarker</code>是我发布到中央仓库的一个jar。</p><a id="more"></a><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p><code>application.yml</code>:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">  freemarker:</span><br><span class="line">    settings:</span><br><span class="line">      auto_import: common.ftl as c</span><br></pre></td></tr></table></figure></p><p>spring-boot是很讲究零配置的，所以Freemarker大部分配置都已经被默认配置好了，完美只需要配置一些自定义的即可，如上面的配置，我想配置一个自动导入（通用）模板。</p><h2 id="集成、覆写等"><a href="#集成、覆写等" class="headerlink" title="集成、覆写等"></a>集成、覆写等</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">package com.kangyonggan.ck.config;</span><br><span class="line"></span><br><span class="line">import com.kangyonggan.freemarker.BlockDirective;</span><br><span class="line">import com.kangyonggan.freemarker.ExtendsDirective;</span><br><span class="line">import com.kangyonggan.freemarker.OverrideDirective;</span><br><span class="line">import com.kangyonggan.freemarker.SuperDirective;</span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line">import javax.annotation.PostConstruct;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @author kangyonggan</span><br><span class="line"> * @since 8/6/18</span><br><span class="line"> */</span><br><span class="line">@Configuration</span><br><span class="line">public class FreemarkerConfiguration &#123;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    freemarker.template.Configuration configuration;</span><br><span class="line"></span><br><span class="line">    @PostConstruct</span><br><span class="line">    public void setSharedVariable() &#123;</span><br><span class="line">        configuration.setSharedVariable(&quot;block&quot;, new BlockDirective());</span><br><span class="line">        configuration.setSharedVariable(&quot;override&quot;, new OverrideDirective());</span><br><span class="line">        configuration.setSharedVariable(&quot;extends&quot;, new ExtendsDirective());</span><br><span class="line">        configuration.setSharedVariable(&quot;super&quot;, new SuperDirective());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这时候就可以在模板中使用<code>&lt;#include &quot;footer.ftl&quot;/&gt;</code>、<code>&lt;@block name=&quot;main&quot;/&gt;</code>、<code>&lt;@extends name=&quot;layout.ftl&quot;/&gt;</code>指令了。</p><h2 id="热加载"><a href="#热加载" class="headerlink" title="热加载"></a>热加载</h2><p>当我们修改了ftl界面内容后，springboot默认是不会进行热加载的，我们需要对idea动手脚。  </p><p><img src="/uploads/freemarker-01.png" alt=""></p><p><img src="/uploads/freemarker-02.png" alt=""></p><p><img src="/uploads/freemarker-03.png" alt=""></p><p>当配置好这两个之后，修改ftl保存之后，刷新界面就会加载了。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;依赖&quot;&gt;&lt;a href=&quot;#依赖&quot; class=&quot;headerlink&quot; title=&quot;依赖&quot;&gt;&lt;/a&gt;依赖&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!--freemarker--&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;artifactId&amp;gt;spring-boot-starter-freemarker&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;groupId&amp;gt;com.kangyonggan&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;artifactId&amp;gt;freemarker&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;version&amp;gt;1.0.0&amp;lt;/version&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中&lt;code&gt;com.kangyonggan.freemarker&lt;/code&gt;是我发布到中央仓库的一个jar。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>使用jaudiotagger解析mp3文件</title>
    <link href="http://kangyonggan.com/2018/08/06/%E4%BD%BF%E7%94%A8jaudiotagger%E8%A7%A3%E6%9E%90mp3%E6%96%87%E4%BB%B6/"/>
    <id>http://kangyonggan.com/2018/08/06/使用jaudiotagger解析mp3文件/</id>
    <published>2018-08-06T05:45:08.000Z</published>
    <updated>2018-08-06T05:51:21.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;jaudiotagger.version&gt;2.0.3&lt;/jaudiotagger.version&gt;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;jaudiotagger&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;$&#123;jaudiotagger.version&#125;&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="Mp3Util-java"><a href="#Mp3Util-java" class="headerlink" title="Mp3Util.java"></a>Mp3Util.java</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line">package com.kangyonggan.app.future.common.util;</span><br><span class="line"></span><br><span class="line">import lombok.extern.log4j.Log4j2;</span><br><span class="line">import org.apache.commons.lang3.StringUtils;</span><br><span class="line">import org.jaudiotagger.audio.mp3.MP3AudioHeader;</span><br><span class="line">import org.jaudiotagger.audio.mp3.MP3File;</span><br><span class="line">import org.jaudiotagger.tag.id3.AbstractID3v2Frame;</span><br><span class="line">import org.jaudiotagger.tag.id3.AbstractID3v2Tag;</span><br><span class="line"></span><br><span class="line">import java.io.File;</span><br><span class="line">import java.io.FileOutputStream;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.util.HashMap;</span><br><span class="line">import java.util.Map;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * mp3工具类</span><br><span class="line"> *</span><br><span class="line"> * @author kangyonggan</span><br><span class="line"> * @since 9/4/17</span><br><span class="line"> */</span><br><span class="line">@Log4j2</span><br><span class="line">public class Mp3Util &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) throws Exception &#123;</span><br><span class="line">        Map&lt;String, Object&gt; resultMap = parse(&quot;/Users/kyg/Music/网易云音乐/demo.mp3&quot;, &quot;/Users/kyg/Desktop&quot;);</span><br><span class="line">        log.info(resultMap);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 解析mp3</span><br><span class="line">     *</span><br><span class="line">     * @param mp3Path  mp3路径</span><br><span class="line">     * @param albumDir 解析出的专辑图片存放目录</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static Map&lt;String, Object&gt; parse(String mp3Path, String albumDir) &#123;</span><br><span class="line">        Map&lt;String, Object&gt; resultMap = new HashMap();</span><br><span class="line"></span><br><span class="line">        FileOutputStream out = null;</span><br><span class="line">        try &#123;</span><br><span class="line">            MP3File mp3File = new MP3File(mp3Path);</span><br><span class="line">            MP3AudioHeader header = mp3File.getMP3AudioHeader();</span><br><span class="line">            AbstractID3v2Tag id3v2Tag = mp3File.getID3v2Tag();</span><br><span class="line"></span><br><span class="line">            // 时长(秒)</span><br><span class="line">            int duration = header.getTrackLength();</span><br><span class="line">            // 文件大小</span><br><span class="line">            long size = mp3File.getFile().length();</span><br><span class="line">            // 歌曲名</span><br><span class="line">            String name = getInfo(id3v2Tag, &quot;TIT2&quot;);</span><br><span class="line">            // 歌手</span><br><span class="line">            String singer = getInfo(id3v2Tag, &quot;TPE1&quot;);</span><br><span class="line">            // 专辑</span><br><span class="line">            String album = getInfo(id3v2Tag, &quot;TALB&quot;);</span><br><span class="line">            // 专辑图片</span><br><span class="line">            AbstractID3v2Frame frame = (AbstractID3v2Frame) id3v2Tag.frameMap.get(&quot;APIC&quot;);</span><br><span class="line">            String mimeTpe = (String) frame.getBody().getObjectValue(&quot;MIMEType&quot;);</span><br><span class="line">            byte data[] = (byte[]) frame.getBody().getObjectValue(&quot;PictureData&quot;);</span><br><span class="line"></span><br><span class="line">            // 根据MIMEType获取对应的后缀，如：image/jpeg -&gt; .jpg</span><br><span class="line">            String extension = FileUtil.getExtension(mimeTpe);</span><br><span class="line">            if (StringUtils.isEmpty(extension)) &#123;</span><br><span class="line">                extension = &quot;.jpg&quot;;</span><br><span class="line">            &#125;</span><br><span class="line">            // 把专辑图片写入指定文件夹</span><br><span class="line">            out = new FileOutputStream(albumDir + File.separator + album + extension);</span><br><span class="line">            out.write(data);</span><br><span class="line">            out.flush();</span><br><span class="line"></span><br><span class="line">            // 写响应</span><br><span class="line">            resultMap.put(&quot;duration&quot;, duration);</span><br><span class="line">            resultMap.put(&quot;size&quot;, size);</span><br><span class="line">            resultMap.put(&quot;name&quot;, name);</span><br><span class="line">            resultMap.put(&quot;singer&quot;, singer);</span><br><span class="line">            resultMap.put(&quot;album&quot;, album);</span><br><span class="line">            resultMap.put(&quot;mimeTpe&quot;, mimeTpe);</span><br><span class="line">            resultMap.put(&quot;albumName&quot;, album + extension);</span><br><span class="line"></span><br><span class="line">            resultMap.put(&quot;respCo&quot;, 0);</span><br><span class="line">            resultMap.put(&quot;respMsg&quot;, &quot;解析mp3成功&quot;);</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            log.warn(&quot;解析mp3信息异常&quot;, e);</span><br><span class="line">            resultMap.put(&quot;respCo&quot;, -1);</span><br><span class="line">            resultMap.put(&quot;respMsg&quot;, e.getLocalizedMessage());</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            if (out != null) &#123;</span><br><span class="line">                try &#123;</span><br><span class="line">                    out.close();</span><br><span class="line">                &#125; catch (IOException e) &#123;</span><br><span class="line">                    log.warn(&quot;关闭流异常&quot;, e);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return resultMap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 获取歌曲信息</span><br><span class="line">     *</span><br><span class="line">     * @param id3v2Tag</span><br><span class="line">     * @param identifier</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    private static String getInfo(AbstractID3v2Tag id3v2Tag, String identifier) &#123;</span><br><span class="line">        AbstractID3v2Frame frame = (AbstractID3v2Frame) id3v2Tag.frameMap.get(identifier);</span><br><span class="line">        return (String) frame.getBody().getObjectValue(&quot;Text&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中依赖了apache下的一个jar包，用于获取MIMEType对应的文件后缀名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;tika.version&gt;1.16&lt;/tika.version&gt;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.tika&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;tika-core&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;$&#123;tika.version&#125;&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h4 id="FileUtil-java"><a href="#FileUtil-java" class="headerlink" title="FileUtil.java"></a>FileUtil.java</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 根据MIMEType获取后缀</span><br><span class="line"> *</span><br><span class="line"> * @param mimeType</span><br><span class="line"> * @return</span><br><span class="line"> * @throws Exception</span><br><span class="line"> */</span><br><span class="line">public static String getExtension(String mimeType) throws Exception &#123;</span><br><span class="line">    MimeTypes allTypes = MimeTypes.getDefaultMimeTypes();</span><br><span class="line">    MimeType type = allTypes.forName(mimeType);</span><br><span class="line">    return type.getExtension();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;依赖&quot;&gt;&lt;a href=&quot;#依赖&quot; class=&quot;headerlink&quot; title=&quot;依赖&quot;&gt;&lt;/a&gt;依赖&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;jaudiotagger.version&amp;gt;2.0.3&amp;lt;/jaudiotagger.version&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;groupId&amp;gt;org&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;artifactId&amp;gt;jaudiotagger&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;version&amp;gt;$&amp;#123;jaudiotagger.version&amp;#125;&amp;lt;/version&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Java后台" scheme="http://kangyonggan.com/categories/Java%E5%90%8E%E5%8F%B0/"/>
    
    
      <category term="Java" scheme="http://kangyonggan.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>使用阿里巴巴开发规范扫描我的博客发现的问题总结</title>
    <link href="http://kangyonggan.com/2018/08/06/%E4%BD%BF%E7%94%A8%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%AB%E6%8F%8F%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%8F%91%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/"/>
    <id>http://kangyonggan.com/2018/08/06/使用阿里巴巴开发规范扫描我的博客发现的问题总结/</id>
    <published>2018-08-06T05:45:08.000Z</published>
    <updated>2018-08-06T05:55:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>一、 在if/else/for/while/do语句中必须使用大括号，即使只有一行代码，避免使用下面的形式（发现1处）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if (condition) statements;</span><br></pre></td></tr></table></figure><p>二应该写成下面这样的形式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if (flag) &#123;</span><br><span class="line">    System.out.println(&quot;hello world&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p>二、 所有的覆写方法，必须加@Override注解。 反例：getObject()与get0bject()的问题。一个是字母的O，一个是数字的0，加@Override可以准确判断是否覆盖成功。另外，如果在抽象类中对方法签名进行修改，其实现类会马上编译报错（发现25处）。</p><p>三、 Object的equals方法容易抛空指针异常，应使用常量或确定有值的对象来调用equals（发现62处）。 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">public void f(String str)&#123;</span><br><span class="line">    String inner = &quot;hi&quot;;</span><br><span class="line">    if (inner.equals(str)) &#123;</span><br><span class="line">        System.out.println(&quot;hello world&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>四、 SimpleDateFormat 是线程不安全的类，一般不要定义为static变量，如果定义为static，必须加锁，或者使用DateUtils工具类（发现62处）。</p><p>说明：如果是JDK8的应用，可以使用instant代替Date，LocalDateTime代替Calendar，DateTimeFormatter代替SimpleDateFormat，官方给出的解释：simple beautiful strong immutable thread-safe。</p><p>Positive example 1：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">private static final String FORMAT = &quot;yyyy-MM-dd HH:mm:ss&quot;;</span><br><span class="line">public String getFormat(Date date)&#123;</span><br><span class="line">    SimpleDateFormat dateFormat = new SimpleDateFormat(FORMAT);</span><br><span class="line">    return sdf.format(date);</span><br><span class="line">&#125;</span><br><span class="line">``` </span><br><span class="line">        </span><br><span class="line">            </span><br><span class="line">Positive example 2：</span><br></pre></td></tr></table></figure><p>private static final SimpleDateFormat SIMPLE_DATE_FORMAT = new SimpleDateFormat(“yyyy-MM-dd HH:mm:ss”);<br>public void getFormat(){<br>    synchronized (sdf){<br>    sdf.format(new Date());<br>    ….;<br>}<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">        </span><br><span class="line">        </span><br><span class="line">            </span><br><span class="line">Positive example 3：</span><br></pre></td></tr></table></figure></p><p>private static final ThreadLocal<dateformat> DATE_FORMATTER = new ThreadLocal<dateformat>() {<br>    @Override<br>    protected DateFormat initialValue() {<br>        return new SimpleDateFormat(“yyyy-MM-dd”);<br>    }<br>};<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&gt; 我玩意说是这么说，但是经过我的实验，发现SimpleDateFormat的parse确实需要加锁，但是format方法不需要。</span><br><span class="line"></span><br><span class="line">五、 不能使用过时的类或方法。 说明：java.net.URLDecoder 中的方法decode(String encodeStr) 这个方法已经过时，应该使用双参数decode(String source, String encode)（发现1处）。</span><br><span class="line"></span><br><span class="line">接口提供方既然明确是过时接口，那么有义务同时提供新的接口；作为调用方来说，有义务去考证过时方法的新实现是什么。</span><br><span class="line"></span><br><span class="line">六、常量命名应该全部大写，单词间用下划线隔开，力求语义表达完整清楚，不要嫌名字长（发现6处） </span><br><span class="line"></span><br><span class="line">```            </span><br><span class="line">public class ConstantNameDemo &#123;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * max stock count</span><br><span class="line">     */</span><br><span class="line">    public static final Long MAX_STOCK_COUNT = 50000L;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></dateformat></dateformat></p><p>七、 所有的枚举类型字段必须要有注释，说明每个数据项的用途。 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">public enum TestEnum &#123;</span><br><span class="line">    /**</span><br><span class="line">     * agree</span><br><span class="line">     */</span><br><span class="line">    agree(&quot;agree&quot;),</span><br><span class="line">    /**</span><br><span class="line">     * reject</span><br><span class="line">     */</span><br><span class="line">    reject(&quot;reject&quot;);</span><br><span class="line">    </span><br><span class="line">    private String action;</span><br><span class="line"></span><br><span class="line">    TestEnum(String action) &#123;</span><br><span class="line">        this.action = action;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getAction() &#123;</span><br><span class="line">        return action;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>八、 方法名、参数名、成员变量、局部变量都统一使用lowerCamelCase，必须遵从驼峰形式(发现4处)</p><p>九、线程资源必须通过线程池提供，不允许在应用中自行显式创建线程。 说明：使用线程池的好处是减少在创建和销毁线程上所花的时间以及系统资源的开销，解决资源不足的问题。如果不使用线程池，有可能造成系统创建大量同类线程而导致消耗完内存或者“过度切换”的问题(发现8处)。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ThreadFactory namedThreadFactory = new ThreadFactoryBuilder()</span><br><span class="line">    .setNameFormat(&quot;demo-pool-%d&quot;).build();</span><br><span class="line">ExecutorService singleThreadPool = new ThreadPoolExecutor(1, 1,</span><br><span class="line">    0L, TimeUnit.MILLISECONDS,</span><br><span class="line">    new LinkedBlockingQueue&lt;Runnable&gt;(1024), namedThreadFactory, new ThreadPoolExecutor.AbortPolicy());</span><br><span class="line"></span><br><span class="line">singleThreadPool.execute(()-&gt; System.out.println(Thread.currentThread().getName()));</span><br><span class="line">singleThreadPool.shutdown();</span><br></pre></td></tr></table></figure><p>十、 不允许任何魔法值（即未经定义的常量）直接出现在代码中(发现212处)。 </p><p>Negative example:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//Magic values, except for predefined, are forbidden in coding.</span><br><span class="line">if (key.equals(&quot;Id#taobao_1&quot;)) &#123;</span><br><span class="line">        //...</span><br><span class="line">&#125;</span><br><span class="line">```    </span><br><span class="line"></span><br><span class="line">Positive example:</span><br></pre></td></tr></table></figure></p><p>String KEY_PRE = “Id#taobao_1”;<br>if (KEY_PRE.equals(key)) {<br>        //…<br>}<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">十一、中括号是数组类型的一部分，数组定义如下(发现19处)：</span><br></pre></td></tr></table></figure></p><p>String[] args;</p><p>String[] a = new String[3];<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">十二、及时清理不再使用的代码段或配置信息。 说明：对于垃圾代码或过时配置，坚决清理干净，避免程序过度臃肿，代码冗余(发现2处)。</span><br><span class="line"></span><br><span class="line">Positive example: For codes which are temporarily removed and likely to be reused, use /// to add a reasonable note.</span><br></pre></td></tr></table></figure></p><p>public static void hello() {<br>    /// Business is stopped temporarily by the owner.<br>    // Business business = new Business();<br>    // business.active();<br>    System.out.println(“it’s finished”);<br>}<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">十三、所有的抽象方法（包括接口中的方法）必须要用javadoc注释、除了返回值、参数、异常说明外，还必须指出该方法做什么事情，实现什么功能。 说明：如有实现和调用注意事项，请一并说明(发现2处)。</span><br></pre></td></tr></table></figure></p><p>/**</p><ul><li>fetch data by rule id</li><li></li><li>@param ruleId rule id</li><li>@param page page number</li><li>@param jsonContext json format context</li><li>@return Result<xxxxdo><br>*/<br>Result<xxxxdo> fetchDataByRuleId(Long ruleId, Integer page, String jsonContext);<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">十四、所有的类都必须添加创建者信息。 说明：在设置模板时，注意IDEA的@author为$&#123;USER&#125;，而eclipse的@author为$&#123;user&#125;，大小写有区别，而日期的设置统一为yyyy/MM/dd的格式（发现45处）。</span><br></pre></td></tr></table></figure></xxxxdo></xxxxdo></li></ul><p>/**</p><ul><li>Demo class</li><li></li><li>@author keriezhang</li><li>@date 2016/10/31<br>*/<br>public class CodeNoteDemo {<br>}<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">十五、集合初始化时，指定集合初始值大小。 说明：HashMap使用如下构造方法进行初始化，如果暂时无法确定集合大小，那么指定默认值（16）即可(发现6处)。</span><br><span class="line">         </span><br><span class="line">Negative example:</span><br></pre></td></tr></table></figure></li></ul><p>Map&lt;String, String&gt; map = new HashMap&lt;String, String&gt;();<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">        </span><br><span class="line">Positive example:</span><br></pre></td></tr></table></figure></p><p>Map&lt;String, String&gt; map = new HashMap&lt;String, String&gt;(16);<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">十六、类名使用UpperCamelCase风格，必须遵从驼峰形式，但以下情形例外：（领域模型的相关命名）DO / BO / DTO / VO / DAO（发现1处）</span><br><span class="line"></span><br><span class="line">十七、除常用方法（如getXxx/isXxx）等外，不要在条件判断中执行复杂的语句，将复杂逻辑判断的结果赋值给一个有意义的布尔变量，以提高可读性。 说明：很多if语句内的逻辑相当复杂，阅读者需要分析条件表达式的最终结果，才能明确什么样的条件执行什么样的语句，那么，如果阅读者分析逻辑表达式错误呢？</span><br><span class="line">            </span><br><span class="line">Negative example:</span><br></pre></td></tr></table></figure></p><p>if ((file.open(fileName, “w”) != null) &amp;&amp; (…) || (…)) {<br>    // …<br>}<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">            </span><br><span class="line">Positive example:</span><br></pre></td></tr></table></figure></p><p>boolean existed = (file.open(fileName, “w”) != null) &amp;&amp; (…) || (…);<br>if (existed) {<br>    //…<br>}<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">十八、类、类属性、类方法的注释必须使用javadoc规范，使用/**内容*/格式，不得使用//xxx方式和/*xxx*/方式。 说明：在IDE编辑窗口中，javadoc方式会提示相关注释，生成javadoc可以正确输出相应注释；在IDE中，工程调用方法时，不进入方法即可悬浮提示方法、参数、返回值的意义，提高阅读效率(发现2处)。</span><br></pre></td></tr></table></figure></p><p>/**</p><ul><li></li><li><p>XXX class function description.<br><em></em>/<br>public class XxClass implements Serializable {<br> private static final long serialVersionUID = 113323427779853001L;<br> /**</p><ul><li>id<br>*/<br>private Long id;<br>/**</li><li><p>title<br>*/<br>private String title;</p><p>/**</p></li><li>find by id</li><li></li><li>@param ruleId rule id</li><li>@param page start from 1</li><li>@return Result<xxxx><br>*/<br>public Result<xxxx> funcA(Long ruleId, Integer page) {<br> return null;<br>}<br>}<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">        </span><br><span class="line">十九、方法内部单行注释，在被注释语句上方另起一行，使用//注释。方法内部多行注释使用/* */注释。注意与代码对齐(发现12处)。</span><br></pre></td></tr></table></figure></xxxx></xxxx></li></ul></li></ul><p>public void method() {<br>    // Put single line comment above code. (Note: align ‘//‘ comment with code)<br>    int a = 3;</p><pre><code>/*** Some description about follow code. (Note: align &apos;/**&apos; comment with code)*/int b = 4;</code></pre><p>}<br><code>`</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一、 在if/else/for/while/do语句中必须使用大括号，即使只有一行代码，避免使用下面的形式（发现1处）：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;if (condition) statements;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;二应该写成下面这样的形式：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;if (flag) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.println(&amp;quot;hello world&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Java后台" scheme="http://kangyonggan.com/categories/Java%E5%90%8E%E5%8F%B0/"/>
    
    
      <category term="Java" scheme="http://kangyonggan.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>使用Spring配置多数据源</title>
    <link href="http://kangyonggan.com/2018/08/06/%E4%BD%BF%E7%94%A8Spring%E9%85%8D%E7%BD%AE%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90/"/>
    <id>http://kangyonggan.com/2018/08/06/使用Spring配置多数据源/</id>
    <published>2018-08-06T05:45:08.000Z</published>
    <updated>2018-08-06T05:46:12.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="两个dataSources"><a href="#两个dataSources" class="headerlink" title="两个dataSources"></a>两个dataSources</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 配置dbcp数据源 - dev --&gt;</span><br><span class="line">&lt;bean id=&quot;dataSourceDev&quot; class=&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span><br><span class="line">      destroy-method=&quot;close&quot;&gt;</span><br><span class="line">    &lt;property name=&quot;driverClassName&quot; value=&quot;$&#123;ehelper.jdbc.driver&#125;&quot;&gt;&lt;/property&gt;</span><br><span class="line">    &lt;property name=&quot;url&quot; value=&quot;$&#123;ehelper.jdbc.url.dev&#125;&quot;&gt;&lt;/property&gt;</span><br><span class="line">    &lt;property name=&quot;username&quot; value=&quot;$&#123;ehelper.jdbc.username.dev&#125;&quot;&gt;&lt;/property&gt;</span><br><span class="line">    &lt;property name=&quot;password&quot; value=&quot;$&#123;ehelper.jdbc.password.dev&#125;&quot;&gt;&lt;/property&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 配置初始化大小、最小、最大 --&gt;</span><br><span class="line">    &lt;property name=&quot;initialSize&quot; value=&quot;5&quot;&gt;&lt;/property&gt;</span><br><span class="line">    &lt;property name=&quot;minIdle&quot; value=&quot;5&quot;&gt;&lt;/property&gt;</span><br><span class="line">    &lt;property name=&quot;maxActive&quot; value=&quot;100&quot;&gt;&lt;/property&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 配置获取连接等待超时的时间 --&gt;</span><br><span class="line">    &lt;property name=&quot;maxWait&quot; value=&quot;60000&quot; &gt;&lt;/property&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 --&gt;</span><br><span class="line">    &lt;property name=&quot;timeBetweenEvictionRunsMillis&quot; value=&quot;60000&quot; &gt;&lt;/property&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 配置一个连接在池中最小生存的时间，单位是毫秒 --&gt;</span><br><span class="line">    &lt;property name=&quot;minEvictableIdleTimeMillis&quot; value=&quot;300000&quot; &gt;&lt;/property&gt;</span><br><span class="line"></span><br><span class="line">    &lt;property name=&quot;validationQuery&quot; value=&quot;SELECT &apos;x&apos;&quot; &gt;&lt;/property&gt;</span><br><span class="line">    &lt;property name=&quot;testWhileIdle&quot; value=&quot;true&quot; &gt;&lt;/property&gt;</span><br><span class="line">    &lt;property name=&quot;testOnBorrow&quot; value=&quot;false&quot; &gt;&lt;/property&gt;</span><br><span class="line">    &lt;property name=&quot;testOnReturn&quot; value=&quot;false&quot; &gt;&lt;/property&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 打开PSCache，并且指定每个连接上PSCache的大小 --&gt;</span><br><span class="line">    &lt;property name=&quot;poolPreparedStatements&quot; value=&quot;true&quot; &gt;&lt;/property&gt;</span><br><span class="line">    &lt;property name=&quot;maxPoolPreparedStatementPerConnectionSize&quot; value=&quot;20&quot; &gt;&lt;/property&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 关闭长时间不使用的连接 --&gt;</span><br><span class="line">    &lt;property name=&quot;removeAbandoned&quot; value=&quot;true&quot; &gt;&lt;/property&gt; &lt;!-- 打开removeAbandoned功能 --&gt;</span><br><span class="line">    &lt;property name=&quot;removeAbandonedTimeout&quot; value=&quot;1200&quot; &gt;&lt;/property&gt; &lt;!-- 1200秒，也就是20分钟 --&gt;</span><br><span class="line">    &lt;property name=&quot;logAbandoned&quot; value=&quot;true&quot; &gt;&lt;/property&gt; &lt;!-- 关闭abanded连接时输出错误日志 --&gt;</span><br><span class="line">&lt;/bean&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 配置dbcp数据源 - uat --&gt;</span><br><span class="line">&lt;bean id=&quot;dataSourceUat&quot; class=&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span><br><span class="line">      destroy-method=&quot;close&quot;&gt;</span><br><span class="line">    &lt;property name=&quot;driverClassName&quot; value=&quot;$&#123;ehelper.jdbc.driver&#125;&quot;&gt;&lt;/property&gt;</span><br><span class="line">    &lt;property name=&quot;url&quot; value=&quot;$&#123;ehelper.jdbc.url.uat&#125;&quot;&gt;&lt;/property&gt;</span><br><span class="line">    &lt;property name=&quot;username&quot; value=&quot;$&#123;ehelper.jdbc.username.uat&#125;&quot;&gt;&lt;/property&gt;</span><br><span class="line">    &lt;property name=&quot;password&quot; value=&quot;$&#123;ehelper.jdbc.password.uat&#125;&quot;&gt;&lt;/property&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 配置初始化大小、最小、最大 --&gt;</span><br><span class="line">    &lt;property name=&quot;initialSize&quot; value=&quot;5&quot;&gt;&lt;/property&gt;</span><br><span class="line">    &lt;property name=&quot;minIdle&quot; value=&quot;5&quot;&gt;&lt;/property&gt;</span><br><span class="line">    &lt;property name=&quot;maxActive&quot; value=&quot;100&quot;&gt;&lt;/property&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 配置获取连接等待超时的时间 --&gt;</span><br><span class="line">    &lt;property name=&quot;maxWait&quot; value=&quot;60000&quot; &gt;&lt;/property&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 --&gt;</span><br><span class="line">    &lt;property name=&quot;timeBetweenEvictionRunsMillis&quot; value=&quot;60000&quot; &gt;&lt;/property&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 配置一个连接在池中最小生存的时间，单位是毫秒 --&gt;</span><br><span class="line">    &lt;property name=&quot;minEvictableIdleTimeMillis&quot; value=&quot;300000&quot; &gt;&lt;/property&gt;</span><br><span class="line"></span><br><span class="line">    &lt;property name=&quot;validationQuery&quot; value=&quot;SELECT &apos;x&apos;&quot; &gt;&lt;/property&gt;</span><br><span class="line">    &lt;property name=&quot;testWhileIdle&quot; value=&quot;true&quot; &gt;&lt;/property&gt;</span><br><span class="line">    &lt;property name=&quot;testOnBorrow&quot; value=&quot;false&quot; &gt;&lt;/property&gt;</span><br><span class="line">    &lt;property name=&quot;testOnReturn&quot; value=&quot;false&quot; &gt;&lt;/property&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 打开PSCache，并且指定每个连接上PSCache的大小 --&gt;</span><br><span class="line">    &lt;property name=&quot;poolPreparedStatements&quot; value=&quot;true&quot; &gt;&lt;/property&gt;</span><br><span class="line">    &lt;property name=&quot;maxPoolPreparedStatementPerConnectionSize&quot; value=&quot;20&quot; &gt;&lt;/property&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 关闭长时间不使用的连接 --&gt;</span><br><span class="line">    &lt;property name=&quot;removeAbandoned&quot; value=&quot;true&quot; &gt;&lt;/property&gt; &lt;!-- 打开removeAbandoned功能 --&gt;</span><br><span class="line">    &lt;property name=&quot;removeAbandonedTimeout&quot; value=&quot;1200&quot; &gt;&lt;/property&gt; &lt;!-- 1200秒，也就是20分钟 --&gt;</span><br><span class="line">    &lt;property name=&quot;logAbandoned&quot; value=&quot;true&quot; &gt;&lt;/property&gt; &lt;!-- 关闭abanded连接时输出错误日志 --&gt;</span><br><span class="line">&lt;/bean&gt;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="MultiDataSource"><a href="#MultiDataSource" class="headerlink" title="MultiDataSource"></a>MultiDataSource</h2><p>需要自己实现数据源路由， 继承AbstractRoutingDataSource，覆写determineCurrentLookupKey方法即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">package com.shhxzq.fin.ehelper.biz.util;</span><br><span class="line"></span><br><span class="line">import com.shhxzq.fin.ehelper.model.constants.DataSource;</span><br><span class="line">import org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 多数据源</span><br><span class="line"> *</span><br><span class="line"> * @author kangyonggan</span><br><span class="line"> * @since 4/28/17</span><br><span class="line"> */</span><br><span class="line">public class MultiDataSource extends AbstractRoutingDataSource &#123;</span><br><span class="line"></span><br><span class="line">    private static final ThreadLocal&lt;String&gt; dataSourceKey = new InheritableThreadLocal();</span><br><span class="line"></span><br><span class="line">    public static void setDataSource(DataSource dataSource) &#123;</span><br><span class="line">        dataSourceKey.set(dataSource.name());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected Object determineCurrentLookupKey() &#123;</span><br><span class="line">        return dataSourceKey.get();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中DataSource是个枚举：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">package com.shhxzq.fin.ehelper.model.constants;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @author kangyonggan</span><br><span class="line"> * @since 4/28/17</span><br><span class="line"> */</span><br><span class="line">public enum DataSource &#123;</span><br><span class="line">    DEV, UAT;</span><br><span class="line"></span><br><span class="line">    public static DataSource getDataSource(String name) &#123;</span><br><span class="line">        for (DataSource dataSource : DataSource.values()) &#123;</span><br><span class="line">            if (dataSource.name().equalsIgnoreCase(name)) &#123;</span><br><span class="line">                return dataSource;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return DataSource.DEV;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="sqlSessionFactory"><a href="#sqlSessionFactory" class="headerlink" title="sqlSessionFactory"></a>sqlSessionFactory</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 创建SqlSessionFactory，同时指定数据源 --&gt;</span><br><span class="line">&lt;bean id=&quot;sqlSessionFactory&quot; class=&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;&gt;</span><br><span class="line">    &lt;property name=&quot;dataSource&quot; ref=&quot;multiDataSource&quot;&gt;&lt;/property&gt;</span><br><span class="line">    &lt;property name=&quot;configLocation&quot; value=&quot;classpath:mybatis.xml&quot;&gt;&lt;/property&gt;</span><br><span class="line">    &lt;property name=&quot;mapperLocations&quot; value=&quot;classpath:mapper/*.xml&quot;&gt;&lt;/property&gt;</span><br><span class="line">    &lt;property name=&quot;typeAliasesPackage&quot; value=&quot;com.shhxzq.fin.ehelper.model.vo&quot;&gt;&lt;/property&gt;</span><br><span class="line">    &lt;property name=&quot;plugins&quot;&gt;</span><br><span class="line">        &lt;array&gt;</span><br><span class="line">            &lt;bean class=&quot;com.github.pagehelper.PageHelper&quot;&gt;</span><br><span class="line">                &lt;property name=&quot;properties&quot;&gt;</span><br><span class="line">                    &lt;value&gt;</span><br><span class="line">                        dialect=mysql</span><br><span class="line">                    &lt;/value&gt;</span><br><span class="line">                &lt;/property&gt;</span><br><span class="line">            &lt;/bean&gt;</span><br><span class="line">        &lt;/array&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">&lt;/bean&gt;</span><br></pre></td></tr></table></figure><h2 id="sqlSession"><a href="#sqlSession" class="headerlink" title="sqlSession"></a>sqlSession</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 配置SQLSession模板 --&gt;</span><br><span class="line">&lt;bean id=&quot;sqlSession&quot; class=&quot;org.mybatis.spring.SqlSessionTemplate&quot; scope=&quot;prototype&quot;&gt;</span><br><span class="line">    &lt;constructor-arg index=&quot;0&quot; ref=&quot;sqlSessionFactory&quot;&gt;&lt;/constructor&gt;</span><br><span class="line">&lt;/bean&gt;</span><br></pre></td></tr></table></figure><h2 id="transactionManager"><a href="#transactionManager" class="headerlink" title="transactionManager"></a>transactionManager</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 使用JDBC事务 --&gt;</span><br><span class="line">&lt;bean id=&quot;transactionManager&quot;</span><br><span class="line">      class=&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;&gt;</span><br><span class="line">    &lt;property name=&quot;dataSource&quot; ref=&quot;multiDataSource&quot;&gt;&lt;/property&gt;</span><br><span class="line">&lt;/bean&gt;</span><br></pre></td></tr></table></figure><h2 id="transactionAdvice"><a href="#transactionAdvice" class="headerlink" title="transactionAdvice"></a>transactionAdvice</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- AOP配置事物 --&gt;</span><br><span class="line">&lt;tx:advice id=&quot;transactionAdvice&quot; transaction-manager=&quot;transactionManager&quot;&gt;</span><br><span class="line">    &lt;tx:attributes&gt;</span><br><span class="line">        &lt;tx:method name=&quot;delete*&quot; propagation=&quot;REQUIRED&quot;&gt;&lt;/tx:method&gt;</span><br><span class="line">        &lt;tx:method name=&quot;update*&quot; propagation=&quot;REQUIRED&quot;&gt;&lt;/tx:method&gt;</span><br><span class="line">        &lt;tx:method name=&quot;save*&quot; propagation=&quot;REQUIRED&quot;&gt;&lt;/tx:method&gt;</span><br><span class="line">        &lt;tx:method name=&quot;remove*&quot; propagation=&quot;REQUIRED&quot;&gt;&lt;/tx:method&gt;</span><br><span class="line">        &lt;tx:method name=&quot;send*&quot; propagation=&quot;REQUIRED&quot;&gt;&lt;/tx:method&gt;</span><br><span class="line"></span><br><span class="line">        &lt;tx:method name=&quot;search*&quot; read-only=&quot;true&quot; propagation=&quot;REQUIRED&quot;&gt;&lt;/tx:method&gt;</span><br><span class="line">        &lt;tx:method name=&quot;find*&quot; read-only=&quot;true&quot; propagation=&quot;REQUIRED&quot;&gt;&lt;/tx:method&gt;</span><br><span class="line">        &lt;tx:method name=&quot;get*&quot; read-only=&quot;true&quot; propagation=&quot;REQUIRED&quot;&gt;&lt;/tx:method&gt;</span><br><span class="line">        &lt;tx:method name=&quot;*&quot; read-only=&quot;true&quot; propagation=&quot;REQUIRED&quot;&gt;&lt;/tx:method&gt;</span><br><span class="line">    &lt;/tx:attributes&gt;</span><br><span class="line">&lt;/tx:advice&gt;</span><br></pre></td></tr></table></figure><h2 id="transactionPointcut"><a href="#transactionPointcut" class="headerlink" title="transactionPointcut"></a>transactionPointcut</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 配置AOP切面 --&gt;</span><br><span class="line">&lt;aop:config&gt;</span><br><span class="line">    &lt;!--切点，用于事务--&gt;</span><br><span class="line">    &lt;aop:pointcut id=&quot;transactionPointcut&quot;</span><br><span class="line">                  expression=&quot;execution(* com.shhxzq.fin.ehelper.biz.service.impl.transaction..*.*(..))&quot;&gt;&lt;/aop:pointcut&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--事物切面--&gt;</span><br><span class="line">    &lt;aop:advisor pointcut-ref=&quot;transactionPointcut&quot; advice-ref=&quot;transactionAdvice&quot;&gt;&lt;/aop:advisor&gt;</span><br><span class="line">&lt;/aop:config&gt;</span><br></pre></td></tr></table></figure><h2 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h2><p>原本我是想在spring初始化bean的时候就指定数据源，这样的话事务就不会和数据源打架，我想到的方案是，给不同的包指定不同的数据源，但是这样会带来一个问题，就是会冗余代码。</p><p>比如dev环境和uat环境的service分别放在dev和uat包下，再分别给dev包河uat包指定dev的数据源和uat的数据源。</p><p>引发的问题：dev和uat业务逻辑一样，仅数据源不一样，但是却有两份代码！冗余还是小事，以后维护才是大事，所以此方案果断排除。</p><h2 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h2><p>在调用方法的时候传入一个参数，指定调用哪个数据源，这样代码就没冗余的地方了，但是会带来一个问题。</p><p>就是需要修改老代码，在参数中增加一个参数，然后在方法中指定数据源，在方法中指定数据源可以使用注解和切面完成，但不可避面的还是要增加一个参数。</p><p>如果不增加一个参数，而是在注解中加参数呢？我也这么想过，但是这样的话，这个方法就只能使用固定的数据源了，达不到动态的效果。</p><p>进一步分析，如果在注解中加参数，另外再多写一个方法指定为另一个数据源呢？显然是不可取的，方法冗余，维护困难，如果再次增加数据源还得再加一个方法。</p><p>所以，最后我还是选择了使用【传参+注解】的方案，没办法，要想动态切换数据源，你总的告诉方法你要用哪个数据源吧，怎么告诉他？传参是最好途径了，并且扩展性强。下面是我具体实现代码。</p><h2 id="DataSourceSwitch"><a href="#DataSourceSwitch" class="headerlink" title="DataSourceSwitch"></a>DataSourceSwitch</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">package com.shhxzq.fin.ehelper.model.annotation;</span><br><span class="line"></span><br><span class="line">import java.lang.annotation.*;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 在方法上加此注解，会使用第一个参数即DataSource枚举切换数据源</span><br><span class="line"> *</span><br><span class="line"> * @author kangyonggan</span><br><span class="line"> * @since 2016/12/8</span><br><span class="line"> */</span><br><span class="line">@Documented</span><br><span class="line">@Inherited</span><br><span class="line">@Target(ElementType.METHOD)</span><br><span class="line">@Retention(RetentionPolicy.RUNTIME)</span><br><span class="line">public @interface DataSourceSwitch &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="DataSourceAop"><a href="#DataSourceAop" class="headerlink" title="DataSourceAop"></a>DataSourceAop</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">package com.shhxzq.fin.ehelper.biz.aop;</span><br><span class="line"></span><br><span class="line">import com.shhxzq.fin.ehelper.biz.util.MultiDataSource;</span><br><span class="line">import com.shhxzq.fin.ehelper.model.annotation.DataSourceSwitch;</span><br><span class="line">import com.shhxzq.fin.ehelper.model.constants.DataSource;</span><br><span class="line">import lombok.extern.log4j.Log4j2;</span><br><span class="line">import org.aspectj.lang.ProceedingJoinPoint;</span><br><span class="line">import org.aspectj.lang.annotation.Around;</span><br><span class="line">import org.aspectj.lang.annotation.Aspect;</span><br><span class="line">import org.aspectj.lang.annotation.Pointcut;</span><br><span class="line">import org.aspectj.lang.reflect.MethodSignature;</span><br><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line">import java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @author kangyonggan</span><br><span class="line"> * @since 4/28/17</span><br><span class="line"> */</span><br><span class="line">@Log4j2</span><br><span class="line">@Component</span><br><span class="line">@Aspect</span><br><span class="line">public class DataSourceAop &#123;</span><br><span class="line"></span><br><span class="line">    @Pointcut(&quot;execution(* com.shhxzq.fin.ehelper.biz.service.impl..*.*(..))&quot;)</span><br><span class="line">    public void pointcut() &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * @param joinPoint</span><br><span class="line">     * @return</span><br><span class="line">     * @throws Throwable</span><br><span class="line">     */</span><br><span class="line">    @Around(&quot;pointcut()&quot;)</span><br><span class="line">    public Object around(ProceedingJoinPoint joinPoint) throws Throwable &#123;</span><br><span class="line">        Object args[] = joinPoint.getArgs();</span><br><span class="line">        Class clazz = joinPoint.getTarget().getClass();</span><br><span class="line"></span><br><span class="line">        MethodSignature methodSignature = (MethodSignature) joinPoint.getSignature();</span><br><span class="line">        Method method = clazz.getMethod(methodSignature.getName(), methodSignature.getParameterTypes());</span><br><span class="line"></span><br><span class="line">        DataSourceSwitch dataSourceSwitch = method.getAnnotation(DataSourceSwitch.class);</span><br><span class="line">        if (dataSourceSwitch != null) &#123;</span><br><span class="line">            log.info(&quot;使用指定的数据源.&quot;);</span><br><span class="line">            if (args.length &gt; 0) &#123;</span><br><span class="line">                Object obj = args[0];</span><br><span class="line">                if (obj instanceof DataSource) &#123;</span><br><span class="line">                    DataSource dataSource = (DataSource) obj;</span><br><span class="line">                    MultiDataSource.setDataSource(dataSource);</span><br><span class="line">                    log.info(&quot;数据源：&#123;&#125;&quot;, dataSource.name());</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    log.info(&quot;第一个参数不是DataSource枚举，所以仍然使用默认数据源.&quot;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                log.info(&quot;第一个参数不是DataSource枚举，所以仍然使用默认数据源.&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            log.info(&quot;使用默认数据源.&quot;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        return joinPoint.proceed(args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="BeCommandServiceImpl"><a href="#BeCommandServiceImpl" class="headerlink" title="BeCommandServiceImpl"></a>BeCommandServiceImpl</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">package com.shhxzq.fin.ehelper.biz.service.impl;</span><br><span class="line"></span><br><span class="line">import com.shhxzq.fin.ehelper.biz.service.BeCommandService;</span><br><span class="line">import com.shhxzq.fin.ehelper.model.annotation.DataSourceSwitch;</span><br><span class="line">import com.shhxzq.fin.ehelper.model.annotation.LogTime;</span><br><span class="line">import com.shhxzq.fin.ehelper.model.constants.DataSource;</span><br><span class="line">import com.shhxzq.fin.ehelper.model.vo.BeCommand;</span><br><span class="line">import org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @author kangyonggan</span><br><span class="line"> * @since 4/28/17</span><br><span class="line"> */</span><br><span class="line">@Service</span><br><span class="line">public class BeCommandServiceImpl extends BaseService&lt;BeCommand&gt; implements BeCommandService &#123;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    @LogTime</span><br><span class="line">    @DataSourceSwitch</span><br><span class="line">    public BeCommand findBeCommandBySerialNo(DataSource dataSource, String serialNo) &#123;</span><br><span class="line">        BeCommand beCommand = new BeCommand();</span><br><span class="line">        beCommand.setSerialNo(serialNo);</span><br><span class="line"></span><br><span class="line">        return super.selectOne(beCommand);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>另外我还遇到了一个问题，那就是事务和多数据源打架了，我的解决方案是把它们两个分开。但也不是太好，先这样吧，以后再研究。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;两个dataSources&quot;&gt;&lt;a href=&quot;#两个dataSources&quot; class=&quot;headerlink&quot; title=&quot;两个dataSources&quot;&gt;&lt;/a&gt;两个dataSources&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!-- 配置dbcp数据源 - dev --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;bean id=&amp;quot;dataSourceDev&amp;quot; class=&amp;quot;com.alibaba.druid.pool.DruidDataSource&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      destroy-method=&amp;quot;close&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;property name=&amp;quot;driverClassName&amp;quot; value=&amp;quot;$&amp;#123;ehelper.jdbc.driver&amp;#125;&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;property name=&amp;quot;url&amp;quot; value=&amp;quot;$&amp;#123;ehelper.jdbc.url.dev&amp;#125;&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;property name=&amp;quot;username&amp;quot; value=&amp;quot;$&amp;#123;ehelper.jdbc.username.dev&amp;#125;&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;property name=&amp;quot;password&amp;quot; value=&amp;quot;$&amp;#123;ehelper.jdbc.password.dev&amp;#125;&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;!-- 配置初始化大小、最小、最大 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;property name=&amp;quot;initialSize&amp;quot; value=&amp;quot;5&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;property name=&amp;quot;minIdle&amp;quot; value=&amp;quot;5&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;property name=&amp;quot;maxActive&amp;quot; value=&amp;quot;100&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;!-- 配置获取连接等待超时的时间 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;property name=&amp;quot;maxWait&amp;quot; value=&amp;quot;60000&amp;quot; &amp;gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;property name=&amp;quot;timeBetweenEvictionRunsMillis&amp;quot; value=&amp;quot;60000&amp;quot; &amp;gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;!-- 配置一个连接在池中最小生存的时间，单位是毫秒 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;property name=&amp;quot;minEvictableIdleTimeMillis&amp;quot; value=&amp;quot;300000&amp;quot; &amp;gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;property name=&amp;quot;validationQuery&amp;quot; value=&amp;quot;SELECT &amp;apos;x&amp;apos;&amp;quot; &amp;gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;property name=&amp;quot;testWhileIdle&amp;quot; value=&amp;quot;true&amp;quot; &amp;gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;property name=&amp;quot;testOnBorrow&amp;quot; value=&amp;quot;false&amp;quot; &amp;gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;property name=&amp;quot;testOnReturn&amp;quot; value=&amp;quot;false&amp;quot; &amp;gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;!-- 打开PSCache，并且指定每个连接上PSCache的大小 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;property name=&amp;quot;poolPreparedStatements&amp;quot; value=&amp;quot;true&amp;quot; &amp;gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;property name=&amp;quot;maxPoolPreparedStatementPerConnectionSize&amp;quot; value=&amp;quot;20&amp;quot; &amp;gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;!-- 关闭长时间不使用的连接 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;property name=&amp;quot;removeAbandoned&amp;quot; value=&amp;quot;true&amp;quot; &amp;gt;&amp;lt;/property&amp;gt; &amp;lt;!-- 打开removeAbandoned功能 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;property name=&amp;quot;removeAbandonedTimeout&amp;quot; value=&amp;quot;1200&amp;quot; &amp;gt;&amp;lt;/property&amp;gt; &amp;lt;!-- 1200秒，也就是20分钟 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;property name=&amp;quot;logAbandoned&amp;quot; value=&amp;quot;true&amp;quot; &amp;gt;&amp;lt;/property&amp;gt; &amp;lt;!-- 关闭abanded连接时输出错误日志 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!-- 配置dbcp数据源 - uat --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;bean id=&amp;quot;dataSourceUat&amp;quot; class=&amp;quot;com.alibaba.druid.pool.DruidDataSource&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      destroy-method=&amp;quot;close&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;property name=&amp;quot;driverClassName&amp;quot; value=&amp;quot;$&amp;#123;ehelper.jdbc.driver&amp;#125;&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;property name=&amp;quot;url&amp;quot; value=&amp;quot;$&amp;#123;ehelper.jdbc.url.uat&amp;#125;&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;property name=&amp;quot;username&amp;quot; value=&amp;quot;$&amp;#123;ehelper.jdbc.username.uat&amp;#125;&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;property name=&amp;quot;password&amp;quot; value=&amp;quot;$&amp;#123;ehelper.jdbc.password.uat&amp;#125;&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;!-- 配置初始化大小、最小、最大 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;property name=&amp;quot;initialSize&amp;quot; value=&amp;quot;5&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;property name=&amp;quot;minIdle&amp;quot; value=&amp;quot;5&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;property name=&amp;quot;maxActive&amp;quot; value=&amp;quot;100&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;!-- 配置获取连接等待超时的时间 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;property name=&amp;quot;maxWait&amp;quot; value=&amp;quot;60000&amp;quot; &amp;gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;property name=&amp;quot;timeBetweenEvictionRunsMillis&amp;quot; value=&amp;quot;60000&amp;quot; &amp;gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;!-- 配置一个连接在池中最小生存的时间，单位是毫秒 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;property name=&amp;quot;minEvictableIdleTimeMillis&amp;quot; value=&amp;quot;300000&amp;quot; &amp;gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;property name=&amp;quot;validationQuery&amp;quot; value=&amp;quot;SELECT &amp;apos;x&amp;apos;&amp;quot; &amp;gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;property name=&amp;quot;testWhileIdle&amp;quot; value=&amp;quot;true&amp;quot; &amp;gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;property name=&amp;quot;testOnBorrow&amp;quot; value=&amp;quot;false&amp;quot; &amp;gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;property name=&amp;quot;testOnReturn&amp;quot; value=&amp;quot;false&amp;quot; &amp;gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;!-- 打开PSCache，并且指定每个连接上PSCache的大小 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;property name=&amp;quot;poolPreparedStatements&amp;quot; value=&amp;quot;true&amp;quot; &amp;gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;property name=&amp;quot;maxPoolPreparedStatementPerConnectionSize&amp;quot; value=&amp;quot;20&amp;quot; &amp;gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;!-- 关闭长时间不使用的连接 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;property name=&amp;quot;removeAbandoned&amp;quot; value=&amp;quot;true&amp;quot; &amp;gt;&amp;lt;/property&amp;gt; &amp;lt;!-- 打开removeAbandoned功能 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;property name=&amp;quot;removeAbandonedTimeout&amp;quot; value=&amp;quot;1200&amp;quot; &amp;gt;&amp;lt;/property&amp;gt; &amp;lt;!-- 1200秒，也就是20分钟 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;property name=&amp;quot;logAbandoned&amp;quot; value=&amp;quot;true&amp;quot; &amp;gt;&amp;lt;/property&amp;gt; &amp;lt;!-- 关闭abanded连接时输出错误日志 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Java后台" scheme="http://kangyonggan.com/categories/Java%E5%90%8E%E5%8F%B0/"/>
    
    
      <category term="Java" scheme="http://kangyonggan.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>使用Log4j2的Rewrite过滤敏感信息</title>
    <link href="http://kangyonggan.com/2018/08/06/%E4%BD%BF%E7%94%A8Log4j2%E7%9A%84Rewrite%E8%BF%87%E6%BB%A4%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF/"/>
    <id>http://kangyonggan.com/2018/08/06/使用Log4j2的Rewrite过滤敏感信息/</id>
    <published>2018-08-06T05:45:08.000Z</published>
    <updated>2018-08-28T03:11:04.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摸索过程"><a href="#摸索过程" class="headerlink" title="摸索过程"></a>摸索过程</h2><p>查看官方文档<a href="https://logging.apache.org/log4j/2.0/manual/appenders.html#RewriteAppender" target="_blank" rel="noopener">https://logging.apache.org/log4j/2.0/manual/appenders.html#RewriteAppender</a>，官方文档中虽然有所介绍，但是没给demo，百度谷歌都很难查到此类文章，所有配置起来有一定难度。</p><a id="more"></a><h3 id="pom-xml的配置"><a href="#pom-xml的配置" class="headerlink" title="pom.xml的配置"></a>pom.xml的配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;</span><br><span class="line">         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line"></span><br><span class="line">    &lt;groupId&gt;com.kangyonggan.demo&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;log4j2-rewrite&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</span><br><span class="line"></span><br><span class="line">    &lt;properties&gt;</span><br><span class="line">        &lt;log4j2.api.version&gt;2.8.2&lt;/log4j2.api.version&gt;</span><br><span class="line">    &lt;/properties&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line">        &lt;!--Log4j2--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;log4j-api&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;log4j2.api.version&#125;&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;log4j-core&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;log4j2.api.version&#125;&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">    &lt;/dependencies&gt;</span><br><span class="line"></span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure><h3 id="log4j2-xml的配置"><a href="#log4j2-xml的配置" class="headerlink" title="log4j2.xml的配置"></a>log4j2.xml的配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;Configuration status=&quot;warn&quot;&gt;</span><br><span class="line">    &lt;Appenders&gt;</span><br><span class="line">        &lt;Console name=&quot;Console&quot; target=&quot;SYSTEM_OUT&quot;&gt;</span><br><span class="line">            &lt;PatternLayout pattern=&quot;[%-5level] %d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%logger&#123;36&#125;.%t:%L] - %msg%n&quot;&gt;&lt;/PatternLayout&gt;</span><br><span class="line">        &lt;/Console&gt;</span><br><span class="line"></span><br><span class="line">        &lt;Rewrite name=&quot;Rewrite&quot;&gt;</span><br><span class="line">            &lt;MyRewritePolicy&gt;&lt;/MyRewritePolicy&gt;</span><br><span class="line">            &lt;AppenderRef ref=&quot;Console&quot;&gt;&lt;/AppenderRef&gt;</span><br><span class="line">        &lt;/Rewrite&gt;</span><br><span class="line">    &lt;/Appenders&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Loggers&gt;</span><br><span class="line">        &lt;Root level=&quot;info&quot;&gt;</span><br><span class="line">            &lt;AppenderRef ref=&quot;Rewrite&quot;&gt;&lt;/AppenderRef&gt;</span><br><span class="line">        &lt;/Root&gt;</span><br><span class="line">    &lt;/Loggers&gt;</span><br><span class="line">&lt;/Configuration&gt;</span><br></pre></td></tr></table></figure><p>其中MyRewritePolicy是我自定义的，它实现了RewritePolicy接口，同时需要实现一个方法public LogEvent rewrite(final LogEvent event)</p><h3 id="MyRewritePolicy-java的实现"><a href="#MyRewritePolicy-java的实现" class="headerlink" title="MyRewritePolicy.java的实现"></a>MyRewritePolicy.java的实现</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">package com.kangyonggan.demo;</span><br><span class="line"></span><br><span class="line">import org.apache.logging.log4j.core.LogEvent;</span><br><span class="line">import org.apache.logging.log4j.core.appender.rewrite.RewritePolicy;</span><br><span class="line">import org.apache.logging.log4j.core.impl.Log4jLogEvent;</span><br><span class="line">import org.apache.logging.log4j.message.SimpleMessage;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @author kangyonggan</span><br><span class="line"> * @since 2017/4/24 0024</span><br><span class="line"> */</span><br><span class="line">public final class MyRewritePolicy implements RewritePolicy &#123;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public LogEvent rewrite(final LogEvent event) &#123;</span><br><span class="line">        String message = event.getMessage().getFormattedMessage();</span><br><span class="line">        // 处理日志的逻辑</span><br><span class="line">        message = &quot;处理后的日志: &quot; + message;</span><br><span class="line"></span><br><span class="line">        SimpleMessage simpleMessage = new SimpleMessage(message);</span><br><span class="line">        LogEvent result = new Log4jLogEvent(event.getLoggerName(), event.getMarker(),</span><br><span class="line">                event.getLoggerFqcn(), event.getLevel(), simpleMessage,</span><br><span class="line">                event.getThrown(), event.getContextMap(), event.getContextStack(),</span><br><span class="line">                event.getThreadName(), event.getSource(), event.getTimeMillis());</span><br><span class="line"></span><br><span class="line">        return result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="小测一下"><a href="#小测一下" class="headerlink" title="小测一下"></a>小测一下</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">package com.kangyonggan.demo;</span><br><span class="line"></span><br><span class="line">import org.apache.logging.log4j.LogManager;</span><br><span class="line">import org.apache.logging.log4j.Logger;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @author kangyonggan</span><br><span class="line"> * @since 2017/4/24 0024</span><br><span class="line"> */</span><br><span class="line">public class Test &#123;</span><br><span class="line"></span><br><span class="line">    private static Logger logger = LogManager.getLogger(Test.class);</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        logger.info(&quot;手机号:&#123;&#125;&quot;, &quot;15121149571&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行后报错：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">2017-04-24 23:35:04,827 main ERROR Unable to invoke factory method in class class com.kangyonggan.demo.MyRewritePolicy for element MyRewritePolicy. java.lang.IllegalStateException: No factory method found for class com.kangyonggan.demo.MyRewritePolicy</span><br><span class="line">at org.apache.logging.log4j.core.config.plugins.util.PluginBuilder.findFactoryMethod(PluginBuilder.java:224)</span><br><span class="line">at org.apache.logging.log4j.core.config.plugins.util.PluginBuilder.build(PluginBuilder.java:130)</span><br><span class="line">at org.apache.logging.log4j.core.config.AbstractConfiguration.createPluginObject(AbstractConfiguration.java:952)</span><br><span class="line">at org.apache.logging.log4j.core.config.AbstractConfiguration.createConfiguration(AbstractConfiguration.java:892)</span><br><span class="line">at org.apache.logging.log4j.core.config.AbstractConfiguration.createConfiguration(AbstractConfiguration.java:884)</span><br><span class="line">at org.apache.logging.log4j.core.config.AbstractConfiguration.createConfiguration(AbstractConfiguration.java:884)</span><br><span class="line">at org.apache.logging.log4j.core.config.AbstractConfiguration.doConfigure(AbstractConfiguration.java:508)</span><br><span class="line">at org.apache.logging.log4j.core.config.AbstractConfiguration.initialize(AbstractConfiguration.java:232)</span><br><span class="line">at org.apache.logging.log4j.core.config.AbstractConfiguration.start(AbstractConfiguration.java:244)</span><br><span class="line">at org.apache.logging.log4j.core.LoggerContext.setConfiguration(LoggerContext.java:545)</span><br><span class="line">at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:617)</span><br><span class="line">at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:634)</span><br><span class="line">at org.apache.logging.log4j.core.LoggerContext.start(LoggerContext.java:229)</span><br><span class="line">at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:152)</span><br><span class="line">at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:45)</span><br><span class="line">at org.apache.logging.log4j.LogManager.getContext(LogManager.java:194)</span><br><span class="line">at org.apache.logging.log4j.LogManager.getLogger(LogManager.java:551)</span><br><span class="line">at com.kangyonggan.demo.Test.&lt;clinit&gt;(Test.java:12)</span><br><span class="line"></span><br><span class="line">[INFO ] 2017-04-24 23:35:04.884 [com.kangyonggan.demo.Test.main:15] - 手机号:15121149571</span><br></pre></td></tr></table></figure><p>从报错信息中可以看出：没有工厂方法（No factory method found）。<br>还提到了org.apache.logging.log4j.core.config.plugins这个包下面的插件。<br>所以去这个包下面看一下相关的插件：</p><p><img src="/uploads/log4j2-rewrite-01.png" alt="plugin"></p><p>果然看到了factory相关的plugin，并且PluginFactory是作用在method上的。</p><h3 id="使用-PluginFactory注解"><a href="#使用-PluginFactory注解" class="headerlink" title="使用@PluginFactory注解"></a>使用@PluginFactory注解</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">package com.kangyonggan.demo;</span><br><span class="line"></span><br><span class="line">import org.apache.logging.log4j.core.LogEvent;</span><br><span class="line">import org.apache.logging.log4j.core.appender.rewrite.RewritePolicy;</span><br><span class="line">import org.apache.logging.log4j.core.config.plugins.PluginFactory;</span><br><span class="line">import org.apache.logging.log4j.core.impl.Log4jLogEvent;</span><br><span class="line">import org.apache.logging.log4j.message.SimpleMessage;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @author kangyonggan</span><br><span class="line"> * @since 2017/4/24 0024</span><br><span class="line"> */</span><br><span class="line">public final class MyRewritePolicy implements RewritePolicy &#123;</span><br><span class="line"></span><br><span class="line">    public LogEvent rewrite(final LogEvent event) &#123;</span><br><span class="line">        String message = event.getMessage().getFormattedMessage();</span><br><span class="line">        // 处理日志的逻辑</span><br><span class="line">        message = &quot;处理后的日志: &quot; + message;</span><br><span class="line"></span><br><span class="line">        SimpleMessage simpleMessage = new SimpleMessage(message);</span><br><span class="line">        LogEvent result = new Log4jLogEvent(event.getLoggerName(), event.getMarker(),</span><br><span class="line">                event.getLoggerFqcn(), event.getLevel(), simpleMessage,</span><br><span class="line">                event.getThrown(), event.getContextMap(), event.getContextStack(),</span><br><span class="line">                event.getThreadName(), event.getSource(), event.getTimeMillis());</span><br><span class="line"></span><br><span class="line">        return result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @PluginFactory</span><br><span class="line">    public static void factory() &#123;</span><br><span class="line">        System.out.println(&quot;factory&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这次运行后没有报错了，也打印了“factory”，但是rewrite方法没被执行。</p><p>仔细一想，这既然是工厂方法，一定是为了创建对象的，所以再次修改如下。</p><h3 id="PluginFactory返回自定义的实例"><a href="#PluginFactory返回自定义的实例" class="headerlink" title="PluginFactory返回自定义的实例"></a>PluginFactory返回自定义的实例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">package com.kangyonggan.demo;</span><br><span class="line"></span><br><span class="line">import org.apache.logging.log4j.core.LogEvent;</span><br><span class="line">import org.apache.logging.log4j.core.appender.rewrite.RewritePolicy;</span><br><span class="line">import org.apache.logging.log4j.core.config.plugins.PluginFactory;</span><br><span class="line">import org.apache.logging.log4j.core.impl.Log4jLogEvent;</span><br><span class="line">import org.apache.logging.log4j.message.SimpleMessage;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @author kangyonggan</span><br><span class="line"> * @since 2017/4/24 0024</span><br><span class="line"> */</span><br><span class="line">public final class MyRewritePolicy implements RewritePolicy &#123;</span><br><span class="line"></span><br><span class="line">    public LogEvent rewrite(final LogEvent event) &#123;</span><br><span class="line">        String message = event.getMessage().getFormattedMessage();</span><br><span class="line">        // 处理日志的逻辑</span><br><span class="line">        message = &quot;处理后的日志: &quot; + message;</span><br><span class="line"></span><br><span class="line">        SimpleMessage simpleMessage = new SimpleMessage(message);</span><br><span class="line">        LogEvent result = new Log4jLogEvent(event.getLoggerName(), event.getMarker(),</span><br><span class="line">                event.getLoggerFqcn(), event.getLevel(), simpleMessage,</span><br><span class="line">                event.getThrown(), event.getContextMap(), event.getContextStack(),</span><br><span class="line">                event.getThreadName(), event.getSource(), event.getTimeMillis());</span><br><span class="line"></span><br><span class="line">        return result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @PluginFactory</span><br><span class="line">    public static MyRewritePolicy factory() &#123;</span><br><span class="line">        System.out.println(&quot;factory&quot;);</span><br><span class="line">        return new MyRewritePolicy();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在此运行后发现成功了！</p><h3 id="完整log4j2-xml的配置"><a href="#完整log4j2-xml的配置" class="headerlink" title="完整log4j2.xml的配置"></a>完整log4j2.xml的配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;Configuration status=&quot;WARN&quot; monitorInterval=&quot;300&quot;&gt;</span><br><span class="line">    &lt;Appenders&gt;</span><br><span class="line">        &lt;Console name=&quot;Console&quot; target=&quot;SYSTEM_OUT&quot;&gt;</span><br><span class="line">            &lt;PatternLayout pattern=&quot;[%-5level] %d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%logger&#123;36&#125;.%t:%L] - %msg%n&quot;&gt;&lt;/PatternLayout&gt;</span><br><span class="line">        &lt;/Console&gt;</span><br><span class="line">        &lt;RollingRandomAccessFile name=&quot;AllFile&quot; fileName=&quot;$&#123;dfjz.log4j2.home&#125;/all.log&quot;</span><br><span class="line">                                 filePattern=&quot;$&#123;dfjz.log4j2.home&#125;/all-%d&#123;yyyy-MM-dd&#125;-%i.log&quot;&gt;</span><br><span class="line">            &lt;PatternLayout pattern=&quot;[%-5level] %d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%logger&#123;36&#125;.%t:%L] - %msg%n&quot;&gt;&lt;/PatternLayout&gt;</span><br><span class="line">            &lt;Policies&gt;</span><br><span class="line">                &lt;TimeBasedTriggeringPolicy interval=&quot;1&quot;&gt;&lt;/TimeBasedTriggeringPolicy&gt;</span><br><span class="line">                &lt;SizeBasedTriggeringPolicy size=&quot;500 MB&quot;&gt;&lt;/SizeBasedTriggeringPolicy&gt;</span><br><span class="line">            &lt;/Policies&gt;</span><br><span class="line">            &lt;DefaultRolloverStrategy max=&quot;30&quot;&gt;&lt;/DefaultRolloverStrategy&gt;</span><br><span class="line">            &lt;Filters&gt;</span><br><span class="line">                &lt;ThresholdFilter level=&quot;fatal&quot; onMatch=&quot;DENY&quot; onMismatch=&quot;NEUTRAL&quot;&gt;&lt;/ThresholdFilter&gt;</span><br><span class="line">                &lt;ThresholdFilter level=&quot;debug&quot; onMatch=&quot;ACCEPT&quot; onMismatch=&quot;DENY&quot;&gt;&lt;/ThresholdFilter&gt;</span><br><span class="line">            &lt;/Filters&gt;</span><br><span class="line">        &lt;/RollingRandomAccessFile&gt;</span><br><span class="line">        &lt;RollingRandomAccessFile name=&quot;ErrorFile&quot; fileName=&quot;$&#123;dfjz.log4j2.home&#125;/error.log&quot;</span><br><span class="line">                                 filePattern=&quot;$&#123;dfjz.log4j2.home&#125;/error-%d&#123;yyyy-MM-dd&#125;-%i.log&quot;&gt;</span><br><span class="line">            &lt;PatternLayout pattern=&quot;[%-5level] %d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%logger&#123;36&#125;.%t:%L] - %msg%n&quot;&gt;&lt;/PatternLayout&gt;</span><br><span class="line">            &lt;Policies&gt;</span><br><span class="line">                &lt;TimeBasedTriggeringPolicy interval=&quot;1&quot;&gt;&lt;/TimeBasedTriggeringPolicy&gt;</span><br><span class="line">                &lt;SizeBasedTriggeringPolicy size=&quot;500 MB&quot;&gt;&lt;/SizeBasedTriggeringPolicy&gt;</span><br><span class="line">            &lt;/Policies&gt;</span><br><span class="line">            &lt;DefaultRolloverStrategy max=&quot;30&quot;&gt;&lt;/DefaultRolloverStrategy&gt;</span><br><span class="line">            &lt;Filters&gt;</span><br><span class="line">                &lt;ThresholdFilter level=&quot;fatal&quot; onMatch=&quot;DENY&quot; onMismatch=&quot;NEUTRAL&quot;&gt;&lt;/ThresholdFilter&gt;</span><br><span class="line">                &lt;ThresholdFilter level=&quot;error&quot; onMatch=&quot;ACCEPT&quot; onMismatch=&quot;DENY&quot;&gt;&lt;/ThresholdFilter&gt;</span><br><span class="line">            &lt;/Filters&gt;</span><br><span class="line">        &lt;/RollingRandomAccessFile&gt;</span><br><span class="line"></span><br><span class="line">        &lt;SMTP name=&quot;Mail&quot; subject=&quot;$&#123;dfjz.app.name&#125; - 报警通知&quot; to=&quot;$&#123;dfjz.mail.receiver&#125;&quot; from=&quot;$&#123;dfjz.mail.username&#125;&quot;</span><br><span class="line">              smtpHost=&quot;$&#123;dfjz.mail.host&#125;&quot; smtpUsername=&quot;$&#123;dfjz.mail.username&#125;&quot; smtpPassword=&quot;$&#123;dfjz.mail.password&#125;&quot; bufferSize=&quot;$&#123;dfjz.mail.bufferSize&#125;&quot; &gt;</span><br><span class="line">        &lt;/SMTP&gt;</span><br><span class="line">        &lt;Async name=&quot;AsyncAll&quot;&gt;</span><br><span class="line">            &lt;AppenderRef ref=&quot;AllFile&quot;&gt;&lt;/AppenderRef&gt;</span><br><span class="line">        &lt;/Async&gt;</span><br><span class="line">        &lt;Async name=&quot;AsyncError&quot;&gt;</span><br><span class="line">            &lt;AppenderRef ref=&quot;ErrorFile&quot;&gt;&lt;/AppenderRef&gt;</span><br><span class="line">            &lt;AppenderRef ref=&quot;Mail&quot; &gt;&lt;/AppenderRef&gt;</span><br><span class="line">        &lt;/Async&gt;</span><br><span class="line"></span><br><span class="line">        &lt;Rewrite name=&quot;Rewrite&quot;&gt;</span><br><span class="line">            &lt;MyRewritePolicy&gt;&lt;/MyRewritePolicy&gt;</span><br><span class="line">            &lt;AppenderRef ref=&quot;Console&quot;&gt;&lt;/AppenderRef&gt;</span><br><span class="line">            &lt;AppenderRef ref=&quot;AsyncAll&quot;&gt;&lt;/AppenderRef&gt;</span><br><span class="line">            &lt;AppenderRef ref=&quot;AsyncError&quot;&gt;&lt;/AppenderRef&gt;</span><br><span class="line">        &lt;/Rewrite&gt;</span><br><span class="line">    &lt;/Appenders&gt;</span><br><span class="line">    &lt;Loggers&gt;</span><br><span class="line">        &lt;Root level=&quot;debug&quot; additivity=&quot;true&quot;&gt;</span><br><span class="line">            &lt;AppenderRef ref=&quot;Rewrite&quot;&gt;&lt;/AppenderRef&gt;</span><br><span class="line">        &lt;/Root&gt;</span><br><span class="line">    &lt;/Loggers&gt;</span><br><span class="line">&lt;/Configuration&gt;</span><br></pre></td></tr></table></figure><p>用以上配置就已经可以解决我们项目中的所有需求了，不对，还漏了一个，就是普通日志只打印info级别的，sql需要打印debug级别的。</p><h3 id="打印debug级别的SQL"><a href="#打印debug级别的SQL" class="headerlink" title="打印debug级别的SQL"></a>打印debug级别的SQL</h3><p>请参考我的另一篇文章<a href="https://kangyonggan.com/#article/41">使用Log4j2让项目输出info级别的日志和debug级别的sql</a></p><blockquote><p>觉得不错就赏点吧，你的支持是我进步的动力！</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;摸索过程&quot;&gt;&lt;a href=&quot;#摸索过程&quot; class=&quot;headerlink&quot; title=&quot;摸索过程&quot;&gt;&lt;/a&gt;摸索过程&lt;/h2&gt;&lt;p&gt;查看官方文档&lt;a href=&quot;https://logging.apache.org/log4j/2.0/manual/appenders.html#RewriteAppender&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://logging.apache.org/log4j/2.0/manual/appenders.html#RewriteAppender&lt;/a&gt;，官方文档中虽然有所介绍，但是没给demo，百度谷歌都很难查到此类文章，所有配置起来有一定难度。&lt;/p&gt;
    
    </summary>
    
      <category term="Java后台" scheme="http://kangyonggan.com/categories/Java%E5%90%8E%E5%8F%B0/"/>
    
    
      <category term="Java" scheme="http://kangyonggan.com/tags/Java/"/>
    
  </entry>
  
</feed>
